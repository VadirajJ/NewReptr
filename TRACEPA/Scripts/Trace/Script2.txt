CREATE PROCEDURE [dbo].[CheckColumnExists]
    @TableName VARCHAR(MAX)
    ,@ColumnName VARCHAR(MAX)
AS
    BEGIN
        IF EXISTS (SELECT name FROM sys.columns
                   WHERE sys.columns.object_id = (SELECT sys.tables.object_id
                                                  FROM sys.tables
                                                  WHERE UPPER(Name) = UPPER(@TableName))
                   AND UPPER(name) = UPPER(@ColumnName))
 
            BEGIN
                SELECT 'True'
            END
        ELSE
            BEGIN
                SELECT 'False'
            END
    END

/

CREATE PROCEDURE [dbo].[CheckTableExists]
    @TableName VARCHAR(MAX)
AS
    BEGIN
        IF EXISTS (SELECT Name FROM sys.tables
                   WHERE UPPER(Name) = UPPER(@TableName))
            BEGIN
                SELECT 'True'
            END
        ELSE
            BEGIN
                SELECT 'False'
            END
    END

/

create procedure [dbo].[GetDTPerDetails]  
(  
   @p_UsrId numeric,  
   @p_DtId numeric,  
   @p_Mem varchar(100),  
   @p_iRetLvl varchar Output  
)  
as   
  
      if exists(Select *  from View_DTPermissions where EDP_USRID = @p_UsrId  and EDP_PType='U' and Dot_DocTypeID=@p_DtId)  
             Begin  
          set @p_iRetLvl='U'  
          (Select *  from View_DTPermissions where EDP_USRID = @p_UsrId  and EDP_PType='U' and Dot_DocTypeID=@p_DtId)  
  
             End  
       else if exists(Select * from View_DTPermissions where  EDP_PType='G' and Dot_DocTypeID=@p_DtId and  EDP_GrpId in (select gld_grplvlid from sad_grplvl_members where gld_userid = @p_UsrId))  
          begin           
          set @p_iRetLvl='G'  
            (Select * from View_DTPermissions where  EDP_PType='G' and Dot_DocTypeID=@p_DtId and  EDP_GrpId in (select gld_grplvlid from sad_grplvl_members where gld_userid = @p_UsrId))  
            
          end  
       else if exists(Select * from View_DTPermissions where EDP_PType= 'E' and EDP_DocTypeID =@p_DtId and EDP_GrpID=0 and EDP_USRID=0)  
          Begin           
            set @p_iRetLvl='E'  
             (Select * from View_DTPermissions where EDP_PType= 'E' and EDP_DocTypeID =@p_DtId and EDP_GrpID=0 and EDP_USRID=0)  
         End  
/

CREATE procedure [dbo].[GetPageDetails]
(
  @PGE_BaseName int,
  @PGE_Cabinet varchar(200) output,
  @PGE_SubCabinet varchar(200) output,
  @PGE_Folder varchar(200) output,
  @PGE_Document_Type varchar(200) output,
  @PGE_FolID int output,
  @PGE_DocTypeID int output
)
  as
      if exists(Select PGE_BaseName from edt_page where PGE_BaseName=@PGE_BaseName)
        Begin
            set @pge_Cabinet=(Select CBN_Name from edt_Cabinet where CBN_ID =  (Select PGE_Cabinet from 
                              edt_page where PGE_BaseName=@PGE_BaseName))
            set @pge_SubCabinet=(Select CBN_Name from edt_Cabinet where CBN_ID =  (Select PGE_SubCabinet from 
                              edt_page where PGE_BaseName=@PGE_BaseName))
            set @pge_Folder=(Select Fol_Name from edt_Folder where Fol_FolId = (Select PGE_Folder from 
                              edt_page where PGE_BaseName=@PGE_BaseName))
            set @pge_document_type=(Select dot_docname from edt_document_type where dot_doctypeid=( Select pge_document_type
                   from edt_page where PGE_BaseName=@PGE_BaseName))
            set @PGE_FolID=(Select PGE_Folder from edt_page where PGE_BaseName=@PGE_BaseName)
         
            set @PGE_DocTypeID=(Select pge_document_type  from edt_page where PGE_BaseName=@PGE_BaseName)
        End

/

CREATE Procedure [dbo].[InOrUpDescriptor]
(
@DES_ID	int,		
@DESC_NAME varchar(100),
@DESC_NOTE varchar(200),
@DESC_DATATYPE varchar(25),
@DESC_SIZE varchar(3),
@DESC_CRBY int,
@DESC_UPDATEDBY int,
@DESC_STATUS varchar(1),
@DESC_CompId int,
@DESC_IPAddress varchar(50),
@iUpdateOrSave int Output,
@iOper Int Output 
)
	as 		
		if exists(select DES_ID from EDT_DESCRIPTIOS where DES_ID=@DES_ID And DESC_CompId=@DESC_CompId)
	begin 
		update EDT_DESCRIPTIOS set DESC_NAME=@DESC_NAME,DESC_NOTE=@DESC_NOTE,DESC_DATATYPE=@DESC_DATATYPE,DESC_SIZE=@DESC_SIZE,DESC_UPDATEDBY=@DESC_UPDATEDBY,DESC_UPDATEDON=GetDate(),
		DESC_STATUS=@DESC_STATUS,DESC_IPAddress=@DESC_IPAddress where DES_ID=@DES_ID And DESC_CompId=@DESC_CompId
		Set @iUpdateOrSave=2  
		set @iOper=@DES_ID	
	end		
else 
	begin		
	set @DES_ID=(select isnull(max(DES_ID)+1,1) from EDT_DESCRIPTIOS)
		insert into EDT_DESCRIPTIOS (DES_ID,DESC_NAME,DESC_NOTE,DESC_DATATYPE,DESC_SIZE,DESC_CRBY,DESC_CRON,DESC_STATUS,DESC_DelFlag,DESC_CompId,DESC_IPAddress)
		values
		(@DES_ID,@DESC_NAME,@DESC_NOTE,@DESC_DATATYPE,@DESC_SIZE,@DESC_CRBY,GetDate(),@DESC_STATUS,'W',@DESC_CompId,@DESC_IPAddress)	
		Set @iUpdateOrSave=3	
		set @iOper=@DES_ID
	end

/

CREATE procedure [dbo].[InOrUpDOCTYPEPER]
(	
@EDP_PID  int,
@EDP_DOCTYPEID	int,
@EDP_PTYPE varchar(1),
@EDP_GRPID smallint,
@EDP_USRID smallint,
@EDP_INDEX tinyint,
@EDP_SEARCH	tinyint,	
@EDP_MFY_TYPE tinyint,
@EDP_MFY_DOCUMENT tinyint,
@EDP_DEL_DOCUMENT tinyint,	
@EDP_OTHER tinyint,
@EDP_CRBY int,
@EDP_UPDATEDBY int,
@EDP_CompId int,
@EDP_IPAddress varchar(50),
@iUpdateOrSave int Output,  
@iOper int output
)
as
	if @EDP_PTYPE='U'
       if exists(select Edp_doctypeid from EDT_DOCTYPE_PERMISSION where Edp_doctypeid=@EDP_DOCTYPEID and EDP_GRPID=@EDP_GRPID and EDP_USRID=@EDP_USRID and EDP_PTYPE=@EDP_PTYPE And EDP_CompId=@EDP_CompId)
            begin	
               update EDT_DOCTYPE_PERMISSION set EDP_PTYPE=@EDP_PTYPE,EDP_GRPID=@EDP_GRPID,EDP_USRID=@EDP_USRID,EDP_INDEX=@EDP_INDEX,EDP_SEARCH=@EDP_SEARCH,
			   EDP_MFY_TYPE=@EDP_MFY_TYPE,EDP_MFY_DOCUMENT=@EDP_MFY_DOCUMENT,EDP_DEL_DOCUMENT=@EDP_DEL_DOCUMENT,EDP_OTHER=@EDP_OTHER,EDP_UPDATEDBY=@EDP_UPDATEDBY,EDP_UPDATEDON=GetDate(),EDP_Status='U',EDP_When='C',EDP_IPAddress=@EDP_IPAddress
			   where EDP_DOCTYPEID=@EDP_DOCTYPEID and EDP_USRID=@EDP_USRID and EDP_GRPID=@EDP_GRPID And EDP_CompId=@EDP_CompId
			   set @iUpdateOrSave=2  
               set @iOper=@Edp_doctypeid
            end
         Else
            begin
                set @EDP_PID=(select isnull(max(EDP_PID)+1,1) from EDT_DOCTYPE_PERMISSION)		
                insert into EDT_DOCTYPE_PERMISSION (EDP_PID,EDP_DOCTYPEID,EDP_PTYPE,EDP_GRPID,EDP_USRID,EDP_INDEX,EDP_SEARCH,EDP_MFY_TYPE,EDP_MFY_DOCUMENT,EDP_DEL_DOCUMENT,EDP_OTHER,EDP_CRBY,EDP_CRON,EDP_Status,EDP_When,EDP_CompId,EDP_IPAddress)						
                values(@EDP_PID,@EDP_DOCTYPEID,@EDP_PTYPE,@EDP_GRPID,@EDP_USRID,@EDP_INDEX,@EDP_SEARCH,@EDP_MFY_TYPE,@EDP_MFY_DOCUMENT,@EDP_DEL_DOCUMENT,@EDP_OTHER,@EDP_CRBY,GetDate(),'C','C',@EDP_CompId,@EDP_IPAddress)  
				set @iUpdateOrSave=3                				
                set @iOper=@EDP_PID      
             End  
      Else	    
 	 	  if exists(select Edp_doctypeid from EDT_DOCTYPE_PERMISSION where Edp_doctypeid=@EDP_DOCTYPEID and EDP_GRPID=@EDP_GRPID and EDP_PTYPE=@EDP_PTYPE And EDP_CompId=@EDP_CompId)
              begin		    
	                update EDT_DOCTYPE_PERMISSION set EDP_PTYPE=@EDP_PTYPE,EDP_GRPID=@EDP_GRPID,EDP_USRID=@EDP_USRID,EDP_INDEX=@EDP_INDEX,EDP_SEARCH=@EDP_SEARCH,
					EDP_MFY_TYPE=@EDP_MFY_TYPE,EDP_MFY_DOCUMENT=@EDP_MFY_DOCUMENT,EDP_DEL_DOCUMENT=@EDP_DEL_DOCUMENT,EDP_OTHER=@EDP_OTHER,EDP_UPDATEDBY=@EDP_UPDATEDBY,EDP_UPDATEDON=GetDate(),EDP_Status='U',EDP_When='C',EDP_IPAddress=@EDP_IPAddress
					where EDP_DOCTYPEID=@EDP_DOCTYPEID and EDP_USRID=@EDP_USRID and EDP_PTYPE=@EDP_PTYPE And EDP_CompId=@EDP_CompId 
					set @iUpdateOrSave=2 
                    set @iOper=@Edp_doctypeid
               End
          else
               begin
                      set @EDP_PID=(select isnull(max(EDP_PID)+1,1) from EDT_DOCTYPE_PERMISSION)	        	   
                      insert into EDT_DOCTYPE_PERMISSION (EDP_PID,EDP_DOCTYPEID,EDP_PTYPE,EDP_GRPID,EDP_USRID,EDP_INDEX,EDP_SEARCH,EDP_MFY_TYPE,EDP_MFY_DOCUMENT,EDP_DEL_DOCUMENT,EDP_OTHER,EDP_CRBY,EDP_CRON,EDP_Status,EDP_When,EDP_CompId,EDP_IPAddress)				
		
	                  values(@EDP_PID,@EDP_DOCTYPEID,@EDP_PTYPE,@EDP_GRPID,@EDP_USRID,@EDP_INDEX,@EDP_SEARCH,@EDP_MFY_TYPE,@EDP_MFY_DOCUMENT,@EDP_DEL_DOCUMENT,@EDP_OTHER,@EDP_CRBY,GetDate(),'C','C',@EDP_CompId,@EDP_IPAddress)
					  set @iUpdateOrSave=3  
                   	  set @iOper=@EDP_PID  
          end 

/

CREATE procedure [dbo].[InOrUpFolPermissions]  
(  
 @EFP_Id int, 
 @EFP_PTYPE varchar(2),  
 @EFP_GRPID int,   
 @EFP_USRID int,  
 @EFP_Mod_Folder int,
 @EFP_DEL_FOLDER int,  
 @EFP_View_Fol int,
 @EFP_MOD_Doc int,    
 @EFP_DEL_Doc int,
 @EFP_CRT_Doc int,  
 @EFP_Search int, 
 @EFP_INDEX int,    
 @EFP_Export int,  
 @EFP_OTHER int,  
 @EFP_FolId int,   
 @iUpdateOrSave int Output,     
 @iOper int Output   
)  
    as  
         if exists(Select EFP_ID from edt_Folder_Permission where EFP_FolId=@EFP_FolId and EFP_GRPID=@EFP_GRPID and EFP_USRID=@EFP_USRID)  
           Begin  
               update EDT_Folder_Permission set EFP_PType=@EFP_PType, EFP_GRPID=@EFP_GRPID, EFP_USRID=@EFP_USRID, EFP_MOD_FOLDER=@EFP_MOD_FOLDER, 
			   EFP_DEL_FOLDER=@EFP_DEL_FOLDER, EFP_VIEW_Fol=@EFP_VIEW_Fol, EFP_MOD_DOC=@EFP_MOD_DOC, EFP_DEL_DOC=@EFP_DEL_DOC, EFP_CRT_DOC=@EFP_CRT_DOC, 
			   EFP_SEARCH=@EFP_SEARCH, EFP_INDEX=@EFP_INDEX, EFP_EXPORT=@EFP_EXPORT, EFP_OTHER=@EFP_OTHER,  EFP_FolId=@EFP_FolId
			      
                where  EFP_FolId=@EFP_FolId and EFP_GRPID=@EFP_GRPID and EFP_USRID=@EFP_USRID
                set @iUpdateOrSave=2      
				set @iOper = @EFP_ID 
           End  
	    else  
		   Begin  
                set @EFP_ID=(Select isnull(max(EFP_ID)+1,1) from edt_Folder_permission)  
                Insert into edt_Folder_permission(EFP_ID, EFP_PType, EFP_GRPID, EFP_USRID, EFP_MOD_FOLDER, EFP_DEL_FOLDER, EFP_VIEW_Fol, EFP_MOD_DOC,
			    EFP_DEL_DOC, EFP_CRT_DOC,  EFP_SEARCH, EFP_INDEX, EFP_EXPORT, EFP_OTHER,  EFP_FolId)values   
			  
                (@EFP_ID, @EFP_PType, @EFP_GRPID, @EFP_USRID, @EFP_MOD_FOLDER, @EFP_DEL_FOLDER, @EFP_VIEW_Fol, @EFP_MOD_DOC,
			     @EFP_DEL_DOC, @EFP_CRT_DOC, @EFP_SEARCH, @EFP_INDEX, @EFP_EXPORT, @EFP_OTHER, @EFP_FolId)   

                set @iUpdateOrSave=3       
				set @iOper = @EFP_ID     
           End               

/

CREATE procedure [dbo].[SaveOrUpFolderDetails]  
(  
   @FOL_FolId int,  
   @FOL_Name varchar(500),  
   @FOL_Note varchar(500),  
   @FOL_Cabinet int, 
   @FOL_CreatedBy int, 
   @FOL_UpdatedBy int, 
   @FOL_Status varchar(2),  
   @FOL_Delflag varchar(2),  
   @Fol_CompId int,
   @iUpdateOrSave int Output,  
   @iOper int Output  
)  
   as  
      if exists(Select * from edt_folder where FOL_FolId=@Fol_FolID)  
           Begin  
              Update edt_folder  set FOL_Name=@Fol_Name,Fol_Note=@Fol_Note, FOL_UpdatedBy=@FOL_UpdatedBy,FOL_UpdatedOn=Getdate(),
			  FOL_Status=@FOL_Status,FOL_Delflag=@FOL_Delflag
			  where FOL_FolId=@FOL_FolId  
			    Set @iUpdateOrSave=2
                Set @iOper=@Fol_FolID                
            End  
         else  
            Begin  
               Declare @iMax int  
               Declare @iFolCount int    
              set @iMax=(Select isnull(max(Fol_FolID+1),1) from edt_Folder)  
                Insert into edt_Folder(FOL_FolId,FOL_Name,FOL_Note,FOL_Cabinet,FOL_CreatedBy,FOL_CreatedOn,FOL_Status,fol_Delflag,Fol_CompId)values
				  
               (@iMax,@FOL_Name,@FOL_Note,@FOL_Cabinet,@FOL_CreatedBy,GetDate(),@FOL_Status,@fol_Delflag,@Fol_CompId)  
                Set @iFolCount=(Select count(isnull(FOL_FolID,0))  from edt_folder where Fol_cabinet=@Fol_Cabinet) 
				set @iUpdateOrSave=3    
                Set @iOper=@iMax             
                Update edt_cabinet set CBN_FolderCount=@iFolCount where CBN_ID=@Fol_cabinet  
            End 

/

CREATE Procedure [dbo].[sp_Acc_Changes_Inventories]           
(              
@CI_PKID int,              
@CI_FinancialYear int,              
@CI_CustId int,  
@CI_Orgtype int, 
@CI_Head int, 
@CI_Group int, 
@CI_Subgroup int,
@CI_Glid int,
@CI_SubGlid int,            
@CI_Note int,  
@CI_OBValues float, 
@CI_CBValues float,
@CI_DATE datetime,               
@CI_Status Varchar(25),                      
@CI_Delflag Varchar(25),              
@CI_CrBy int, 
@CI_UpdatedBy int, 
@CI_SavedBy int,
@CI_Approvedby int,
@CI_IPAddress  Varchar(25), 
@CI_CompID int,
@iUpdateOrSave int Output,              
@iOper int Output                
)     
As                    
if exists(select CI_PKID from Acc_Changes_Inventories where CI_PKID=@CI_PKID and CI_CompID=@CI_CompID)                
Begin  
set @CI_PKID=(select CI_PKID from Acc_Changes_Inventories where CI_PKID=@CI_PKID and CI_CompID=@CI_CompID)                
Update Acc_Changes_Inventories set CI_UpdatedBy=@CI_UpdatedBy,CI_Updatedon=Getdate(),CI_CBValues=@CI_CBValues 
where CI_PKID=@CI_PKID and CI_CompID=@CI_CompID             
set @iUpdateOrSave=2             
set @iOper =@CI_PKID      
END  
Else        
Begin  
set @CI_PKID=(select IsNull(Max(CI_PKID)+1,1) from Acc_Changes_Inventories)                
insert into Acc_Changes_Inventories(CI_PKID,CI_FinancialYear,CI_CustId,CI_Orgtype,CI_Head,CI_Group,CI_Subgroup,
CI_Glid,CI_SubGlid,CI_Note,CI_OBValues,CI_CBValues,CI_DATE,CI_Status,CI_Delflag,CI_CrBy,CI_CrOn,CI_SavedBy,CI_IPAddress,CI_CompID)              
values(@CI_PKID,@CI_FinancialYear,@CI_CustId,@CI_Orgtype,@CI_Head,@CI_Group,@CI_Subgroup,
@CI_Glid,@CI_SubGlid,@CI_Note,@CI_OBValues,@CI_CBValues,@CI_DATE,@CI_Status,@CI_Delflag,@CI_CrBy,Getdate(),@CI_SavedBy,@CI_IPAddress,@CI_CompID)               
set @iUpdateOrSave=3               
set @iOper = @CI_PKID  
END 

/

CREATE Procedure [dbo].[sp_Acc_Seperate_Schedule]           
(              
@SS_PKID int,              
@SS_FinancialYear int,              
@SS_CustId int,  
@SS_Orgtype int, 
@SS_Group int, 
@SS_Particulars Varchar(500), 
@SS_Values float,
@SS_DATE datetime,               
@SS_Status Varchar(25),                      
@SS_Delflag Varchar(25),              
@SS_CrBy int, 
@SS_UpdatedBy int, 
@SS_Approvedby int,
@SS_IPAddress  Varchar(25), 
@SS_CompID int,
@iUpdateOrSave int Output,              
@iOper int Output                
)     
As                    
if exists(select SS_PKID from Acc_Seperate_Schedule where SS_PKID=@SS_PKID and SS_CompID=@SS_CompID)                
Begin  
set @SS_PKID=(select SS_PKID from Acc_Seperate_Schedule where SS_PKID=@SS_PKID and SS_CompID=@SS_CompID)               
Update Acc_Seperate_Schedule set SS_UpdatedBy=@SS_UpdatedBy,SS_Updatedon=Getdate(),SS_Particulars=@SS_Particulars,SS_Values=@SS_Values
where SS_PKID=@SS_PKID and SS_CompID=@SS_CompID          
set @iUpdateOrSave=2             
set @iOper = @SS_PKID    
END  
Else        
Begin  
set @SS_PKID=(select IsNull(Max(SS_PKID)+1,1) from Acc_Seperate_Schedule)                
insert into Acc_Seperate_Schedule(SS_PKID,SS_FinancialYear,SS_CustId,SS_Orgtype,SS_Group,SS_Particulars,
SS_Values,SS_DATE,SS_Status,SS_Delflag,SS_CrBy,SS_CrOn,SS_UpdatedBy,SS_UpdatedOn,SS_IPAddress,SS_CompID)              
values(@SS_PKID,@SS_FinancialYear,@SS_CustId,@SS_Orgtype,@SS_Group,@SS_Particulars,
@SS_Values,@SS_DATE,@SS_Status,@SS_Delflag,@SS_CrBy,getdate(),@SS_UpdatedBy,getdate(),@SS_IPAddress,@SS_CompID)
set @iUpdateOrSave=3               
set @iOper = @SS_PKID  
END 

/

CREATE  procedure [dbo].[spAcc_AsetDepreciation]
(

@ADep_ID int,
	@ADep_AssetID int,
	@ADep_Item varchar(250),
	@ADep_RateofDep money,
	@ADep_OPBForYR money,
	@ADep_DepreciationforFY money,
	@ADep_WrittenDownValue money,
	@ADep_ClosingDate datetime,
	@ADep_CreatedBy int,
	@ADep_CreatedOn datetime,
	@ADep_UpdatedBy int,
	@ADep_UpdatedOn datetime,
	@ADep_ApprovedBy int,
	@ADep_ApprovedOn datetime,
	@ADep_DelFlag char(1),
	@ADep_Status varchar(2),
	@ADep_YearID int,
	@ADep_CompID int,
	@ADep_CustId int,
	@ADep_Location int,
	@ADep_Division int,
	@ADep_Department int,
	@ADep_Bay int,
	@ADep_TransType int,
	@ADep_Method int,
	@ADep_Opeartion varchar(1),
	@ADep_IPAddress varchar(25),
	@iUpdateOrSave int Output,    
    @iOper int Output   

)
as                       
  if exists(select ADep_ID from Acc_AssetDepreciation where ADep_ID=@ADep_ID and ADep_YearID=@ADep_YearID And ADep_CompID=@ADep_CompID)                        
   begin  
   update Acc_AssetDepreciation Set ADep_AssetID=@ADep_AssetID,ADep_Item=@ADep_Item,ADep_RateofDep=@ADep_RateofDep,ADep_OPBForYR=@ADep_OPBForYR,
  ADep_DepreciationforFY=@ADep_DepreciationforFY,ADep_WrittenDownValue=@ADep_WrittenDownValue,ADep_ClosingDate=@ADep_ClosingDate,ADep_UpdatedBy=@ADep_UpdatedBy,
ADep_UpdatedOn=getdate(),ADep_DelFlag=@ADep_DelFlag,ADep_Status=@ADep_Status,ADep_YearID=@ADep_YearID,ADep_CompID=@ADep_CompID,ADep_CustId=@ADep_CustId,
ADep_Location=@ADep_Location,ADep_Division=@ADep_Division,ADep_Department=@ADep_Department,ADep_Bay=@ADep_Bay,ADep_TransType=@ADep_TransType,ADep_Method=@ADep_Method,
ADep_ApprovedBy=@ADep_ApprovedBy,ADep_ApprovedOn=@ADep_ApprovedOn,ADep_Opeartion=@ADep_Opeartion,ADep_IPAddress=@ADep_IPAddress 
   Where ADep_ID=@ADep_ID and ADep_YearID=@ADep_YearID And ADep_CompID=@ADep_CompID
  set @iUpdateOrSave=2                    
 set @iOper = @ADep_ID

 end                              
 else                   
 begin       
 
  set @ADep_ID=(select isnull(max(ADep_ID)+1,1) from Acc_AssetDepreciation)                  
  Insert into Acc_AssetDepreciation (ADep_ID,ADep_AssetID,ADep_Item,ADep_RateofDep,ADep_OPBForYR,ADep_DepreciationforFY,ADep_WrittenDownValue,ADep_ClosingDate,ADep_CreatedBy,ADep_CreatedOn,
ADep_DelFlag,ADep_Status,ADep_YearID,ADep_CompID,ADep_CustId,ADep_Location,ADep_Division,ADep_Department,ADep_Bay,ADep_TransType,ADep_Method,ADep_Opeartion,ADep_IPAddress)

 values
(@ADep_ID,@ADep_AssetID,@ADep_Item,@ADep_RateofDep,@ADep_OPBForYR,@ADep_DepreciationforFY,@ADep_WrittenDownValue,
@ADep_ClosingDate,@ADep_CreatedBy,@ADep_CreatedOn,@ADep_DelFlag,@ADep_Status,@ADep_YearID,@ADep_CompID,@ADep_CustId,@ADep_Location,@ADep_Division,@ADep_Department,@ADep_Bay,@ADep_TransType,@ADep_Method,@ADep_Opeartion,@ADep_IPAddress) 

  
  set @iUpdateOrSave=3                 
  set @iOper = @ADep_ID                     
    end 

/

CREATE  procedure [dbo].[spAcc_AssetDepITAct]
(

    @ADITAct_ID int,
	@ADITAct_AssetClassID int,
    @ADITAct_RateofDep money,
    @ADITAct_OPBForYR money,
	@ADITAct_DepreciationforFY money,
	@ADITAct_WrittenDownValue money,
	@ADITAct_BfrQtrAmount money,
	@ADITAct_BfrQtrDep money,
	@ADITAct_AftQtrAmount money,
	@ADITAct_AftQtrDep money,
	@ADITAct_DelAmount money,
	@ADITAct_CreatedBy int,
	@ADITAct_CreatedOn datetime,
	@ADITAct_UpdatedBy int,
	@ADITAct_UpdatedOn datetime,
	@ADITAct_ApprovedBy int,
	@ADITAct_ApprovedOn datetime,
	@ADITAct_DelFlag char(1),
	@ADITAct_Status varchar(2),
	@ADITAct_YearID int,
	@ADITAct_CompID int,
	@ADITAct_CustId int,
	@ADITAct_Opeartion varchar(1),
	@ADITAct_IPAddress varchar(25),
	@iUpdateOrSave int Output,    
    @iOper int Output   

)
as                       
  if exists(select ADITAct_ID from Acc_AssetDepITAct where ADITAct_ID=@ADITAct_ID and ADITAct_YearID=@ADITAct_YearID And ADITAct_CompID=@ADITAct_CompID)                        
   begin  
   update Acc_AssetDepITAct Set ADITAct_AssetClassID=@ADITAct_AssetClassID,ADITAct_RateofDep=@ADITAct_RateofDep,ADITAct_OPBForYR=@ADITAct_OPBForYR,
  ADITAct_DepreciationforFY=@ADITAct_DepreciationforFY,ADITAct_WrittenDownValue=@ADITAct_WrittenDownValue,ADITAct_BfrQtrAmount=@ADITAct_BfrQtrAmount,ADITAct_BfrQtrDep=@ADITAct_BfrQtrDep,
 ADITAct_AftQtrAmount=@ADITAct_AftQtrAmount,ADITAct_AftQtrDep=@ADITAct_AftQtrDep,ADITAct_DelAmount=@ADITAct_DelAmount,ADITAct_UpdatedBy=@ADITAct_UpdatedBy,
ADITAct_UpdatedOn=getdate(),ADITAct_DelFlag=@ADITAct_DelFlag,ADITAct_Status=@ADITAct_Status,ADITAct_YearID=@ADITAct_YearID,ADITAct_CompID=@ADITAct_CompID,ADITAct_CustId=@ADITAct_CustId,
ADITAct_ApprovedBy=@ADITAct_ApprovedBy,ADITAct_ApprovedOn=@ADITAct_ApprovedOn,ADITAct_Opeartion=@ADITAct_Opeartion,ADITAct_IPAddress=@ADITAct_IPAddress 
   Where ADITAct_ID=@ADITAct_ID and ADITAct_YearID=@ADITAct_YearID And ADITAct_CompID=@ADITAct_CompID
  set @iUpdateOrSave=2                    
 set @iOper = @ADITAct_ID

 end                              
 else                   
 begin       
 
  set @ADITAct_ID=(select isnull(max(ADITAct_ID)+1,1) from Acc_AssetDepITAct)                  
  Insert into Acc_AssetDepITAct (ADITAct_ID,ADITAct_AssetClassID,ADITAct_RateofDep,ADITAct_OPBForYR,ADITAct_DepreciationforFY,ADITAct_WrittenDownValue,ADITAct_BfrQtrAmount,
ADITAct_BfrQtrDep,ADITAct_AftQtrAmount,ADITAct_AftQtrDep,ADITAct_DelAmount,ADITAct_CreatedBy,ADITAct_CreatedOn,ADITAct_DelFlag,ADITAct_Status,ADITAct_YearID,ADITAct_CompID,ADITAct_CustId,ADITAct_Opeartion,ADITAct_IPAddress)

 values
(@ADITAct_ID,@ADITAct_AssetClassID,@ADITAct_RateofDep,@ADITAct_OPBForYR,@ADITAct_DepreciationforFY,@ADITAct_WrittenDownValue,@ADITAct_BfrQtrAmount,@ADITAct_BfrQtrDep,
@ADITAct_AftQtrAmount,@ADITAct_AftQtrDep,@ADITAct_DelAmount,@ADITAct_CreatedBy,@ADITAct_CreatedOn,@ADITAct_DelFlag,@ADITAct_Status,@ADITAct_YearID,@ADITAct_CompID,@ADITAct_CustId,@ADITAct_Opeartion,@ADITAct_IPAddress) 

 set @iUpdateOrSave=3                 
 set @iOper = @ADITAct_ID                     
 end   

/

CREATE procedure [dbo].[spAcc_AssetLocationSetup](

     @LS_ID int,
	 @LS_Description varchar(500),
	  @LS_DescCode varchar(500),
	 @LS_Code varchar(500),
	 @LS_LevelCode int,
	 @LS_ParentID int,
     @LS_CreatedBy int,
	 @LS_CreatedOn datetime,
	 @LS_UpdatedBy int,
	 @LS_UpdatedOn datetime,
	 @LS_DelFlag char(1),
	 @LS_Status varchar(50),
	 @LS_YearID int,
	 @LS_CompID int,
	 @LS_CustId int,
	 @LS_ApprovedBy int,
	 @LS_ApprovedOn datetime,
     @LS_Opeartion varchar(1),
	 @LS_IPAddress varchar(25),
	 @iUpdateOrSave int Output,    
     @iOper int Output   
)
as                       
  if exists(select LS_ID from Acc_AssetLocationSetup where LS_ID=@LS_ID and LS_CompID=@LS_CompID)                        
   begin  
   update Acc_AssetLocationSetup Set LS_UpdatedBy=@LS_UpdatedBy,LS_UpdatedOn=getdate(),
   LS_DelFlag=@LS_DelFlag,LS_Status=@LS_Status,LS_YearID=@LS_YearID,LS_CompID=@LS_CompID,LS_CustId=@LS_CustId,
   LS_Opeartion=@LS_Opeartion,LS_IPAddress=@LS_IPAddress, 
   LS_Code=@LS_Code,LS_LevelCode=@LS_LevelCode,LS_Description=@LS_Description,LS_DescCode=@LS_DescCode,LS_ParentID=@LS_ParentID,LS_ApprovedBy=@LS_ApprovedBy,LS_ApprovedOn=getdate()
   where LS_CompID=@LS_CompID and LS_ID=@LS_ID
  set @iUpdateOrSave=2                    
    set @iOper = @LS_ID 
 end                              
  else                                    
        begin              
  set @LS_ID=(select isnull(max(LS_ID)+1,1) from Acc_AssetLocationSetup)                  
  Insert into Acc_AssetLocationSetup(LS_ID,LS_Description,LS_DescCode,LS_Code,LS_LevelCode,LS_ParentID,
  LS_CreatedBy,LS_CreatedOn,LS_DelFlag,LS_Status,LS_YearID,LS_CompID,LS_CustId,LS_Opeartion,LS_IPAddress)
 values
(@LS_ID,@LS_Description,@LS_DescCode,@LS_Code,@LS_LevelCode,@LS_ParentID, @LS_CreatedBy,getdate(),@LS_DelFlag,@LS_Status,
 @LS_YearID,@LS_CompID,@LS_CustId,@LS_Opeartion,@LS_IPAddress)          
  set @iUpdateOrSave=3                 
  set @iOper = @LS_ID                     
    end 

/

CREATE  procedure [dbo].[spAcc_AssetMaster](

     @AM_ID int,
	 @AM_Description varchar(500),
	 @AM_Code varchar(500),
	 @AM_LevelCode int,
	 @AM_ParentID int,
     @AM_WDVITAct money,
	 @AM_ITRate money,
	 @AM_ResidualValue int,
	 @AM_CreatedBy int,
	 @AM_CreatedOn datetime,
	 @AM_UpdatedBy int,
	 @AM_UpdatedOn datetime,
	 @AM_DelFlag char(1),
	 @AM_Status varchar(50),
	 @AM_YearID int,
	 @AM_CompID int,
	 @AM_CustId int,
	 @AM_ApprovedBy int,
	 @AM_ApprovedOn datetime,
     @AM_Opeartion varchar(1),
	 @AM_IPAddress varchar(25),
	 @iUpdateOrSave int Output,    
     @iOper int Output   
)
as                       
  if exists(select AM_ID from Acc_AssetMaster where AM_ID=@AM_ID and AM_CompID=@AM_CompID)                        
   begin  
   update Acc_AssetMaster Set AM_UpdatedBy=@AM_UpdatedBy,AM_UpdatedOn=getdate(),
   AM_DelFlag=@AM_DelFlag,AM_Status=@AM_Status,AM_YearID=@AM_YearID,AM_CompID=@AM_CompID,AM_CustId=@AM_CustId,
   AM_WDVITAct=@AM_WDVITAct,AM_Opeartion=@AM_Opeartion,AM_IPAddress=@AM_IPAddress,AM_ITRate=@AM_ITRate,AM_ResidualValue=@AM_ResidualValue, 
   AM_Code=@AM_Code,AM_LevelCode=@AM_LevelCode,AM_Description=@AM_Description,AM_ParentID=@AM_ParentID,AM_ApprovedBy=@AM_ApprovedBy,AM_ApprovedOn=getdate()
   where  AM_CompID=@AM_CompID and AM_ID=@AM_ID
  set @iUpdateOrSave=2                    
    set @iOper = @AM_ID 
 end                              
  else                                    
        begin              
  set @AM_ID=(select isnull(max(AM_ID)+1,1) from Acc_AssetMaster)                  
  Insert into Acc_AssetMaster(AM_ID,AM_Description,AM_Code,AM_LevelCode,AM_ParentID,AM_WDVITAct,AM_ITRate,AM_ResidualValue,
  AM_CreatedBy,AM_CreatedOn,AM_DelFlag,AM_Status,AM_YearID,AM_CompID,AM_CustId,AM_Opeartion,AM_IPAddress)
 values
(@AM_ID,@AM_Description,@AM_Code,@AM_LevelCode,@AM_ParentID,@AM_WDVITAct,@AM_ITRate,@AM_ResidualValue,
  @AM_CreatedBy,getdate(),@AM_DelFlag,@AM_Status,@AM_YearID,@AM_CompID,@AM_CustId,@AM_Opeartion,@AM_IPAddress)          
  set @iUpdateOrSave=3                 
  set @iOper = @AM_ID                     
    end 

	/

CREATE  Procedure [dbo].[spAcc_FixedAssetAdditionDel]        
(
    @AFAA_ID int,
	@AFAA_AssetTrType int ,
	@AFAA_CurrencyType int ,
	@AFAA_CurrencyAmnt money ,
	@AFAA_Location int,
	@AFAA_Division int,
	@AFAA_Department int,
	@AFAA_Bay int,
	@AFAA_ActualLocn varchar(100) ,
	@AFAA_SupplierName int ,
	@AFAA_SupplierCode int ,
	@AFAA_TrType int ,
	@AFAA_AssetType varchar(50) ,
	@AFAA_AssetNo varchar(50) ,
	@AFAA_AssetRefNo varchar(50) ,	
	@AFAA_Description varchar(500) ,
	@AFAA_ItemCode varchar(50) ,
	@AFAA_ItemDescription varchar(500) ,
	@AFAA_Quantity int ,
	@AFAA_CommissionDate datetime ,
	@AFAA_PurchaseDate datetime ,	
	@AFAA_AssetAge money ,
	@AFAA_AssetAmount money ,
    @AFAA_FYAmount money,
	@AFAA_DepreAmount money,
	@AFAA_AssetDelID int ,
	@AFAA_AssetDelDate datetime ,
	@AFAA_AssetDeletionDate datetime ,
	@AFAA_Assetvalue money ,
	@AFAA_AssetDesc varchar(500) ,
	@AFAA_CreatedBy int ,
    @AFAA_CreatedOn datetime ,
    @AFAA_UpdatedBy int ,
    @AFAA_UpdatedOn datetime ,   
    @AFAA_Status varchar(25) ,
	@AFAA_Delflag char(1) ,
    @AFAA_YearID int ,
    @AFAA_CompID int ,
    @AFAA_Operation varchar(1) ,
    @AFAA_IPAddress varchar(100),
	@AFAA_AddnType varchar(5),
	@AFAA_DelnType varchar(5),
	@AFAA_Depreciation money,
	@AFAA_AddtnDate datetime,
	@AFAA_ApprovedBy int,
	@AFAA_ApprovedOn datetime,
	@AFAA_ItemType int,
	@AFAA_CustId int,
@iUpdateOrSave int Output,      
@iOper int Output      
)          
as
 if exists(select AFAA_ID from Acc_FixedAssetAdditionDel where AFAA_ID=@AFAA_ID and AFAA_CompID=@AFAA_CompID and AFAA_YearID=@AFAA_YearID)              
     begin                	            
		Update Acc_FixedAssetAdditionDel set AFAA_AssetTrType=@AFAA_AssetTrType,AFAA_CurrencyType=@AFAA_CurrencyType,
	AFAA_CurrencyAmnt=@AFAA_CurrencyAmnt,AFAA_Location=@AFAA_Location,AFAA_Division=@AFAA_Division,AFAA_Department=@AFAA_Department,AFAA_Bay=@AFAA_Bay,
	AFAA_ActualLocn=@AFAA_ActualLocn,AFAA_SupplierName=@AFAA_SupplierName,AFAA_SupplierCode=@AFAA_SupplierCode,
	AFAA_TrType=@AFAA_TrType,AFAA_AssetType=@AFAA_AssetType,AFAA_AssetRefNo=@AFAA_AssetRefNo,AFAA_Description=@AFAA_Description,AFAA_ItemCode=@AFAA_ItemCode,
AFAA_ItemDescription=@AFAA_ItemDescription,AFAA_Quantity=@AFAA_Quantity,AFAA_CommissionDate=@AFAA_CommissionDate,
AFAA_PurchaseDate=@AFAA_PurchaseDate,AFAA_AssetAge=@AFAA_AssetAge,AFAA_AssetAmount=@AFAA_AssetAmount,AFAA_FYAmount=@AFAA_FYAmount,AFAA_DepreAmount=@AFAA_DepreAmount,AFAA_UpdatedBy=@AFAA_UpdatedBy,
AFAA_UpdatedOn=@AFAA_UpdatedOn,AFAA_Operation=@AFAA_Operation,AFAA_AddnType=@AFAA_AddnType,AFAA_DelnType=@AFAA_DelnType,
AFAA_Depreciation=@AFAA_Depreciation,AFAA_AddtnDate=@AFAA_AddtnDate,AFAA_ApprovedBy=@AFAA_ApprovedBy,AFAA_ApprovedOn=@AFAA_ApprovedOn,AFAA_ItemType=@AFAA_ItemType,AFAA_CustId=@AFAA_CustId
		Where AFAA_ID=@AFAA_ID and AFAA_CompID=@AFAA_CompID and AFAA_YearID=@AFAA_YearID
		set @iUpdateOrSave=2          
		set @iOper = @AFAA_ID
	 end      
	 else         
	  begin        
		set @AFAA_ID=(select isnull(max(AFAA_ID)+1,1) from Acc_FixedAssetAdditionDel)   
		Insert into Acc_FixedAssetAdditionDel (AFAA_ID,AFAA_AssetTrType,AFAA_CurrencyType,AFAA_CurrencyAmnt,AFAA_Location,AFAA_Division,AFAA_Department,
AFAA_Bay,AFAA_ActualLocn,AFAA_SupplierName,AFAA_SupplierCode,AFAA_TrType,AFAA_AssetType,AFAA_AssetNo,AFAA_AssetRefNo,AFAA_Description,AFAA_ItemCode,
AFAA_ItemDescription,AFAA_Quantity,AFAA_CommissionDate,AFAA_PurchaseDate,AFAA_AssetAge,AFAA_AssetAmount,AFAA_FYAmount,AFAA_DepreAmount,AFAA_AssetDelID,AFAA_AssetDelDate,
AFAA_AssetDeletionDate,AFAA_Assetvalue,AFAA_AssetDesc,AFAA_CreatedBy,AFAA_CreatedOn,
AFAA_Status,AFAA_Delflag,AFAA_YearID,AFAA_CompID,AFAA_Operation,AFAA_IPAddress,AFAA_AddnType,AFAA_DelnType,AFAA_Depreciation,AFAA_AddtnDate,AFAA_ItemType,AFAA_CustId)
		values(@AFAA_ID,@AFAA_AssetTrType,@AFAA_CurrencyType,@AFAA_CurrencyAmnt,@AFAA_Location,@AFAA_Division,@AFAA_Department,
@AFAA_Bay,@AFAA_ActualLocn,@AFAA_SupplierName,@AFAA_SupplierCode,@AFAA_TrType,@AFAA_AssetType,@AFAA_AssetNo,@AFAA_AssetRefNo,@AFAA_Description,@AFAA_ItemCode,
@AFAA_ItemDescription,@AFAA_Quantity,@AFAA_CommissionDate,@AFAA_PurchaseDate,@AFAA_AssetAge,@AFAA_AssetAmount,@AFAA_FYAmount,@AFAA_DepreAmount,@AFAA_AssetDelID,@AFAA_AssetDelDate,
@AFAA_AssetDeletionDate,@AFAA_Assetvalue,@AFAA_AssetDesc,@AFAA_CreatedBy,@AFAA_CreatedOn,
@AFAA_Status,@AFAA_Delflag,@AFAA_YearID,@AFAA_CompID,'C',@AFAA_IPAddress,@AFAA_AddnType,@AFAA_DelnType,@AFAA_Depreciation,@AFAA_AddtnDate,@AFAA_ItemType,@AFAA_CustId)
		set @iUpdateOrSave=3       
		set @iOper = @AFAA_ID        
  end

/

CREATE Procedure [dbo].[spAcc_FixedAssetAdditionDetails]           
(              
@FAAD_PKID int,
@FAAD_MasID int,
@FAAD_Location int,
@FAAD_Division int,
@FAAD_Department int,
@FAAD_Bay int,
@FAAD_Particulars varchar(250),
@FAAD_DocNo varchar(25),
@FAAD_DocDate datetime,
@FAAD_chkCost int,
@FAAD_BasicCost money,
@FAAD_TaxAmount money,
@FAAD_Total money,
@FAAD_AssetValue money,
@FAAD_CreatedBy int,
@FAAD_CreatedOn  datetime,
@FAAD_UpdatedBy int,
@FAAD_UpdatedOn datetime,
@FAAD_IPAddress varchar(25),
@FAAD_CompID int,
@FAAD_Status varchar(2),
@FAAD_AssetType int,
@FAAD_ItemType int,
@FAAD_SupplierName varchar(50),
@FAAD_CustId int,
@FAAD_YearID int,
@iUpdateOrSave int Output,              
@iOper int Output                
)     
As                    
if exists(select FAAD_PKID from Acc_FixedAssetAdditionDetails where FAAD_PKID=@FAAD_PKID And FAAD_CompID=@FAAD_CompID)                
Begin  
set @FAAD_PKID=(select  FAAD_PKID from Acc_FixedAssetAdditionDetails where FAAD_PKID=@FAAD_PKID And FAAD_CompID=@FAAD_CompID)

Update Acc_FixedAssetAdditionDetails set FAAD_Location=@FAAD_Location,FAAD_Division=@FAAD_Division,FAAD_Department=@FAAD_Department,FAAD_Bay=@FAAD_Bay, FAAD_Particulars=@FAAD_Particulars,FAAD_DocNo=@FAAD_DocNo,FAAD_DocDate=@FAAD_DocDate,FAAD_chkCost=@FAAD_chkCost,FAAD_BasicCost=@FAAD_BasicCost,
FAAD_TaxAmount=@FAAD_TaxAmount,FAAD_Total=@FAAD_Total,FAAD_IPAddress =@FAAD_IPAddress,FAAD_AssetValue=@FAAD_AssetValue,FAAD_UpdatedOn=getdate(),FAAD_Status=@FAAD_Status,FAAD_AssetType=@FAAD_AssetType,FAAD_ItemType=@FAAD_ItemType,FAAD_SupplierName=@FAAD_SupplierName,FAAD_CustId=@FAAD_CustId
where FAAD_PKID=@FAAD_PKID And FAAD_CompID=@FAAD_CompID        
set @iUpdateOrSave=2             
set @iOper =@FAAD_PKID  
End              
Else                
Begin                
set @FAAD_PKID=(select IsNull(Max(FAAD_PKID)+1,1) from Acc_FixedAssetAdditionDetails)                
insert into Acc_FixedAssetAdditionDetails(FAAD_PKID,FAAD_MasID,FAAD_Location,FAAD_Division,FAAD_Department,FAAD_Bay,FAAD_Particulars,FAAD_DocNo,FAAD_DocDate,FAAD_chkCost,FAAD_BasicCost,FAAD_TaxAmount,
FAAD_Total,FAAD_AssetValue,FAAD_CreatedBy,FAAD_CreatedOn,FAAD_UpdatedBy,FAAD_UpdatedOn,FAAD_IPAddress,FAAD_CompID,FAAD_Status,FAAD_AssetType,FAAD_ItemType,FAAD_SupplierName,FAAD_CustId,FAAD_YearID) 

values(@FAAD_PKID,@FAAD_MasID,@FAAD_Location,@FAAD_Division,@FAAD_Department,@FAAD_Bay,@FAAD_Particulars,@FAAD_DocNo,@FAAD_DocDate,@FAAD_chkCost,@FAAD_BasicCost,@FAAD_TaxAmount,
@FAAD_Total,@FAAD_AssetValue,@FAAD_CreatedBy,getdate(),@FAAD_UpdatedBy,@FAAD_UpdatedOn,@FAAD_IPAddress,@FAAD_CompID,@FAAD_Status,@FAAD_AssetType,@FAAD_ItemType,@FAAD_SupplierName,@FAAD_CustId,@FAAD_YearID)                
set @iUpdateOrSave=3               
set @iOper = @FAAD_PKID         
End 

/

CREATE  Procedure [dbo].[spAcc_FixedAssetDeletion]        
(
     @AFAD_ID int ,
	 @AFAD_CustomerName int,
	 @AFAD_TransNo varchar(500),
	 @AFAD_Location int,
	 @AFAD_Division int,
	 @AFAD_Department int,
	 @AFAD_Bay int,
	 @AFAD_AssetClass int,
	 @AFAD_Asset int,
	 @AFAD_AssetDeletion int,
	 @AFAD_AssetDeletionType int,
	 @AFAD_DeletionDate datetime,
	 @AFAD_Amount money,
	 @AFAD_Quantity int,
	 @AFAD_Paymenttype int,
	 @AFAD_CostofTransport money,
	 @AFAD_InstallationCost money,
	 @AFAD_DateofInitiate datetime,
	 @AFAD_DateofReceived datetime,
	 @AFAD_ToLocation int,
	 @AFAD_ToDivision int,
	 @AFAD_ToDepartment int,
	 @AFAD_ToBay int,
	 @AFAD_AssetDelDesc varchar(500),
	 @AFAD_PorLStatus varchar(50),
	 @AFAD_PorLAmount money,
	 @AFAD_SalesPrice money,
	 @AFAD_DelDeprec money,
	 @AFAD_WDVValue money,
	 @AFAD_ContAssetValue money,
	 @AFAD_ContDep money,
	 @AFAD_ContWDV money,
	@AFAD_InsClaimedNo varchar(500) ,
	@AFAD_InsAmtClaimed money ,
	@AFAD_InsClaimedDate datetime ,
	@AFAD_InsAmtRecvd money ,
	@AFAD_InsRefNo varchar(500) ,
	@AFAD_InsRefDate datetime ,
	 @AFAD_CreatedBy int,
	 @AFAD_CreatedOn datetime,
	 @AFAD_ApprovedBy int,
	 @AFAD_ApprovedOn datetime,
	 @AFAD_Status varchar(25),
	 @AFAD_Delflag char(1),
	 @AFAD_YearID int,
	 @AFAD_CompID int,
	 @AFAD_Deletedby int,
	 @AFAD_DeletedOn datetime,
	 @AFAD_IPAddress varchar(100),
@iUpdateOrSave int Output,      
@iOper int Output      
)          
as
 if exists(select AFAD_ID from Acc_FixedAssetDeletion where AFAD_ID=@AFAD_ID and AFAD_CompID=@AFAD_CompID and AFAD_YearID=@AFAD_YearID)              
     begin                	            
		Update Acc_FixedAssetDeletion set AFAD_ApprovedBy=@AFAD_ApprovedBy,AFAD_ApprovedOn=GETDATE (),AFAD_Deletedby=@AFAD_Deletedby,AFAD_DeletedOn=@AFAD_DeletedOn
		Where AFAD_ID=@AFAD_ID and AFAD_CompID=@AFAD_CompID and AFAD_YearID=@AFAD_YearID
		set @iUpdateOrSave=2          
		set @iOper = @AFAD_ID
	 end      
	 else         
	  begin        
		set @AFAD_ID=(select isnull(max(AFAD_ID)+1,1) from Acc_FixedAssetDeletion)   
		Insert into Acc_FixedAssetDeletion(AFAD_ID,AFAD_CustomerName,AFAD_TransNo,AFAD_Location,AFAD_Division,AFAD_Department,AFAD_Bay,AFAD_AssetClass,AFAD_Asset,
		AFAD_AssetDeletion,AFAD_AssetDeletionType,AFAD_DeletionDate,AFAD_Amount,AFAD_Quantity,AFAD_Paymenttype,AFAD_CostofTransport,
		AFAD_InstallationCost,AFAD_DateofInitiate,AFAD_DateofReceived,AFAD_ToLocation,AFAD_ToDivision,AFAD_ToDepartment,AFAD_ToBay,AFAD_AssetDelDesc,AFAD_PorLStatus,AFAD_PorLAmount,
		AFAD_SalesPrice,AFAD_DelDeprec,AFAD_WDVValue,AFAD_ContAssetValue,AFAD_ContDep,AFAD_ContWDV,AFAD_InsClaimedNo,AFAD_InsAmtClaimed,AFAD_InsClaimedDate,AFAD_InsAmtRecvd,AFAD_InsRefNo,AFAD_InsRefDate,AFAD_CreatedBy,AFAD_CreatedOn,AFAD_Status,AFAD_Delflag,AFAD_YearID,AFAD_CompID,AFAD_IPAddress)
		values(@AFAD_ID,@AFAD_CustomerName,@AFAD_TransNo,@AFAD_Location,@AFAD_Division,@AFAD_Department,@AFAD_Bay,@AFAD_AssetClass,@AFAD_Asset,
		@AFAD_AssetDeletion,@AFAD_AssetDeletionType,@AFAD_DeletionDate,@AFAD_Amount,@AFAD_Quantity,@AFAD_Paymenttype,@AFAD_CostofTransport,
		@AFAD_InstallationCost,@AFAD_DateofInitiate,@AFAD_DateofReceived,@AFAD_ToLocation,@AFAD_ToDivision,@AFAD_ToDepartment,@AFAD_ToBay,@AFAD_AssetDelDesc,@AFAD_PorLStatus,@AFAD_PorLAmount,
		@AFAD_SalesPrice,@AFAD_DelDeprec,@AFAD_WDVValue,@AFAD_ContAssetValue,@AFAD_ContDep,@AFAD_ContWDV,@AFAD_InsClaimedNo,@AFAD_InsAmtClaimed,@AFAD_InsClaimedDate,@AFAD_InsAmtRecvd,@AFAD_InsRefNo,@AFAD_InsRefDate,@AFAD_CreatedBy,getdate(),@AFAD_Status,@AFAD_Delflag,@AFAD_YearID,@AFAD_CompID,@AFAD_IPAddress)
		set @iUpdateOrSave=3       
		set @iOper = @AFAD_ID        
  end

/

CREATE  procedure [dbo].[spAcc_FixedAssetMaster](
	@AFAM_ID int ,
	@AFAM_AssetType varchar(50) ,
	@AFAM_AssetCode varchar(50) ,
	@AFAM_Description varchar(500) ,
	@AFAM_ItemCode varchar(50) ,
	@AFAM_ItemDescription varchar(500) ,
	@AFAM_CommissionDate datetime ,	
	@AFAM_PurchaseDate datetime ,
	@AFAM_Quantity int ,
	@AFAM_Unit int ,
	@AFAM_AssetAge money ,
	@AFAM_PurchaseAmount money ,
	@AFAM_PolicyNo varchar(50) ,
	@AFAM_Amount money ,
	@AFAM_BrokerName varchar(50) ,
	@AFAM_CompanyName varchar(100) ,	
	@AFAM_Date datetime ,
	@AFAM_ToDate datetime ,
	@AFAM_Location int,
	@AFAM_Division int,
	@AFAM_Department int,
	@AFAM_Bay int,
	@AFAM_EmployeeName varchar(100),
	@AFAM_EmployeeCode varchar(100),
    @AFAM_Code varchar(100),
	@AFAM_SuplierName varchar(50) ,
	@AFAM_ContactPerson varchar(50) ,
	@AFAM_Address varchar(500) ,
	@AFAM_Phone varchar(15) ,
	@AFAM_Fax varchar(10) ,
	@AFAM_EmailID varchar(100) ,
	@AFAM_Website varchar(500) ,
	@AFAM_CreatedBy int ,
	@AFAM_CreatedOn datetime ,
	@AFAM_UpdatedBy int ,
	@AFAM_UpdatedOn datetime ,
	@AFAM_DelFlag varchar(50) ,
	@AFAM_Status varchar(50) ,
	@AFAM_YearID int ,
	@AFAM_CompID int ,
	@AFAM_Opeartion varchar(1) ,
	@AFAM_IPAddress varchar(25) ,	
	@AFAM_WrntyDesc varchar(500) ,
	@AFAM_ContactPrsn varchar(50) ,
	@AFAM_AMCFrmDate datetime ,
	@AFAM_AMCTo datetime ,
	@AFAM_Contprsn varchar(100) ,
	@AFAM_PhoneNo varchar(15) ,
	@AFAM_AMCCompanyName varchar(500) ,
	@AFAM_AssetDeletion int ,
	@AFAM_DlnDate datetime ,
	@AFAM_DateOfDeletion datetime ,
	@AFAM_Value money ,	
	@AFAM_Remark varchar(500),
	@AFAM_EMPCode varchar(10),
	@AFAM_LToWhom varchar(500),
	@AFAM_LAmount money,
	@AFAM_LAggriNo varchar(50),
	@AFAM_LDate datetime,
	@AFAM_LCurrencyType integer,
	@AFAM_LExchDate datetime,
	@AFAM_CustId  int ,
	@iUpdateOrSave int Output,    
    @iOper int Output   
)
as                       
  if exists(select AFAM_ID from Acc_FixedAssetMaster where AFAM_ID=@AFAM_ID and AFAM_YearID=@AFAM_YearID And AFAM_CompID=@AFAM_CompID)                        
   begin  
   update Acc_FixedAssetMaster Set AFAM_Description=@AFAM_Description,AFAM_ItemCode=@AFAM_ItemCode,
   AFAM_ItemDescription=@AFAM_ItemDescription,AFAM_CommissionDate=@AFAM_CommissionDate,	
AFAM_PurchaseDate=@AFAM_PurchaseDate,AFAM_Quantity=@AFAM_Quantity,AFAM_Unit=@AFAM_Unit,AFAM_AssetAge=@AFAM_AssetAge,
AFAM_PurchaseAmount=@AFAM_PurchaseAmount,AFAM_PolicyNo=@AFAM_PolicyNo,AFAM_Amount=@AFAM_Amount,
AFAM_BrokerName=@AFAM_BrokerName,AFAM_CompanyName=@AFAM_CompanyName,AFAM_Date=@AFAM_Date,
AFAM_ToDate=@AFAM_ToDate,AFAM_Location=@AFAM_Location,AFAM_Division=@AFAM_Division,AFAM_Department=@AFAM_Department,AFAM_Bay=@AFAM_Bay,AFAM_EmployeeName=@AFAM_EmployeeName,
AFAM_EmployeeCode=@AFAM_EmployeeCode,AFAM_Code=@AFAM_Code,AFAM_SuplierName=@AFAM_SuplierName,AFAM_ContactPerson=@AFAM_ContactPerson,
AFAM_Address=@AFAM_Address,AFAM_Phone=@AFAM_Phone,AFAM_Fax=@AFAM_Fax,AFAM_EmailID=@AFAM_EmailID,AFAM_Website=@AFAM_Website,
AFAM_UpdatedBy=@AFAM_UpdatedBy,AFAM_UpdatedOn=getdate(),AFAM_DelFlag=@AFAM_DelFlag,AFAM_Status=@AFAM_Status,AFAM_YearID=@AFAM_YearID,
AFAM_CompID=@AFAM_CompID,AFAM_Opeartion=@AFAM_Opeartion,AFAM_IPAddress=@AFAM_IPAddress,AFAM_WrntyDesc=@AFAM_WrntyDesc,
AFAM_ContactPrsn=@AFAM_ContactPrsn,AFAM_AMCFrmDate=@AFAM_AMCFrmDate,AFAM_AMCTo=@AFAM_AMCTo,AFAM_Contprsn=@AFAM_Contprsn,
AFAM_PhoneNo=@AFAM_PhoneNo,AFAM_AMCCompanyName=@AFAM_AMCCompanyName,AFAM_AssetDeletion=@AFAM_AssetDeletion,
AFAM_DlnDate=@AFAM_DlnDate,AFAM_DateOfDeletion=@AFAM_DateOfDeletion,AFAM_Value=@AFAM_Value,AFAM_Remark=@AFAM_Remark,AFAM_EMPCode=@AFAM_EMPCode,
AFAM_LToWhom=@AFAM_LToWhom,AFAM_LAmount=@AFAM_LAmount,AFAM_LAggriNo=@AFAM_LAggriNo,AFAM_LDate=@AFAM_LDate,AFAM_LCurrencyType=@AFAM_LCurrencyType,
AFAM_LExchDate=@AFAM_LExchDate,AFAM_CustId=@AFAM_CustId
Where  AFAM_ID=@AFAM_ID and AFAM_YearID=@AFAM_YearID And AFAM_CompID=@AFAM_CompID
    set @iUpdateOrSave=2                    
    set @iOper = @AFAM_ID 
 end                              
  else               
     begin              
  set @AFAM_ID=(select isnull(max(AFAM_ID )+1,1) from Acc_FixedAssetMaster)                  
  Insert into Acc_FixedAssetMaster (AFAM_ID,AFAM_AssetType,AFAM_AssetCode,AFAM_Description,AFAM_ItemCode,AFAM_ItemDescription,AFAM_CommissionDate,	
AFAM_PurchaseDate,AFAM_Quantity,AFAM_Unit,AFAM_AssetAge,AFAM_PurchaseAmount,AFAM_PolicyNo,AFAM_Amount,AFAM_BrokerName,AFAM_CompanyName,	
AFAM_Date,AFAM_ToDate,AFAM_Location,AFAM_Division,AFAM_Department,AFAM_Bay,AFAM_EmployeeName,AFAM_EmployeeCode,AFAM_Code,AFAM_SuplierName,AFAM_ContactPerson,AFAM_Address,
AFAM_Phone,AFAM_Fax,AFAM_EmailID,AFAM_Website,AFAM_CreatedBy,AFAM_CreatedOn,AFAM_DelFlag,
AFAM_Status,AFAM_YearID,AFAM_CompID,AFAM_Opeartion,AFAM_IPAddress,AFAM_WrntyDesc,AFAM_ContactPrsn,AFAM_AMCFrmDate,
AFAM_AMCTo,AFAM_Contprsn,AFAM_PhoneNo,AFAM_AMCCompanyName,AFAM_AssetDeletion,
AFAM_DlnDate,AFAM_DateOfDeletion,AFAM_Value,AFAM_Remark,AFAM_EMPCode,AFAM_LToWhom,AFAM_LAmount,AFAM_LAggriNo,AFAM_LDate,AFAM_LCurrencyType,AFAM_LExchDate,AFAM_CustId)
 values
(@AFAM_ID,@AFAM_AssetType,@AFAM_AssetCode,@AFAM_Description,@AFAM_ItemCode,@AFAM_ItemDescription,@AFAM_CommissionDate,	
@AFAM_PurchaseDate,@AFAM_Quantity,@AFAM_Unit,@AFAM_AssetAge,@AFAM_PurchaseAmount,@AFAM_PolicyNo,@AFAM_Amount,@AFAM_BrokerName,@AFAM_CompanyName,	
@AFAM_Date,@AFAM_ToDate,@AFAM_Location,@AFAM_Division,@AFAM_Department,@AFAM_Bay,@AFAM_EmployeeName,@AFAM_EmployeeCode,@AFAM_Code,@AFAM_SuplierName,@AFAM_ContactPerson,@AFAM_Address,
@AFAM_Phone,@AFAM_Fax,@AFAM_EmailID,@AFAM_Website,@AFAM_CreatedBy,getdate(),@AFAM_DelFlag,
@AFAM_Status,@AFAM_YearID,@AFAM_CompID,@AFAM_Opeartion,@AFAM_IPAddress,@AFAM_WrntyDesc,@AFAM_ContactPrsn,@AFAM_AMCFrmDate,
@AFAM_AMCTo,@AFAM_Contprsn,@AFAM_PhoneNo,@AFAM_AMCCompanyName,@AFAM_AssetDeletion,@AFAM_DlnDate,@AFAM_DateOfDeletion,
@AFAM_Value,@AFAM_Remark,@AFAM_EMPCode,@AFAM_LToWhom,@AFAM_LAmount,@AFAM_LAggriNo,@AFAM_LDate,@AFAM_LCurrencyType,@AFAM_LExchDate,@AFAM_CustId)        
  set @iUpdateOrSave=3                 
  set @iOper = @AFAM_ID                     
    end

/

CREATE procedure [dbo].[spAcc_JE_Master]    
(    
@Acc_JE_ID int,  
@Acc_JE_TransactionNo varchar(500),  
@Acc_JE_Party int,  
@Acc_JE_Location int,  
@Acc_JE_BillType int,  
@Acc_JE_BillNo varchar(500),  
@Acc_JE_BillDate datetime,  
@Acc_JE_BillAmount money,  
@Acc_JE_AdvanceAmount money,  
@Acc_JE_AdvanceNaration varchar(max),  
@Acc_JE_BalanceAmount money,  
@Acc_JE_NetAmount money,  
@Acc_JE_PaymentNarration varchar(max),  
@Acc_JE_ChequeNo varchar(max),  
@Acc_JE_ChequeDate datetime,  
@Acc_JE_IFSCCode varchar(max),  
@Acc_JE_BankName varchar(max),  
@Acc_JE_BranchName varchar(max),  
@Acc_JE_CreatedBy int,  
@Acc_JE_YearID int,  
@Acc_JE_CompID int,  
@Acc_JE_Status varchar(40),  
@Acc_JE_Operation varchar(1),  
@Acc_JE_IPAddress varchar(200),  
@Acc_JE_BillCreatedDate datetime, 
@acc_JE_BranchId int,
@Acc_JE_Comnments varchar(500),
@iUpdateOrSave int Output,      
@iOper int Output        
)      
as           
  if exists(select Acc_JE_ID from Acc_JE_Master where Acc_JE_ID=@Acc_JE_ID and Acc_JE_CompID=@Acc_JE_CompID)          
 begin    
  update Acc_JE_Master set Acc_JE_TransactionNo=@Acc_JE_TransactionNo,Acc_JE_Party=@Acc_JE_Party,Acc_JE_Location=@Acc_JE_Location,  
  Acc_JE_BillType=@Acc_JE_BillType,Acc_JE_BillNo=@Acc_JE_BillNo,Acc_JE_BillDate=@Acc_JE_BillDate,Acc_JE_BillAmount=@Acc_JE_BillAmount,  
  Acc_JE_AdvanceAmount=@Acc_JE_AdvanceAmount,Acc_JE_AdvanceNaration=@Acc_JE_AdvanceNaration,Acc_JE_BalanceAmount=@Acc_JE_BalanceAmount,  
  Acc_JE_NetAmount=@Acc_JE_NetAmount,Acc_JE_PaymentNarration=@Acc_JE_PaymentNarration,Acc_JE_ChequeNo=@Acc_JE_ChequeNo,Acc_JE_ChequeDate=@Acc_JE_ChequeDate,  
  Acc_JE_IFSCCode=@Acc_JE_IFSCCode,Acc_JE_BankName=@Acc_JE_BankName,Acc_JE_BranchName=@Acc_JE_BranchName,  
  Acc_JE_YearID=@Acc_JE_YearID,Acc_JE_Status=@Acc_JE_Status,Acc_JE_Operation=@Acc_JE_Operation,Acc_JE_IPAddress=@Acc_JE_IPAddress,Acc_JE_BillCreatedDate=@Acc_JE_BillCreatedDate,acc_JE_BranchId=@acc_JE_BranchId 
  where Acc_JE_ID=@Acc_JE_ID and Acc_JE_CompID=@Acc_JE_CompID    
  set @iUpdateOrSave=2          
  set @iOper=(select Acc_JE_ID from Acc_JE_Master where Acc_JE_ID=@Acc_JE_ID and Acc_JE_CompID=@Acc_JE_CompID)      
 end            
else       
 begin      
        
 set @Acc_JE_ID=(select isnull(max(Acc_JE_ID)+1,1) from Acc_JE_Master)      
  insert into Acc_JE_Master(Acc_JE_ID,Acc_JE_TransactionNo,Acc_JE_Party,Acc_JE_Location,Acc_JE_BillType,Acc_JE_BillNo,Acc_JE_BillDate,Acc_JE_BillAmount,  
  Acc_JE_AdvanceAmount,Acc_JE_AdvanceNaration,Acc_JE_BalanceAmount,Acc_JE_NetAmount,Acc_JE_PaymentNarration,Acc_JE_ChequeNo,Acc_JE_ChequeDate,  
  Acc_JE_IFSCCode,Acc_JE_BankName,Acc_JE_BranchName,  
  Acc_JE_CreatedBy,Acc_JE_CreatedOn,Acc_JE_YearID,Acc_JE_CompID,Acc_JE_Status,Acc_JE_Operation,Acc_JE_IPAddress,Acc_JE_BillCreatedDate,acc_JE_BranchId)    
  values      
  (@Acc_JE_ID,@Acc_JE_TransactionNo,@Acc_JE_Party,@Acc_JE_Location,@Acc_JE_BillType,@Acc_JE_BillNo,@Acc_JE_BillDate,@Acc_JE_BillAmount,   
   @Acc_JE_AdvanceAmount,@Acc_JE_AdvanceNaration,@Acc_JE_BalanceAmount,@Acc_JE_NetAmount,@Acc_JE_PaymentNarration,@Acc_JE_ChequeNo,@Acc_JE_ChequeDate,  
   @Acc_JE_IFSCCode,@Acc_JE_BankName,@Acc_JE_BranchName,   
   @Acc_JE_CreatedBy,getdate(),@Acc_JE_YearID,@Acc_JE_CompID,@Acc_JE_Status,@Acc_JE_Operation,@Acc_JE_IPAddress,@Acc_JE_BillCreatedDate,@acc_JE_BranchId)      
  set @iUpdateOrSave=3          
  set @iOper=@Acc_JE_ID      
 end   

 /

Create Procedure [dbo].[spAcc_JE_Master_History]              
(                
@AJEH_PKID int,
@AJEH_AccJEID int,
@AJEH_Comments varchar(8000),
@AJEH_UserID int,
@AJEH_Status varchar(25),
@AJEH_IPAddress varchar(25),
@AJEH_CompID int                                        
)                      
As                       
Begin          
set @AJEH_PKID=(select isnull(max(AJEH_PKID)+1,1) from Acc_JE_Master_History)    
  insert into Acc_JE_Master_History(AJEH_PKID,AJEH_AccJEID,AJEH_Comments,AJEH_UserID,AJEH_Date,AJEH_Status,AJEH_IPAddress,AJEH_CompID)
  Values(@AJEH_PKID,@AJEH_AccJEID,@AJEH_Comments,@AJEH_UserID,GetDate(),@AJEH_Status,@AJEH_IPAddress,@AJEH_CompID)                         
End 

/

CREATE Procedure [dbo].[spACC_Opening_Balance]    
(    
@Opn_Id int,     
@Opn_SerialNo int,      
@Opn_Date datetime,     
@Opn_AccHead int,    
@Opn_GLCode varchar(50),    
@Opn_DebitAmt varchar(50),    
@Opn_CreditAmount Varchar(50),    
@Opn_YearId int,    
@Opn_CreatedBy int,    
@Opn_CreatedOn datetime,    
@Opn_ApprovedBy int,    
@Opn_ApprovedOn datetime,     
@Opn_Status varchar(1),    
@Opn_CompId int,    
@Opn_GlId int,    
@Opn_Operation varchar(20),    
@Opn_IPAddress varchar(25), 
@Opn_CustType int,
@Opn_IndType int,   
@Opn_ClosingBalanceDebit varchar(50),    
@Opn_ClosingBalanceCredit Varchar(50), 
@iUpdateOrSave int Output,    
@iOper int Output     
)    
as   
 if exists(select Opn_Id from ACC_Opening_Balance where  Opn_GLCode=@Opn_GLCode and Opn_CustType=@Opn_CustType and Opn_YearID=@Opn_YearID And Opn_CompID=@opn_CompID and Opn_GlId=@Opn_GlId)      
  begin   
Set @Opn_Status='A'  
Set @Opn_Operation='A'  
 update ACC_Opening_Balance Set Opn_SerialNo=@Opn_SerialNo,Opn_Date=@Opn_Date,Opn_AccHead=@Opn_AccHead,    
Opn_DebitAmt=@Opn_DebitAmt,Opn_CreditAmount=@Opn_CreditAmount,Opn_YearId=@Opn_YearId,  
Opn_ApprovedBy=@Opn_ApprovedBy,Opn_ApprovedOn=GetDate(),    
Opn_Status=@Opn_Status,Opn_GlId=@Opn_GlId,Opn_Operation=@Opn_Operation,Opn_IPAddress=@Opn_IPAddress ,Opn_IndType=@Opn_IndType,
Opn_ClosingBalanceDebit=@Opn_ClosingBalanceDebit,Opn_ClosingBalanceCredit=@Opn_ClosingBalanceCredit
where  Opn_GLCode=@Opn_GLCode And Opn_CompID=@opn_CompID and Opn_Id=@Opn_Id
  set @iUpdateOrSave=2          
  set @iOper =@Opn_Id   
End  
 else       
 begin   
set @Opn_Id=(select isnull(max(Opn_Id)+1,1) from ACC_Opening_Balance)        
  insert into ACC_Opening_Balance (Opn_Id,Opn_SerialNo,Opn_Date,Opn_AccHead,    
Opn_GLCode,Opn_DebitAmt,Opn_CreditAmount,    
Opn_YearId,Opn_CreatedBy,Opn_CreatedOn,Opn_ApprovedBy,Opn_ApprovedOn,    
Opn_Status,Opn_CompId,Opn_GlId,Opn_Operation,Opn_IPAddress,Opn_CustType,Opn_IndType,Opn_ClosingBalanceDebit,Opn_ClosingBalanceCredit)    
values (@Opn_Id,@Opn_SerialNo,@Opn_Date,@Opn_AccHead,    
@Opn_GLCode,@Opn_DebitAmt,@Opn_CreditAmount,    
@Opn_YearId,@Opn_CreatedBy,GetDate(),@Opn_CreatedBy,GetDate(),    
@Opn_Status,@Opn_CompId,@Opn_GlId,@Opn_Operation,@Opn_IPAddress,@Opn_CustType,@Opn_IndType,@Opn_ClosingBalanceDebit,@Opn_ClosingBalanceCredit)      
   set @iUpdateOrSave=3         
   set @iOper = @Opn_Id     
end 

/

CREATE procedure [dbo].[spAcc_Transactions_Details]  
(  
@ATD_ID int,
@ATD_TransactionDate datetime,
@ATD_TrType int,
@ATD_BillId int,
@ATD_PaymentType int,
@ATD_Head int,
@ATD_GL int,
@ATD_SubGL int,
@ATD_DbOrCr int,
@ATD_Debit money,
@ATD_Credit money,
@ATD_CreatedBy int,
@ATD_UpdatedBy int,
@ATD_Status varchar(1),
@ATD_YearID int,
@ATD_CompID int,
@ATD_Operation varchar(1),
@ATD_IPAddress varchar(100),
@ATD_CustId int,
@ATD_OrgType int,
@iUpdateOrSave int Output,    
@iOper int Output      
)    
as         
  if exists(select ATD_ID from Acc_Transactions_Details where ATD_ID=@ATD_ID And ATD_TrType=@ATD_TrType And ATD_BillId=@ATD_BillId And ATD_CompID=@ATD_CompID )        
 begin  
  update Acc_Transactions_Details set ATD_TransactionDate=@ATD_TransactionDate,ATD_PaymentType=@ATD_PaymentType,ATD_Head=@ATD_Head,
  ATD_GL=@ATD_GL,ATD_SubGL=@ATD_SubGL,ATD_DbOrCr=@ATD_DbOrCr,ATD_Debit=@ATD_Debit,ATD_Credit=@ATD_Credit,ATD_UpdatedBy=@ATD_UpdatedBy,ATD_UpdatedOn=getdate(),
  ATD_Status=@ATD_Status,ATD_YearID=@ATD_YearID,ATD_Operation=@ATD_Operation,ATD_IPAddress=@ATD_IPAddress  
  where ATD_ID=@ATD_ID And ATD_TrType=@ATD_TrType And ATD_BillId=@ATD_BillId And ATD_CompID=@ATD_CompID  
  set @iUpdateOrSave=2        
  set @iOper=(select ATD_ID from Acc_Transactions_Details where ATD_ID=@ATD_ID And ATD_TrType=@ATD_TrType And ATD_BillId=@ATD_BillId And ATD_CompID=@ATD_CompID)    
 end          
else     
 begin    
      
 set @ATD_ID=(select isnull(max(ATD_ID)+1,1) from Acc_Transactions_Details)    
   insert into Acc_Transactions_Details(ATD_ID,ATD_TransactionDate,ATD_TrType,ATD_BillId,ATD_PaymentType,ATD_Head,ATD_GL,
   ATD_SubGL,ATD_DbOrCr,ATD_Debit,ATD_Credit,ATD_CreatedBy,ATD_CreatedOn,ATD_Status,ATD_YearID,ATD_CompID,ATD_Operation,ATD_IPAddress,ATD_CustId,ATD_OrgType)  
   values    
   (@ATD_ID,@ATD_TransactionDate,@ATD_TrType,@ATD_BillId,@ATD_PaymentType,@ATD_Head,@ATD_GL, 
   @ATD_SubGL,@ATD_DbOrCr,@ATD_Debit,@ATD_Credit,@ATD_CreatedBy,getdate(),@ATD_Status,@ATD_YearID,@ATD_CompID,@ATD_Operation,@ATD_IPAddress,@ATD_CustId,@ATD_OrgType)    
   set @iUpdateOrSave=3        
   set @iOper=@ATD_ID    
 end  

/

CREATE Procedure [dbo].[spADO_BATCH](              
@BT_ID int,
@BT_CustomerID int,
@BT_TransactionType int,
@BT_BatchID int,
@BT_BatchNo Varchar(50),
@BT_AttachID int,
@BT_Title Varchar(50),
@BT_NFT int,
@BT_Vouchers Varchar(50),
@BT_Date datetime,
@BT_Comments Varchar(500),
@BT_DebitTotal money,
@BT_CreditTotal money,
@BT_Delflag char(1),
@BT_Status Varchar(25),
@BT_CompID int,
@BT_YearID int,
@BT_CrBy int,
@BT_IPAddress varchar(25),
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as  
 if exists(select BT_ID from ADO_Batch where BT_AttachID= @BT_AttachID and BT_CompID=@BT_CompID)                     
begin   
update ADO_Batch set BT_Title= @BT_Title, BT_NFT= @BT_NFT, 
		 BT_Vouchers=@BT_Vouchers,BT_Date= @BT_Date, BT_Comments=@BT_Comments,
		 BT_DebitTotal=@BT_DebitTotal, BT_CreditTotal=@BT_CreditTotal,BT_Status=@BT_Status,
		  BT_CrBy=@BT_CrBy,BT_Cron=getdate(),BT_IPAddress=@BT_IPAddress         
 where BT_AttachID= @BT_AttachID and BT_CompID=@BT_CompID          
    set @iUpdateOrSave=2   
	set @iOper = @BT_ID                   
End                       
   Else                 
Begin    
set @BT_ID=(select isnull(max(BT_ID)+1,1) from ADO_Batch)              
 insert into ADO_Batch(BT_ID,BT_CustomerID,BT_TransactionType,BT_BatchID,BT_BatchNo,BT_AttachID,BT_Title,BT_NFT,
 BT_Vouchers,BT_Date,BT_Comments,
 BT_DebitTotal,BT_CreditTotal,BT_Delflag,BT_Status,BT_CompID,BT_YearID,BT_CrBy,BT_CrOn,BT_IPAddress)                
 values(@BT_ID,@BT_CustomerID,@BT_TransactionType,@BT_BatchID,@BT_BatchNo,@BT_AttachID,@BT_Title,@BT_NFT,
 @BT_Vouchers,@BT_Date,@BT_Comments,
 @BT_DebitTotal,@BT_CreditTotal,@BT_Delflag,@BT_Status,@BT_CompID,@BT_YearID,@BT_CrBy,getdate(),@BT_IPAddress)                
 set @iUpdateOrSave=3               
 set @iOper = @BT_ID    
End

/

CREATE PROCEDURE [dbo].[spApplicationSettings] 
(  
@SAD_Config_Key varchar(100),  
@SAD_Config_Value varchar(100),  
@SAD_UpdatedBy int,  
@SAD_Config_Operation varchar(10),  
@SAD_Config_IPAddress varchar(50),  
@SAD_CompID int,   
@iOper int Output      
)  
As        
  If exists(Select Sad_config_ID from sad_config_settings where SAD_CompID= @SAD_CompID And sad_Config_Key=@sad_Config_Key)   
  Begin    
  Update sad_config_settings set sad_UpdatedBy=@SAD_UpdatedBy, sad_UpdatedOn=GetDate(),sad_config_Operation=@SAD_Config_Operation,sad_config_IPAddress=@SAD_Config_IPAddress,sad_Config_Value=@SAD_Config_Value  
  Where SAD_CompID = @SAD_CompID  And sad_Config_Key=@sad_Config_Key  
  Set @iOper=2    
END  
Else       
 Begin   
  Declare @SAD_Config_ID int   
 Set @SAD_Config_ID=(select isnull(max(SAD_Config_ID)+1,1) from sad_config_settings)  
 Insert into sad_config_settings (SAD_Config_ID,SAD_Config_Key,SAD_Config_Value,SAD_Config_Operation,SAD_Config_IPAddress,SAD_CompID)  
 values(@SAD_Config_ID,@SAD_Config_Key,@SAD_Config_Value,@SAD_Config_Operation,@SAD_Config_IPAddress,@SAD_CompID)  
set @iOper=3  
 End 

 /

CREATE Procedure [dbo].[spAudit_AnnualPlan](                              
 @AAP_PKID int,      
 @AAP_YearID int,      
 @AAP_CustID int,      
 @AAP_MonthID int,      
 @AAP_FunID int,      
 @AAP_ResourceID varchar(2000),
 @AAP_Comments Varchar(2000),      
 @AAP_Crby int,      
 @AAP_Updatedby int,      
 @AAP_IPAddress Varchar(25),      
 @AAP_CompID int,                              
 @iUpdateOrSave int Output,                                          
 @iOper int Output                                
)                              
as                                                 
if exists(select AAP_PKID from Audit_AnnualPlan Where  AAP_CustID=@AAP_CustID And AAP_FunID=@AAP_FunID And AAP_CompID=@AAP_CompID and AAP_YearID=@AAP_YearID )                                            
 begin                                
 update Audit_AnnualPlan set AAP_ResourceID=@AAP_ResourceID, AAP_MonthID=@AAP_MonthID,AAP_Updatedby=@AAP_Updatedby,AAP_UpdatedOn=Getdate(),AAP_Comments=@AAP_Comments  
where AAP_PKID=@AAP_PKID And AAP_CustID=@AAP_CustID And AAP_FunID=@AAP_FunID And AAP_CompID=@AAP_CompID and AAP_YearID=@AAP_YearID And AAP_MonthID=@AAP_MonthID                                       
set @iUpdateOrSave=2                                           
set @iOper =(select AAP_PKID from Audit_AnnualPlan Where  AAP_CustID=@AAP_CustID And AAP_FunID=@AAP_FunID And AAP_CompID=@AAP_CompID and AAP_YearID=@AAP_YearID )                                                               
 end                                
else                                      
 begin                                            
 set @AAP_PKID=(select isnull(max(AAP_PKID)+1,1) from Audit_AnnualPlan)                                            
 insert into  Audit_AnnualPlan (AAP_PKID,AAP_YearID,AAP_MonthID,AAP_CustID,AAP_FunID,AAP_ResourceID,AAP_Crby,AAP_Cron,AAP_IPAddress,AAP_CompID,AAP_Comments)                                           
 values                                            
 (@AAP_PKID,@AAP_YearID,@AAP_MonthID,@AAP_CustID,@AAP_FunID,@AAP_ResourceID,@AAP_Crby,Getdate(),@AAP_IPAddress,@AAP_CompID,@AAP_Comments)                                            
 set @iUpdateOrSave=3                                           
 set @iOper = @AAP_PKID                                                 
end 

/ 
          
CREATE Procedure [dbo].[spAudit_APM_Assignment_Details] (          
 @AAPM_ID int ,      
 @AAPM_YearID int,       
 @AAPM_AuditCodeID int,          
 @AAPM_CustID int ,    
 @AAPM_FunctionID int ,         
 @AAPM_AuditTaskID int ,          
 @AAPM_AuditTaskType varchar(25),          
 @AAPM_PStartDate datetime ,          
 @AAPM_PEndDate datetime ,          
 @AAPM_Resource varchar(2000),          
 @AAPM_CrBy int ,          
 @AAPM_UpdatedBy int ,          
 @AAPM_IPAddress varchar(25),          
 @AAPM_CompID int,          
 @iUpdateOrSave int Output,                          
 @iOper int Output           
)             
as                                 
if exists(select AAPM_ID from Audit_APM_Assignment_Details Where AAPM_CustID=@AAPM_CustID  And AAPM_FunctionID=@AAPM_FunctionID and AAPM_AuditTaskID=@AAPM_AuditTaskID And AAPM_CompID=@AAPM_CompID And AAPM_YearID=@AAPM_YearID)                            
begin                
    update Audit_APM_Assignment_Details set           
    AAPM_PStartDate=@AAPM_PStartDate,AAPM_PEndDate=@AAPM_PEndDate,AAPM_Resource=@AAPM_Resource,@AAPM_UpdatedBy=@AAPM_UpdatedBy,AAPM_UpdatedOn=GetDate(),          
    AAPM_IPAddress=@AAPM_IPAddress,AAPM_AuditTaskType=@AAPM_AuditTaskType          
    where  AAPM_CustID=@AAPM_CustID And AAPM_CompID=@AAPM_CompID and AAPM_AuditTaskID=@AAPM_AuditTaskID                         
    set @iUpdateOrSave=2                           
    set @iOper =@AAPM_ID                
end                
else                      
 begin                            
    set @AAPM_ID=(select isnull(max(AAPM_ID)+1,1) from Audit_APM_Assignment_Details)                            
    insert into  Audit_APM_Assignment_Details (AAPM_ID,AAPM_YearID,AAPM_AuditCodeID,AAPM_CustID,AAPM_FunctionID,AAPM_AuditTaskID,          
    AAPM_PStartDate,AAPM_PEndDate,AAPM_Resource,AAPM_CrBy,AAPM_CrOn,AAPM_IPAddress,AAPM_CompID,AAPM_AuditTaskType)                            
   values(@AAPM_ID,@AAPM_YearID,@AAPM_AuditCodeID,@AAPM_CustID,@AAPM_FunctionID,@AAPM_AuditTaskID,          
    @AAPM_PStartDate,@AAPM_PEndDate,@AAPM_Resource,@AAPM_CrBy,GetDate(),@AAPM_IPAddress,@AAPM_CompID,@AAPM_AuditTaskType)                            
    set @iUpdateOrSave=3                           
    set @iOper = @AAPM_ID                                 
end 

/

CREATE procedure [dbo].[spAudit_APM_ChecksMatrix] (  
  @APMCM_PKID int ,  
  @APMCM_APMPKID int ,  
  @APMCM_YearID int ,  
  @APMCM_CustID int ,  
  @APMCM_FunctionID int ,  
  @APMCM_SubFunctionID int ,  
  @APMCM_ProcessID int ,  
  @APMCM_SubProcessID int ,  
  @APMCM_RiskID int ,  
  @APMCM_ControlID int ,  
  @APMCM_ChecksID int ,
  @APMCM_MMMID int,  
  @APMCM_IPAddress varchar(20) ,  
  @APMCM_CompID int,  
  @iUpdateOrSave int Output,                                
  @iOper int Output                      
)                    
as                                       
if exists(select APMCM_PKID from Audit_APM_ChecksMatrix Where APMCM_APMPKID=@APMCM_APMPKID And  APMCM_CustID=@APMCM_CustID And   
  APMCM_CompID=@APMCM_CompID and APMCM_YearID=@APMCM_YearID And APMCM_FunctionID=@APMCM_FunctionID And  APMCM_SubFunctionID=@APMCM_SubFunctionID   
  And APMCM_ProcessID=@APMCM_ProcessID And APMCM_SubProcessID=@APMCM_SubProcessID And APMCM_RiskID=@APMCM_RiskID And APMCM_ControlID=@APMCM_ControlID And APMCM_ChecksID=@APMCM_ChecksID)                                  
 begin                      
 update Audit_APM_ChecksMatrix set APMCM_YearID=@APMCM_YearID,APMCM_FunctionID=@APMCM_FunctionID,APMCM_SubFunctionID=@APMCM_SubFunctionID ,  
 APMCM_ProcessID=@APMCM_ProcessID ,APMCM_SubProcessID=@APMCM_SubProcessID ,APMCM_RiskID=@APMCM_RiskID,APMCM_ControlID=@APMCM_ControlID,  
 APMCM_ChecksID=@APMCM_ChecksID,APMCM_MMMID=@APMCM_MMMID,APMCM_IPAddress=@APMCM_IPAddress,APMCM_Status='A'                
 where  APMCM_APMPKID=@APMCM_APMPKID And  APMCM_CustID=@APMCM_CustID And   
  APMCM_CompID=@APMCM_CompID and APMCM_YearID=@APMCM_YearID And APMCM_FunctionID=@APMCM_FunctionID And  APMCM_SubFunctionID=@APMCM_SubFunctionID   
  And APMCM_ProcessID=@APMCM_ProcessID And APMCM_SubProcessID=@APMCM_SubProcessID And APMCM_RiskID=@APMCM_RiskID And APMCM_ControlID=@APMCM_ControlID And APMCM_ChecksID=@APMCM_ChecksID                                
 set @iUpdateOrSave=2                                 
 set @iOper =(select APMCM_PKID from Audit_APM_ChecksMatrix Where APMCM_APMPKID=@APMCM_APMPKID And  APMCM_CustID=@APMCM_CustID And   
 APMCM_CompID=@APMCM_CompID and APMCM_YearID=@APMCM_YearID And APMCM_FunctionID=@APMCM_FunctionID And  APMCM_SubFunctionID=@APMCM_SubFunctionID   
 And APMCM_ProcessID=@APMCM_ProcessID And APMCM_SubProcessID=@APMCM_SubProcessID And APMCM_RiskID=@APMCM_RiskID And APMCM_ControlID=@APMCM_ControlID And APMCM_ChecksID=@APMCM_ChecksID)                    
 end                      
else                            
 begin                                  
 set @APMCM_PKID=(select isnull(max(APMCM_PKID)+1,1) from Audit_APM_ChecksMatrix)                                  
 insert into  Audit_APM_ChecksMatrix (APMCM_PKID,APMCM_APMPKID,APMCM_YearID,APMCM_CustID,APMCM_FunctionID,APMCM_SubFunctionID ,APMCM_ProcessID ,APMCM_SubProcessID ,APMCM_RiskID ,APMCM_ControlID,                 
 APMCM_ChecksID,APMCM_IPAddress,APMCM_CompID,APMCM_Status,APMCM_MMMID) values                                  
 (@APMCM_PKID,@APMCM_APMPKID,@APMCM_YearID,@APMCM_CustID,@APMCM_FunctionID,@APMCM_SubFunctionID ,@APMCM_ProcessID ,@APMCM_SubProcessID ,@APMCM_RiskID ,@APMCM_ControlID,@APMCM_ChecksID,  
 @APMCM_IPAddress,@APMCM_CompID,'A',@APMCM_MMMID)                                  
 set @iUpdateOrSave=3                                 
 set @iOper = @APMCM_PKID                                       
end 

/

CREATE Procedure [dbo].[spAudit_APM_Details](                      
 @APM_ID int,                   
 @APM_YearID int,                         
 @APM_CustID int,                   
 @APM_FunctionID int,                                
 @APM_AuditorsRoleID int,                      
 @APM_AuditTeamsID Varchar(2000),                      
 @APM_BranchID int,                      
 @APM_PartnersID varchar(2000),                      
 @APM_TStartDate datetime,                   
 @APM_TEndDate datetime,                   
 @APM_EstimatedEffortDays int,                   
 @APM_Objectives varchar(2000),                      
 @APM_CrBy int,                   
 @APM_UpdatedBy int,                     
 @APM_IPAddress varchar(25),                             
 @APM_CompID int,          
 @APM_AttachID int,                      
 @iUpdateOrSave int Output,                                  
@iOper int Output                        
)                      
as                                         
if exists(select APM_ID from Audit_APM_Details Where  APM_CustID=@APM_CustID And APM_FunctionID=@APM_FunctionID And APM_CompID=@APM_CompID and APM_YearID=@APM_YearID)                                    
 begin                        
 update Audit_APM_Details set APM_YearID=@APM_YearID,                      
APM_AuditorsRoleID=@APM_AuditorsRoleID ,APM_AuditTeamsID=@APM_AuditTeamsID,                   
APM_BranchID=@APM_BranchID ,APM_PartnersID=@APM_PartnersID ,APM_TStartDate=@APM_TStartDate,APM_TEndDate=@APM_TEndDate,                      
APM_EstimatedEffortDays=@APM_EstimatedEffortDays,APM_Objectives=@APM_Objectives,APM_UpdatedBy=@APM_UpdatedBy,APM_UpdatedOn=GetDate(),                  
APM_IPAddress=@APM_IPAddress,APM_APMStatus='Updated',APM_AttachID=@APM_AttachID                           
where  APM_CustID=@APM_CustID  And APM_FunctionID=@APM_FunctionID  And APM_CompID=@APM_CompID and APM_YearID=@APM_YearID                                  
set @iUpdateOrSave=2                                   
set @iOper =(select APM_ID from Audit_APM_Details Where  APM_CustID=@APM_CustID And APM_FunctionID=@APM_FunctionID And APM_CompID=@APM_CompID and APM_YearID=@APM_YearID)                                                       
 end                        
else                              
 begin                                    
 set @APM_ID=(select isnull(max(APM_ID)+1,1) from Audit_APM_Details)                                    
 insert into  Audit_APM_Details (APM_ID,APM_YearID,APM_CustID,APM_FunctionID,APM_AuditorsRoleID ,APM_AuditTeamsID ,APM_BranchID ,APM_PartnersID ,APM_TStartDate,APM_TEndDate,APM_EstimatedEffortDays,                      
APM_Objectives,APM_StatusID,APM_CrBy,APM_CrOn,APM_APMStatus,APM_APMCRStatus,APM_APMTAStatus,APM_IPAddress,APM_CompID,APM_AttachID )                                    
 values(@APM_ID,@APM_YearID,@APM_CustID,@APM_FunctionID,@APM_AuditorsRoleID ,@APM_AuditTeamsID ,@APM_BranchID ,@APM_PartnersID ,@APM_TStartDate,@APM_TEndDate,@APM_EstimatedEffortDays,                      
@APM_Objectives,1,@APM_CrBy,GetDate(),'Saved','Not Saved','Not Saved',@APM_IPAddress,@APM_CompID,@APM_AttachID )                                    
 set @iUpdateOrSave=3                                   
 set @iOper = @APM_ID                                         
end

/

CREATE Procedure [dbo].[spAudit_ARA]               
(                  
@ARA_PKID int,                  
@ARA_AuditCodeID int,                  
@ARA_FinancialYear int,                  
@ARA_FunID int,   
@ARA_CustID int ,   
@ARA_NetScore int,      
@ARA_Status varchar(25),        
@ARA_Comments VARCHAR (5000),      
@ARA_CrBy int,       
@ARA_UpdatedBy int,                         
@ARA_CompID int,                  
@ARA_IPAddress varchar(25),      
@iUpdateOrSave int Output,                  
@iOper int Output                    
)         
As                        
if exists(select ARA_PKID from Audit_ARA where  ARA_CustID=@ARA_CustID And ARA_AuditCodeID= @ARA_AuditCodeID And ARA_FunID=@ARA_FunID And ARA_FinancialYear=@ARA_FinancialYear And  ARA_CompID=@ARA_CompID)                    
Begin      
set @ARA_PKID=(select ARA_PKID from Audit_ARA where ARA_AuditCodeID= @ARA_AuditCodeID And ARA_FunID=@ARA_FunID And ARA_FinancialYear=@ARA_FinancialYear And ARA_CompID=@ARA_CompID)       
Update Audit_ARA set ARA_NetScore=@ARA_NetScore,ARA_IPAddress=@ARA_IPAddress,ARA_UpdatedOn=Getdate(),ARA_UpdatedBy=@ARA_UpdatedBy,ARA_Comments=@ARA_Comments      
where ARA_PKID=@ARA_PKID and ARA_CompID=@ARA_CompID               
set @iUpdateOrSave=2                 
set @iOper = @ARA_PKID                  
End                  
Else                     
Begin                    
set @ARA_PKID=(select IsNull(Max(ARA_PKID)+1,1) from Audit_ARA)                    
insert into Audit_ARA(ARA_PKID,ARA_CustID,ARA_AuditCodeID,ARA_FinancialYear,ARA_FunID,ARA_NetScore,      
ARA_CrBy,ARA_CrOn,ARA_IPAddress,ARA_Status,ARA_CompID,ARA_Comments)                  
values(@ARA_PKID,@ARA_CustID,@ARA_AuditCodeID,@ARA_FinancialYear,@ARA_FunID,@ARA_NetScore,      
@ARA_CrBy,Getdate(),@ARA_IPAddress,'W',@ARA_CompID,@ARA_Comments)                    
set @iUpdateOrSave=3                   
set @iOper = @ARA_PKID                     
End 

/
 
CREATE Procedure [dbo].[spAudit_ARA_Details]       
(                  
@ARAD_PKID int,     
@ARAD_ARAPKID int,    
@ARAD_SEMID int ,    
@ARAD_PMID int,        
@ARAD_SPMID int,      
@ARAD_IssueHeading Varchar(500),     
@ARAD_RiskID int,       
@ARAD_RiskTypeID int,        
@ARAD_ImpactID int,        
@ARAD_LikelihoodID int,        
@ARAD_RiskRating int,        
@ARAD_ControlID int,        
@ARAD_OES int,        
@ARAD_DES int,        
@ARAD_ControlRating int,        
@ARAD_ChecksID int,        
@ARAD_ResidualRiskRating int,        
@ARAD_Remarks Varchar(2000),        
@ARAD_IPAddress Varchar(25),        
@ARAD_CompID int,             
@iUpdateOrSave int Output,                  
@iOper int Output                    
)         
As                        
if @ARAD_PKID>0        
Begin        
Update Audit_ARA_Details set ARAD_ImpactID=@ARAD_ImpactID,ARAD_LikelihoodID=@ARAD_LikelihoodID,ARAD_RiskRating=@ARAD_RiskRating,ARAD_OES=@ARAD_OES,ARAD_DES=@ARAD_DES,ARAD_ControlRating=@ARAD_ControlRating,        
ARAD_IssueHeading=@ARAD_IssueHeading,ARAD_ResidualRiskRating=@ARAD_ResidualRiskRating,ARAD_IPAddress=@ARAD_IPAddress,ARAD_Remarks=@ARAD_Remarks        
where ARAD_PKID=@ARAD_PKID and ARAD_CompID=@ARAD_CompID          
set @iUpdateOrSave=2                 
set @iOper=@ARAD_PKID                  
End                  
Else                    
Begin                    
set @ARAD_PKID=(select IsNull(Max(ARAD_PKID)+1,1) from Audit_ARA_Details)                    
insert into Audit_ARA_Details(ARAD_PKID,ARAD_ARAPKID,ARAD_SEMID,ARAD_PMID,ARAD_SPMID,ARAD_RiskID,ARAD_RiskTypeID,ARAD_ControlID,ARAD_ChecksID,ARAD_ImpactID,ARAD_LikelihoodID,        
ARAD_RiskRating,ARAD_OES,ARAD_DES,ARAD_ControlRating,ARAD_ResidualRiskRating,ARAD_Remarks,ARAD_IPAddress,ARAD_CompID,ARAD_IssueHeading)                  
values(@ARAD_PKID,@ARAD_ARAPKID,@ARAD_SEMID,@ARAD_PMID,@ARAD_SPMID,@ARAD_RiskID,@ARAD_RiskTypeID,@ARAD_ControlID,@ARAD_ChecksID,@ARAD_ImpactID,@ARAD_LikelihoodID,        
@ARAD_RiskRating,@ARAD_OES,@ARAD_DES,@ARAD_ControlRating,@ARAD_ResidualRiskRating,@ARAD_Remarks,@ARAD_IPAddress,@ARAD_CompID,@ARAD_IssueHeading)                    
set @iUpdateOrSave=3                   
set @iOper=@ARAD_PKID                     
End 

/
  
CREATE Procedure [dbo].[spAudit_CostBudgetDetails]      
(      
@CBD_ID int,      
@CBD_YearID int,      
@CBD_AuditCodeID int,      
@CBD_DescID int,      
@CBD_UserID int,      
@CBD_Per_Head Float,      
@CBD_CrBy int,      
@CBD_UpdateBy int,      
@CBD_IPAddress Varchar(25),      
@CBD_CompID int,              
@iUpdateOrSave int Output,                          
@iOper int Output      
)      
as      
if exists(select CBD_ID from Audit_CostBudgetDetails Where CBD_DescID=@CBD_DescID And CBD_UserID=@CBD_UserID And CBD_AuditCodeID=@CBD_AuditCodeID And CBD_CompID=@CBD_CompID and CBD_YearID=@CBD_YearID)                            
 begin                
 update Audit_CostBudgetDetails set CBD_Per_Head=@CBD_Per_Head,              
CBD_UpdateBy=@CBD_UpdateBy ,CBD_UpdatedOn=GetDate(),CBD_Status='Updated'      
where  CBD_AuditCodeID=@CBD_AuditCodeID And CBD_CompID=@CBD_CompID and CBD_YearID=@CBD_YearID  and CBD_ID=@CBD_ID     
set @iUpdateOrSave=2                           
set @iOper =@CBD_ID                
end        
else              
begin                            
 set @CBD_ID=(select isnull(max(CBD_ID)+1,1) from Audit_CostBudgetDetails)                            
 insert into  Audit_CostBudgetDetails (CBD_ID,CBD_YearID,CBD_AuditCodeID,CBD_DescID,CBD_UserID,CBD_Per_Head,CBD_CrBy,CBD_CrOn,CBD_IPAddress,CBD_CompID,CBD_Status)                            
 values                            
 (@CBD_ID,@CBD_YearID,@CBD_AuditCodeID,@CBD_DescID,@CBD_UserID,@CBD_Per_Head,@CBD_CrBy,GetDate(),@CBD_IPAddress,@CBD_CompID,'Saved')                            
 set @iUpdateOrSave=3                           
 set @iOper = @CBD_ID                                 
end 

/

CREATE Procedure [dbo].[spAudit_CostSheetDetails]    
(    
@CSD_ID int,    
@CSD_YearID int,    
@CSD_AuditCodeID int, 
@CSD_FunID int ,
@CSD_CustID int ,   
@CSD_DescID int,   
@CSD_UserID int,
@CSD_Date Varchar(200),    
@CSD_Comments Varchar(8000),    
@CSD_KmsTravelled int,    
@CSD_Costs Int,    
@CSD_CrBy int,    
@CSD_UpdateBy int,    
@CSD_IPAddress Varchar(25),    
@CSD_CompID int,            
@iUpdateOrSave int Output,                        
@iOper int Output    
)    
as    
if exists(select CSD_ID from Audit_CostSheetDetails Where CSD_DescID=@CSD_DescID And CSD_AuditCodeID=@CSD_AuditCodeID
 And CSD_CompID=@CSD_CompID and CSD_YearID=@CSD_YearID And CSD_FunID=@CSD_FunID And CSD_CustID=@CSD_CustID And CSD_UserID=@CSD_UserID)                          
 begin              
 update Audit_CostSheetDetails set CSD_Date=@CSD_Date,CSD_Comments =@CSD_Comments ,CSD_KmsTravelled =@CSD_KmsTravelled,CSD_Costs =@CSD_Costs,            
CSD_UpdateBy=@CSD_UpdateBy ,CSD_UpdatedOn=GetDate(),CSD_Status='Updated',CSD_UserID=@CSD_UserID 
where  CSD_AuditCodeID=@CSD_AuditCodeID And CSD_CompID=@CSD_CompID and CSD_YearID=@CSD_YearID  and CSD_ID=@CSD_ID And CSD_UserID=@CSD_UserID             
set @iUpdateOrSave=2                         
set @iOper =@CSD_ID              
end      
else            
begin                          
 set @CSD_ID=(select isnull(max(CSD_ID)+1,1) from Audit_CostSheetDetails)                          
 insert into  Audit_CostSheetDetails (CSD_ID,CSD_YearID,CSD_AuditCodeID,CSD_DescID,CSD_Date,CSD_Comments,
CSD_KmsTravelled,CSD_Costs,CSD_CrBy,CSD_CrOn,CSD_IPAddress,CSD_CompID,CSD_FunID,CSD_CustID,CSD_Status,CSD_UserID)                          
 values                          
 (@CSD_ID,@CSD_YearID,@CSD_AuditCodeID,@CSD_DescID,@CSD_Date,@CSD_Comments,
@CSD_KmsTravelled,@CSD_Costs,@CSD_CrBy,GetDate(),@CSD_IPAddress,@CSD_CompID,@CSD_FunID,@CSD_CustID,'Saved',@CSD_UserID)                          
 set @iUpdateOrSave=3                         
 set @iOper = @CSD_ID                               
end 

/

CREATE Procedure [dbo].[spAudit_Doc_Request_List](
	@DRL_DRLID int ,
	@DRL_DocTypeID int ,
	@DRL_Name varchar(1000) ,
	@DRL_Description varchar(8000) ,
	@DRL_DocumentType varchar(25) ,
	@DRL_CrBy int ,
	@DRL_UpdatedBy int ,
	@DRL_IPAddress Varchar(25),
	@DRL_CompID int,
	@iUpdateOrSave int Output,                        
    @iOper int Output  
)
as                               
if exists(select DRL_DRLID from Audit_Doc_Request_List Where DRL_DRLID=@DRL_DRLID And DRL_CompID=@DRL_CompID)    
 begin              
 update Audit_Doc_Request_List set 	DRL_Name=@DRL_Name,DRL_Description=@DRL_Description,DRL_DocumentType=@DRL_DocumentType,
	DRL_UpdatedBy=@DRL_UpdatedBy,DRL_UpdatedOn=GetDate(),DRL_IPAddress=@DRL_IPAddress,DRL_Status='U'
 where  DRL_DRLID=@DRL_DRLID And DRL_CompID=@DRL_CompID           
set @iUpdateOrSave=2                         
set @iOper =@DRL_DRLID            
 end              
else                    
 begin                          
 set @DRL_DRLID=(select isnull(max(DRL_DRLID)+1,1) from Audit_Doc_Request_List)                          
 insert into  Audit_Doc_Request_List (DRL_DRLID,DRL_DocTypeID,DRL_Name,DRL_Description,DRL_DocumentType,DRL_CrBy,
DRL_CROn,DRL_Status,DRL_IPAddress,DRL_CompID)                          
 values(@DRL_DRLID,@DRL_DocTypeID,@DRL_Name,@DRL_Description,@DRL_DocumentType,@DRL_CrBy,
GetDate(),'C',@DRL_IPAddress,@DRL_CompID)                          
 set @iUpdateOrSave=3                         
 set @iOper = @DRL_DRLID                               
end

/

CREATE Procedure [dbo].[spAudit_Timeline](                   
 @AT_ID int,   
 @AT_CustId int, 
 @AT_AuditId int,
 @AT_Heading int,                     
 @AT_CheckpointId varchar(8000),               
 @AT_EmpId int,              
 @AT_WorkType int,                
 @AT_HrPrDay varchar(800), 
 @AT_Comments varchar(8000), 
 @AT_StartDate datetime,              
 @AT_EndDate datetime,           
 @AT_TotalHr int,             
 @AT_Status varchar(10),               
 @AT_CrBy int,                  
 @AT_UpdatedBy int,                  
 @AT_IPAddress varchar(25),                  
 @AT_CompID int,                  
 @iUpdateOrSave int Output,                  
 @iOper int Output                  
)                  
as                
if (@AT_ID>0)                
 begin                              
 Delete Audit_Timeline Where AT_ID=@AT_ID And AT_CompID=@AT_CompID                
 update Audit_Timeline set AT_Heading=@AT_Heading,          
 AT_CheckpointId=@AT_CheckpointId,AT_EmpId=@AT_EmpId,          
 AT_WorkType=@AT_WorkType,AT_HrPrDay=@AT_HrPrDay,AT_Comments=@AT_Comments,         
 AT_StartDate=@AT_StartDate,AT_EndDate=@AT_EndDate,          
 AT_TotalHr=@AT_TotalHr,          
 AT_UpdatedBy=@AT_UpdatedBy,AT_UpdatedOn=Getdate()                         
 where AT_ID=@AT_ID and AT_CustId = @AT_CustId                           
 set @iUpdateOrSave=2                              
 set @iOper=@AT_ID                
 end                
else                       
 begin                  
 set @AT_ID=(select isnull(max(AT_ID)+1,1) from Audit_Timeline)                  
 insert into Audit_Timeline (AT_ID,AT_CustId,AT_AuditId,AT_Heading,AT_CheckpointId,AT_EmpId,AT_WorkType,AT_HrPrDay,AT_Comments,AT_StartDate,AT_EndDate,AT_TotalHr,AT_Status,AT_CrBy,AT_CrOn,AT_IPAddress,AT_CompID)                     
   values(@AT_ID,@AT_CustId,@AT_AuditId,@AT_Heading,@AT_CheckpointId,@AT_EmpId,@AT_WorkType,@AT_HrPrDay,@AT_Comments,@AT_StartDate,@AT_EndDate,@AT_TotalHr,@AT_Status,@AT_CrBy,GetDate(),@AT_IPAddress,@AT_CompID)                  
 set @iUpdateOrSave=3                  
 set @iOper = @AT_ID                  
 end

/
CREATE Procedure [dbo].[spAudit_DRLLog] (            
 @ADRL_ID int ,          
 @ADRL_YearID int,          
 @ADRL_AuditNo int ,   
 @ADRL_FunID int,  
 @ADRL_CustID int,         
 @ADRL_RequestedListID int ,
 @ADRL_RequestedTypeID int,
 @ADRL_RequestedOn varchar(50),
 @ADRL_TimlinetoResOn varchar(50),
 @ADRL_EmailID varchar(100),
 @ADRL_Comments varchar(8000),            
 @ADRL_CrBy int ,          
 @ADRL_UpdatedBy int,           
 @ADRL_IPAddress varchar(25),          
 @ADRL_CompID int,          
 @iUpdateOrSave int Output,                            
 @iOper int Output             
)               
as                                   
if exists(select ADRL_ID from Audit_DRLLog Where ADRL_AuditNo=@ADRL_AuditNo And ADRL_FunID=@ADRL_FunID And ADRL_CustID=@ADRL_CustID 
And ADRL_RequestedListID=@ADRL_RequestedListID And ADRL_RequestedTypeID=@ADRL_RequestedTypeID And ADRL_CompID=@ADRL_CompID and ADRL_YearID=@ADRL_YearID)          
 begin                  
 update Audit_DRLLog set ADRL_RequestedOn=@ADRL_RequestedOn,ADRL_EmailID=@ADRL_EmailID,ADRL_Comments=@ADRL_Comments,ADRL_UpdatedBy=@ADRL_UpdatedBy,
 ADRL_UpdatedOn=Getdate(),ADRL_IPAddress=@ADRL_IPAddress,ADRL_Status='Updated'
where  ADRL_ID=@ADRL_ID And ADRL_AuditNo=@ADRL_AuditNo And ADRL_FunID=@ADRL_FunID And ADRL_CustID=@ADRL_CustID 
And ADRL_RequestedListID=@ADRL_RequestedListID And ADRL_RequestedTypeID=@ADRL_RequestedTypeID And ADRL_CompID=@ADRL_CompID and ADRL_YearID=@ADRL_YearID              
set @iUpdateOrSave=2                             
set @iOper =@ADRL_ID                  
 end                  
else                        
 begin                              
 set @ADRL_ID=(select isnull(max(ADRL_ID)+1,1) from Audit_DRLLog)                              
 insert into  Audit_DRLLog (ADRL_ID,ADRL_YearID,ADRL_AuditNo,ADRL_FunID,ADRL_CustID,ADRL_RequestedListID,ADRL_RequestedTypeID,ADRL_RequestedOn,
ADRL_EmailID,ADRL_Comments,ADRL_CrBy,ADRL_CrOn,ADRL_IPAddress,ADRL_CompID,ADRL_Status)                              
 values                              
 (@ADRL_ID,@ADRL_YearID,@ADRL_AuditNo,@ADRL_FunID,@ADRL_CustID,@ADRL_RequestedListID,@ADRL_RequestedTypeID,@ADRL_RequestedOn,
@ADRL_EmailID,@ADRL_Comments,@ADRL_CrBy,Getdate(),@ADRL_IPAddress,@ADRL_CompID,'Saved')                              
 set @iUpdateOrSave=3                             
 set @iOper = @ADRL_ID                                   
end 

/

CREATE Procedure [dbo].[spAudit_ExecutiveSummary](
	@AES_PKID int ,
	@AES_YearID int ,
	@AES_AuditCode int ,
	@AES_CustID int ,
	@AES_FunctionID int ,
	@AES_IssuanceDate Datetime,
	@AES_AuditRatingID int,
	@AES_Introduction varchar(8000) ,
	@AES_BusinessOverview  varchar(8000) ,
	@AES_AuditScope varchar(8000) ,
	@AES_AuditScopeOut varchar(8000) ,
	@AES_KeyAuditObservation varchar(8000) ,
	@AES_AuditPeriodStartDate Datetime,
    @AES_AuditPeriodEndDate Datetime,
	@AES_ActualPeriodStartDate Datetime,
	@AES_ActualPeriodEndDate Datetime,
	@AES_AuditRating varchar(8000) ,
	@AES_AuditRemarks varchar(8000) ,
	@AES_CrBy int ,
	@AES_UpdatedBy int ,
	@AES_IPAddress varchar(25), 
	@AES_CompID int,
    @AES_AttchID int,	
	@iUpdateOrSave int Output,                          
    @iOper int Output         
) 
as                                 
if exists(select AES_PKID from Audit_ExecutiveSummary Where AES_YearID=@AES_YearID And  AES_AuditCode=@AES_AuditCode And AES_CustID=@AES_CustID And AES_FunctionID=@AES_FunctionID And  AES_CompID=@AES_CompID)                            
 begin                 
 update Audit_ExecutiveSummary set AES_IssuanceDate=@AES_IssuanceDate ,AES_AuditRatingID=@AES_AuditRatingID ,AES_Introduction=@AES_Introduction ,AES_BusinessOverview=@AES_BusinessOverview,
AES_AuditScope=@AES_AuditScope ,AES_AuditScopeOut=@AES_AuditScopeOut ,AES_KeyAuditObservation =@AES_KeyAuditObservation ,AES_AuditPeriodStartDate=@AES_AuditPeriodStartDate ,
AES_AuditPeriodEndDate =@AES_AuditPeriodEndDate ,AES_ActualPeriodStartDate=@AES_ActualPeriodStartDate ,AES_ActualPeriodEndDate=@AES_ActualPeriodEndDate ,AES_AttchID=@AES_AttchID,
AES_AuditRating =@AES_AuditRating ,AES_AuditRemarks=@AES_AuditRemarks ,AES_UpdatedBy=@AES_UpdatedBy,AES_UpdatedOn=Getdate(),AES_IPAddress=@AES_IPAddress ,AES_Status='Updated'
 where  AES_PKID=@AES_PKID And AES_YearID=@AES_YearID And  AES_AuditCode=@AES_AuditCode And AES_CustID=@AES_CustID And AES_FunctionID=@AES_FunctionID And  AES_CompID=@AES_CompID                                         
 set @iUpdateOrSave=2                           
 set @iOper =@AES_PKID              
 end                
else                      
 begin                            
 set @AES_PKID=(select isnull(max(AES_PKID)+1,1) from Audit_ExecutiveSummary)                            
 insert into  Audit_ExecutiveSummary (AES_PKID,AES_YearID,AES_AuditCode,AES_CustID,AES_FunctionID,AES_IssuanceDate,AES_AuditRatingID ,
AES_Introduction ,AES_BusinessOverview,AES_AuditScope ,AES_AuditScopeOut ,AES_KeyAuditObservation ,
AES_AuditPeriodStartDate ,AES_AuditPeriodEndDate ,AES_ActualPeriodStartDate ,AES_ActualPeriodEndDate ,
AES_AuditRating ,AES_AuditRemarks ,AES_CrBy,AES_CrOn,AES_IPAddress, AES_CompID,AES_Status,AES_AttchID)                            
 values                            
 (@AES_PKID,@AES_YearID,@AES_AuditCode,@AES_CustID,@AES_FunctionID,@AES_IssuanceDate ,@AES_AuditRatingID ,
@AES_Introduction ,@AES_BusinessOverview,@AES_AuditScope ,@AES_AuditScopeOut ,@AES_KeyAuditObservation ,
@AES_AuditPeriodStartDate ,@AES_AuditPeriodEndDate ,@AES_ActualPeriodStartDate ,@AES_ActualPeriodEndDate ,
@AES_AuditRating ,@AES_AuditRemarks ,@AES_CrBy,Getdate(),@AES_IPAddress,@AES_CompID,'Saved',@AES_AttchID)                            
 set @iUpdateOrSave=3                           
 set @iOper = @AES_PKID                                 
end 

/

CREATE Procedure [dbo].[spAudit_IssueTracker_details](              
@AIT_PKID int,
@AIT_YearID int,
@AIT_AuditCode int,
@AIT_CustID int,
@AIT_WorkPaperID int,
@AIT_FunctionID int,
@AIT_SubFunctionID int ,
@AIT_ProcessID int ,
@AIT_SubProcessID int ,
@AIT_RiskID int ,
@AIT_ControlID int ,
@AIT_CheckID int ,
@AIT_IssueJobNo varchar(100),
@AIT_SeverityID int,
@AIT_RiskCategoryID int,
@AIT_IssueNameID int,
@AIT_IssueName varchar(8000),
@AIT_Criteria varchar(8000),
@AIT_Condition varchar(8000),
@AIT_Details varchar(8000),
@AIT_Impact varchar(8000),
@AIT_RootCause varchar(8000),
@AIT_SuggestedRemedies varchar(8000),
@AIT_OpenCloseStatus Int,
@AIT_AuditorRemarks varchar(8000),
@AIT_ReviewerRemarks varchar(8000),  
@AIT_AttachID int,   
@AIT_CreatedBy int,    
@AIT_UpdatedBy int ,    
@AIT_CompID int,    
@AIT_IPAddress varchar(100),    
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as                     
if exists(select AIT_PKID from Audit_IssueTracker_details Where AIT_YearID=@AIT_YearID And AIT_CustID=@AIT_CustID
 And AIT_AuditCode=@AIT_AuditCode And AIT_FunctionID=@AIT_FunctionID And AIT_IssueJobNo=@AIT_IssueJobNo And AIT_CompID=@AIT_CompID)                
begin    
 update Audit_IssueTracker_details set AIT_SubFunctionID=@AIT_SubFunctionID,AIT_ProcessID=@AIT_ProcessID,AIT_SubProcessID=@AIT_SubProcessID,
AIT_RiskID =@AIT_RiskID,AIT_ControlID=@AIT_ControlID,AIT_CheckID=@AIT_CheckID,AIT_SeverityID=@AIT_SeverityID,AIT_RiskCategoryID=@AIT_RiskCategoryID,
AIT_IssueNameID=@AIT_IssueNameID,AIT_IssueName=@AIT_IssueName,AIT_Criteria=@AIT_Criteria,AIT_Condition=@AIT_Condition,AIT_Details=@AIT_Details,AIT_Impact=@AIT_Impact,
AIT_RootCause=@AIT_RootCause,AIT_SuggestedRemedies=@AIT_SuggestedRemedies,  AIT_AttachID=@AIT_AttachID,AIT_UpdatedBy=@AIT_UpdatedBy,
AIT_UpdatedOn=GetDate(),AIT_IPAddress=@AIT_IPAddress,AIT_Status='Updated',AIT_WorkPaperID=@AIT_WorkPaperID,
AIT_OpenCloseStatus=@AIT_OpenCloseStatus,AIT_AuditorRemarks=@AIT_AuditorRemarks,AIT_ReviewerRemarks=@AIT_ReviewerRemarks   
where  AIT_YearID=@AIT_YearID And AIT_CustID=@AIT_CustID And AIT_AuditCode=@AIT_AuditCode And
      AIT_FunctionID=@AIT_FunctionID And AIT_IssueJobNo=@AIT_IssueJobNo And AIT_CompID=@AIT_CompID              
 set @iUpdateOrSave=2               
 set @iOper =(Select AIT_PKID from Audit_IssueTracker_details Where AIT_YearID=@AIT_YearID And AIT_CustID=@AIT_CustID And AIT_AuditCode=@AIT_AuditCode And
      AIT_FunctionID=@AIT_FunctionID And AIT_IssueJobNo=@AIT_IssueJobNo And AIT_CompID=@AIT_CompID )    
 end    
else          
 begin                
 set @AIT_PKID=(select isNull(max(AIT_PKID)+1,1) from Audit_IssueTracker_details)                
 insert into Audit_IssueTracker_details(AIT_PKID,AIT_YearID,AIT_CustID,AIT_AuditCode,AIT_FunctionID,
AIT_SubFunctionID,AIT_ProcessID,AIT_SubProcessID,AIT_RiskID,AIT_ControlID,AIT_CheckID,AIT_IssueJobNo,
AIT_SeverityID,AIT_RiskCategoryID,AIT_IssueNameID,AIT_IssueName,AIT_Criteria,AIT_Condition,AIT_Details,AIT_Impact,
AIT_RootCause,AIT_SuggestedRemedies,AIT_AttachID, AIT_CreatedBy,AIT_CreatedOn,AIT_CompID,AIT_IPAddress,
AIT_Status,AIT_WorkPaperID,AIT_OpenCloseStatus,AIT_AuditorRemarks,AIT_ReviewerRemarks)    
 values                
 (@AIT_PKID,@AIT_YearID,@AIT_CustID,@AIT_AuditCode,@AIT_FunctionID,@AIT_SubFunctionID,@AIT_ProcessID,@AIT_SubProcessID,@AIT_RiskID,
@AIT_ControlID,@AIT_CheckID,@AIT_IssueJobNo,@AIT_SeverityID,@AIT_RiskCategoryID,@AIT_IssueNameID,@AIT_IssueName,@AIT_Criteria,@AIT_Condition,
@AIT_Details,@AIT_Impact,@AIT_RootCause,@AIT_SuggestedRemedies,@AIT_AttachID, @AIT_CreatedBy,Getdate(),@AIT_CompID,@AIT_IPAddress,
'Saved',@AIT_WorkPaperID,@AIT_OpenCloseStatus,@AIT_AuditorRemarks,@AIT_ReviewerRemarks)             
 set @iUpdateOrSave=3               
 set @iOper = @AIT_PKID                     
end 

/

CREATE Procedure [dbo].[SpAudit_Log_Form_Operations]          
(                
@ALFO_UserID int,
@ALFO_Module varchar(50),
@ALFO_Form varchar(500),
@ALFO_Event varchar(500),
@ALFO_MasterID int,
@ALFO_MasterName varchar(8000),
@ALFO_SubMasterID int,
@ALFO_SubMasterName varchar(8000),
@ALFO_IPAddress varchar(25),
@ALFO_CompID int                                     
)                      
As
Begin
Declare @ALFO_PKID int
set @ALFO_PKID=(select isnull(max(ALFO_PKID)+1,1) from Audit_Log_Form_Operations)
insert into Audit_Log_Form_Operations(ALFO_PKID,ALFO_UserID,ALFO_Date,ALFO_Module,ALFO_Form,ALFO_Event,ALFO_MasterID,ALFO_MasterName,ALFO_SubMasterID,ALFO_SubMasterName,ALFO_IPAddress,ALFO_CompID)
Values(@ALFO_PKID,@ALFO_UserID,GetDate(),@ALFO_Module,@ALFO_Form,@ALFO_Event,@ALFO_MasterID,@ALFO_MasterName,@ALFO_SubMasterID,@ALFO_SubMasterName,@ALFO_IPAddress,@ALFO_CompID)
End 

 /

Create Procedure [dbo].[spAudit_PlanSignOff](                      
 	@APSO_ID int ,
	@APSO_YearID int ,
	@APSO_AuditCode varchar(50),
	@APSO_CustID int ,
	@APSO_FunctionID int ,
	@APSO_AuditReview int ,
	@APSO_AuditPlanStatus int ,
	@APSO_Remarks varchar(5000),
	@APSO_CrBy int ,
	@APSO_UpdatedBy int ,
	@APSO_IPAddress varchar(25),
	@APSO_AttachID int ,
	@APSO_CompID int ,                  
    @iUpdateOrSave int Output,                                  
    @iOper int Output                        
)                      
as                                         
if exists(select APSO_ID from Audit_PlanSignOff Where APSO_YearID=@APSO_YearID And APSO_AuditCode=@APSO_AuditCode And APSO_CustID=@APSO_CustID And APSO_FunctionID=@APSO_FunctionID ANd APSO_CompID=@APSO_CompID )                                    
 begin                        
    update Audit_PlanSignOff set APSO_AuditReview=@APSO_AuditReview,APSO_AuditPlanStatus=@APSO_AuditPlanStatus,APSO_Remarks=@APSO_Remarks,
    APSO_UpdatedBy=@APSO_UpdatedBy,APSO_UpdatedOn=GetDate(),APSO_IPAddress=@APSO_IPAddress,APSO_AttachID=@APSO_AttachID,APSO_Status='Updated'  
    where  APSO_YearID=@APSO_YearID And APSO_AuditCode=@APSO_AuditCode And APSO_CustID=@APSO_CustID And APSO_FunctionID=@APSO_FunctionID And APSO_CompID=@APSO_CompID                               
    set @iUpdateOrSave=2                                   
    set @iOper =@APSO_ID
  end                        
else                              
 begin                                    
   set @APSO_ID=(select isnull(max(APSO_ID)+1,1) from Audit_PlanSignOff)                                    
   insert into  Audit_PlanSignOff (APSO_ID,APSO_YearID,APSO_AuditCode,APSO_CustID,APSO_FunctionID,APSO_AuditReview,APSO_AuditPlanStatus,
   APSO_Remarks ,APSO_CrBy,APSO_CrOn,APSO_IPAddress,APSO_AttachID,APSO_CompID,APSO_Status)                                    
   values(@APSO_ID,@APSO_YearID,@APSO_AuditCode ,@APSO_CustID,@APSO_FunctionID,@APSO_AuditReview,@APSO_AuditPlanStatus,
   @APSO_Remarks ,@APSO_CrBy,Getdate(),@APSO_IPAddress ,@APSO_AttachID,@APSO_CompID,'Saved')                                    
  set @iUpdateOrSave=3                                   
  set @iOper = @APSO_ID                                         
end

/

create Procedure [dbo].[spAudit_schedule]  
(    
@AUD_ID int ,
@AUD_Code varchar(50) ,
@AUD_YearID int ,
@AUD_MonthID int ,
@AUD_SectionID int ,
@AUD_KitchenID int ,
@AUD_AuditorIDs varchar(500) ,
@AUD_FromDate datetime ,
@AUD_ToDate datetime ,
@AUD_Intmail int ,
@AUD_Firstmail int ,
@AUD_SecondMail int ,
@AUD_CrBy int ,
--@AUD_CrOn datetime ,
@AUD_UpdatedBy int ,
--@AUD_UpdateOn datetime ,
@AUD_ApprovedBy int ,
--@AUD_ApprovedOn datetime ,
@AUD_Status varchar(1) ,
@AUD_CompID int ,
@AUD_Operation varchar(100) ,
@AUD_IPAddress varchar(50),
@iUpdateOrSave int Output,      
@iOper int Output     
)    
as           
  if exists(select AUD_ID from Audit_Schedule where AUD_ID= @AUD_ID and AUD_sectionID=@AUD_sectionID AND AUD_CompID= @AUD_CompID)      
begin       
set @AUD_Status='U'  
  update Audit_Schedule set AUD_YearID= @AUD_YearID, AUD_MonthID= @AUD_MonthID, AUD_SectionID= @AUD_SectionID, AUD_KitchenID= @AUD_KitchenID,
  AUD_AuditorIDs= @AUD_AuditorIDs, AUD_FromDate= @AUD_FromDate, AUD_ToDate= @AUD_ToDate, AUD_Intmail= @AUD_Intmail, AUD_Firstmail=@AUD_Firstmail,
  AUD_SecondMail=@AUD_SecondMail, AUD_UpdatedBy=@AUD_UpdatedBy, AUD_UpdateOn=Getdate(), AUD_Operation=@AUD_Operation, AUD_IPAddress=@AUD_IPAddress 
  where  AUD_ID=@AUD_ID and AUD_CompID = @AUD_CompID and AUD_Code=@AUD_Code  
  set @iUpdateOrSave=2          
  set @iOper =@AUD_ID      
end    
else    
begin      
  set @AUD_ID=(select ISNULL(max(AUD_ID)+1,1) from Audit_Schedule)      
 insert into Audit_Schedule(AUD_ID, AUD_Code, AUD_YearID ,AUD_MonthId, AUD_SectionID ,AUD_KitchenID ,AUD_AuditorIDs, AUD_FromDate, AUD_ToDate,
	AUD_Intmail ,AUD_Firstmail ,AUD_SecondMail ,AUD_CrBy ,AUD_CrOn ,AUD_ApprovedBy,AUD_ApprovedOn, AUD_Status, AUD_CompID ,AUD_Operation,AUD_IPAddress )      
 values (@AUD_ID, @AUD_Code, @AUD_YearID ,@AUD_MonthId, @AUD_SectionID ,@AUD_KitchenID ,@AUD_AuditorIDs, @AUD_FromDate, @AUD_ToDate,
	@AUD_Intmail ,@AUD_Firstmail ,@AUD_SecondMail ,@AUD_CrBy ,Getdate() ,@AUD_ApprovedBy,Getdate(), @AUD_Status, @AUD_CompID ,@AUD_Operation,@AUD_IPAddress  ) 
  set @iUpdateOrSave=3         
  set @iOper =@AUD_ID      
 end

 /
      
CREATE Procedure [dbo].[spAudit_SignOff](        
 @ASO_PKID int ,        
 @ASO_YearID int,        
 @ASO_AuditCodeID int ,   
 @ASO_FunctionID int ,  
 @ASO_CustID int ,        
 @ASO_MasterID int ,        
 @ASO_AuditRatingID int,      
 @ASO_SignOffStatus varchar(5),        
 @ASO_Comments varchar(5000),        
 @ASO_OverAllComments varchar(8000),     
 @ASO_KeyObservation varchar(8000),       
 @ASO_CrBy int ,        
 @ASO_UpdatedBy int ,        
 @ASO_AttachID int ,        
 @ASO_IPAddress varchar(25),        
 @ASO_CompID int,        
 @iUpdateOrSave int Output,                            
 @iOper int Output           
)         
as                                   
if exists(select ASO_PKID from Audit_SignOff Where ASO_PKID=@ASO_PKID And ASO_CustID=@ASO_CustID And ASO_AuditCodeID=@ASO_AuditCodeID And ASO_FunctionID=@ASO_FunctionID and @ASO_YearID=ASO_YearID And ASO_CompID=@ASO_CompID)                              
 begin         
 Declare @ASO_Status varchar(25)                 
 update Audit_SignOff set ASO_SignOffStatus=@ASO_SignOffStatus,ASO_KeyObservation=@ASO_KeyObservation, ASO_MasterID =@ASO_MasterID,@ASO_AuditCodeID=ASO_AuditCodeID,ASO_Comments=@ASO_Comments ,ASO_AuditRatingID=@ASO_AuditRatingID,      
ASO_OverAllComments=@ASO_OverAllComments,ASO_Status='Updated' ,ASO_UpdatedBy=@ASO_UpdatedBy,ASO_UpdatedOn=Getdate(),ASO_AttachID=@ASO_AttachID ,ASO_IPAddress=@ASO_IPAddress        
where  ASO_PKID=@ASO_PKID And ASO_AuditCodeID=@ASO_AuditCodeID and ASO_YearID=@ASO_YearID  And ASO_CompID=@ASO_CompID     and @ASO_PKID=ASO_PKID                    
set @iUpdateOrSave=2                             
set @iOper =@ASO_PKID                
 end                  
else                        
 begin                              
 set @ASO_PKID=(select isnull(max(ASO_PKID)+1,1) from Audit_SignOff)                              
 insert into  Audit_SignOff (ASO_PKID,ASO_YearID,ASO_AuditCodeID,ASO_FunctionID,ASO_CustID,ASO_MasterID,ASO_SignOffStatus,ASO_Comments,ASO_OverAllComments,ASO_Status,ASO_CrBy,        
ASO_CrOn,ASO_AttachID,ASO_IPAddress,ASO_CompID,ASO_AuditRatingID,ASO_KeyObservation)                              
 values                              
 (@ASO_PKID,@ASO_YearID,@ASO_AuditCodeID,@ASO_FunctionID,@ASO_CustID,@ASO_MasterID,@ASO_SignOffStatus,@ASO_Comments,@ASO_OverAllComments,'Saved',@ASO_CrBy,        
GetDate(),@ASO_AttachID,@ASO_IPAddress,@ASO_CompID,@ASO_AuditRatingID,@ASO_KeyObservation)                              
 set @iUpdateOrSave=3                             
 set @iOper = @ASO_PKID                                   
end   
  
/
      
CREATE Procedure [dbo].[spAudit_TimeCostBudgetDetails]      
(      
@ATCD_PKID int,      
@ATCD_ATCBID int,      
@ATCD_YearID int,     
@ATCD_Type Varchar(2),  
@ATCD_TaskProcessID int,  
@ATCD_AuditCodeID int,      
@ATCD_UserID int,      
@ATCD_Hours int,      
@ATCD_HoursPerDay int,      
@ATCD_CostPerDay float,    
@ATCD_Days int,  
@ATCD_Cost  int,  
@ATCD_IPAddress Varchar(25),      
@ATCD_CompID int,      
@iUpdateOrSave int Output,                      
@iOper int Output          
)      
As                            
if exists(select ATCD_PKID from  Audit_TimeCostBudgetDetails where ATCD_PKID=@ATCD_PKID And ATCD_ATCBID=@ATCD_ATCBID And ATCD_YearID=@ATCD_YearID And ATCD_AuditCodeID=@ATCD_AuditCodeID And ATCD_CompID=@ATCD_CompID )                        
Begin          
Update  Audit_TimeCostBudgetDetails set ATCD_UserID=@ATCD_UserID ,ATCD_Hours=@ATCD_Hours ,ATCD_HoursPerDay=@ATCD_HoursPerDay ,      
ATCD_CostPerDay=@ATCD_CostPerDay ,ATCD_IPAddress=@ATCD_IPAddress,ATCD_Days=@ATCD_Days, ATCD_Cost=@ATCD_Cost  
where ATCD_PKID=@ATCD_PKID And ATCD_ATCBID=@ATCD_ATCBID And ATCD_YearID=@ATCD_YearID And ATCD_AuditCodeID=@ATCD_AuditCodeID  And ATCD_CompID=@ATCD_CompID           
set @iUpdateOrSave=2                     
set @iOper = @ATCD_PKID                      
End                      
Else                         
Begin                        
set @ATCD_PKID=(select IsNull(Max(ATCD_PKID)+1,1) from  Audit_TimeCostBudgetDetails)                        
insert into  Audit_TimeCostBudgetDetails (ATCD_PKID,ATCD_ATCBID,ATCD_YearID,ATCD_AuditCodeID,ATCD_UserID,ATCD_Hours,      
ATCD_HoursPerDay,ATCD_CostPerDay,ATCD_IPAddress,ATCD_CompID,ATCD_TaskProcessID,ATCD_Type,ATCD_Cost,ATCD_Days)                  
values(@ATCD_PKID,@ATCD_ATCBID,@ATCD_YearID,@ATCD_AuditCodeID,@ATCD_UserID,@ATCD_Hours,      
@ATCD_HoursPerDay,@ATCD_CostPerDay,@ATCD_IPAddress,@ATCD_CompID,@ATCD_TaskProcessID,@ATCD_Type,@ATCD_Cost,@ATCD_Days)                        
set @iUpdateOrSave=3                       
set @iOper = @ATCD_PKID                         
End 

/

CREATE Procedure [dbo].[spAudit_TimeCostBudgetMaster]    
(    
@ATCB_PKID int,    
@ATCB_YearID int,    
@ATCB_AuditCodeID int,    
@ATCB_Type Varchar(2),    
@ATCB_TaskProcessID int,    
@ATCB_Createdby int,    
@ATCB_IPAddress Varchar(25),    
@ATCB_CompID int,    
@iUpdateOrSave int Output,                    
@iOper int Output              
)           
As                            
if exists(select ATCB_PKID from  Audit_TimeCostBudgetMaster where ATCB_TaskProcessID=@ATCB_TaskProcessID And ATCB_AuditCodeID=@ATCB_AuditCodeID ANd ATCB_Type=@ATCB_Type And ATCB_CompID=@ATCB_CompID )                        
Begin          
Update  Audit_TimeCostBudgetMaster set ATCB_DelFlag='A'  ,ATCB_Status='C'  
where ATCB_PKID=@ATCB_PKID And ATCB_AuditCodeID=@ATCB_AuditCodeID ANd ATCB_Type=@ATCB_Type And ATCB_CompID=@ATCB_CompID  
set @iUpdateOrSave=2                     
set @iOper =(select ATCB_PKID from  Audit_TimeCostBudgetMaster where ATCB_TaskProcessID=@ATCB_TaskProcessID And ATCB_AuditCodeID=@ATCB_AuditCodeID ANd ATCB_Type=@ATCB_Type And ATCB_CompID=@ATCB_CompID )                                     
End                      
Else                                                  
Begin                      
set @ATCB_PKID=(select IsNull(Max(ATCB_PKID)+1,1) from  Audit_TimeCostBudgetMaster)                      
insert into  Audit_TimeCostBudgetMaster (ATCB_PKID ,ATCB_YearID ,ATCB_AuditCodeID ,ATCB_Type ,ATCB_TaskProcessID ,ATCB_DelFlag ,ATCB_Status ,    
ATCB_Createdby , ATCB_CreatedOn,ATCB_IPAddress,ATCB_CompID )                
values(@ATCB_PKID ,@ATCB_YearID ,@ATCB_AuditCodeID ,@ATCB_Type ,@ATCB_TaskProcessID ,'A' ,'C' ,    
@ATCB_Createdby ,GetDate(),@ATCB_IPAddress,@ATCB_CompID)                      
set @iUpdateOrSave=3                     
set @iOper = @ATCB_PKID                       
End   

/
       
CREATE Procedure [dbo].[spAudit_TimeSheet]                 
(                    
@TS_PKID int,        
@TS_AuditCodeID int,     
@TS_FunID int,  
@TS_CustID int,     
@TS_TaskID int,        
@TS_TaskType varchar(2),        
@TS_UserID int,        
@TS_Date datetime,        
@TS_Comments varchar (500),        
@TS_Hours decimal,          
@TS_CRBY int,        
@TS_UpdatedBy int,        
@TS_IPAddress varchar (25),        
@TS_YearID int,        
@TS_CompID int,        
@iUpdateOrSave int Output,                    
@iOper int Output              
)           
As                          
if exists(select TS_PKID from Audit_TimeSheet where TS_PKID=@TS_PKID And TS_AuditCodeID=@TS_AuditCodeID  And TS_FunID=@TS_FunID And TS_CustID=@TS_CustID And TS_CompID=@TS_CompID )                      
Begin        
set @TS_PKID=(select TS_PKID from Audit_TimeSheet where TS_PKID=@TS_PKID And TS_CompID=@TS_CompID )                     
Update Audit_TimeSheet set  TS_Date=@TS_Date,TS_Comments=@TS_Comments,TS_Hours=@TS_Hours,TS_STATUS='U',        
TS_UpdatedOn=getdate(),TS_UpdatedBy=@TS_UpdatedBy,TS_IPAddress=@TS_IPAddress        
where TS_PKID=@TS_PKID and TS_CompID=@TS_CompID And TS_AuditCodeID=@TS_AuditCodeID And TS_FunID=@TS_FunID  And TS_CustID=@TS_CustID And TS_TaskID=@TS_TaskID        
set @iUpdateOrSave=2                   
set @iOper = @TS_PKID                    
End                    
Else                       
Begin                      
set @TS_PKID=(select IsNull(Max(TS_PKID)+1,1) from Audit_TimeSheet)                      
insert into Audit_TimeSheet(TS_PKID,TS_AuditCodeID,TS_TaskID,TS_TaskType,TS_UserID,TS_Date,TS_Comments,TS_Hours,        
TS_STATUS,TS_CRON,TS_CRBY,TS_IPAddress,TS_YearID,TS_CompID,TS_FunID,TS_CustID )                    
values(@TS_PKID,@TS_AuditCodeID,@TS_TaskID,@TS_TaskType,@TS_UserID,@TS_Date,        
@TS_Comments,@TS_Hours,'W',getdate(),@TS_CRBY,@TS_IPAddress,@TS_YearID,@TS_CompID,@TS_FunID,@TS_CustID)                      
set @iUpdateOrSave=3                     
set @iOper = @TS_PKID                       
End 

/

CREATE Procedure [dbo].[spAudit_WorkPaper]    
(    
 @AWP_PKID Int,    
 @AWP_YearID int,    
 @AWP_CustID int,    
 @AWP_AuditCode int,    
 @AWP_FunctionID int,    
 @AWP_SubFunctionID int,    
 @AWP_ProcessID int,    
 @AWP_SubProcessID int,    
 @AWP_RiskID int,    
 @AWP_ControlID int,    
 @AWP_ChecksID int,    
 @AWP_WorkPaperNo varchar(500),    
 @AWP_TypeofTestID int,    
 @AWP_ConclusionID int,    
 @AWP_WorkPaperDone varchar(5000),    
 @AWP_AuditorObservationName varchar(500),    
 @AWP_Note Varchar(5000),    
 @AWP_AuditeeResponseName varchar(500),    
 @AWP_Response Varchar(5000), 
 @AWP_AuditorRemarks  Varchar(5000),
 @AWP_ReviewerRemarks  Varchar(5000),
 @AWP_OpenCloseStatus int,   
 @AWP_AttachID int,    
 @AWP_CrBy int,    
 @AWP_UpdatedBy int,    
 @AWP_IPAddress Varchar(25),    
 @AWP_CompID int,                            
 @iUpdateOrSave int Output,                                        
 @iOper int Output      
)    
as                                               
if exists(select AWP_PKID from Audit_WorkPaper Where  AWP_WorkPaperNo=@AWP_WorkPaperNo And AWP_YearID=@AWP_YearID And AWP_CustID =@AWP_CustID And AWP_AuditCode=@AWP_AuditCode And AWP_FunctionID=@AWP_FunctionID And AWP_CompID =@AWP_CompID And AWP_YearID=@AWP_YearID)                                          
begin                              
  update Audit_WorkPaper set AWP_SubFunctionID=@AWP_SubFunctionID ,AWP_ProcessID=@AWP_ProcessID ,AWP_SubProcessID =@AWP_SubProcessID ,    
AWP_RiskID=@AWP_RiskID ,AWP_ControlID=@AWP_ControlID ,AWP_ChecksID=@AWP_ChecksID ,AWP_TypeofTestID=@AWP_TypeofTestID ,AWP_ConclusionID=@AWP_ConclusionID ,AWP_WorkPaperDone =@AWP_WorkPaperDone ,    
AWP_AuditorObservationName =@AWP_AuditorObservationName ,AWP_Note=@AWP_Note ,AWP_AuditeeResponseName=@AWP_AuditeeResponseName,AWP_AuditorRemarks=@AWP_AuditorRemarks,AWP_ReviewerRemarks=@AWP_ReviewerRemarks,  
AWP_Response=@AWP_Response,AWP_UpdatedBy=@AWP_UpdatedBy,AWP_UpdatedOn=GetDate(),AWP_IPAddress=@AWP_IPAddress,AWP_AttachID=@AWP_AttachID,AWP_OpenCloseStatus=@AWP_OpenCloseStatus,AWP_Status='Updated'
where AWP_WorkPaperNo=@AWP_WorkPaperNo And AWP_YearID=@AWP_YearID And AWP_CustID =@AWP_CustID And AWP_AuditCode=@AWP_AuditCode And AWP_FunctionID=@AWP_FunctionID And AWP_CompID =@AWP_CompID                                          
set @iUpdateOrSave=2                                         
set @iOper = (Select AWP_PKID From Audit_WorkPaper Where AWP_WorkPaperNo=@AWP_WorkPaperNo And AWP_YearID=@AWP_YearID And AWP_CustID =@AWP_CustID And AWP_AuditCode=@AWP_AuditCode And AWP_FunctionID=@AWP_FunctionID And AWP_CompID =@AWP_CompID)  
 end                              
else                                    
 begin                                          
 set @AWP_PKID=(select isnull(max(AWP_PKID)+1,1) from Audit_WorkPaper)                                          
 insert into  Audit_WorkPaper (AWP_PKID,AWP_YearID,AWP_CustID,AWP_AuditCode,AWP_FunctionID,AWP_SubFunctionID,AWP_ProcessID,AWP_SubProcessID,AWP_RiskID,AWP_ControlID,    
AWP_ChecksID,AWP_WorkPaperNo,AWP_TypeofTestID,AWP_ConclusionID,AWP_WorkPaperDone,AWP_AuditorObservationName,AWP_Note,AWP_AuditeeResponseName,AWP_ReviewerRemarks,  
AWP_Response,AWP_CrBy,AWP_CrON,AWP_IPAddress,AWP_CompID,AWP_Status,AWP_AttachID,AWP_OpenCloseStatus,AWP_AuditorRemarks)                                          
 values                                          
 (@AWP_PKID,@AWP_YearID,@AWP_CustID,@AWP_AuditCode,@AWP_FunctionID,@AWP_SubFunctionID,@AWP_ProcessID,@AWP_SubProcessID,@AWP_RiskID,@AWP_ControlID,    
@AWP_ChecksID,@AWP_WorkPaperNo,@AWP_TypeofTestID,@AWP_ConclusionID,@AWP_WorkPaperDone,@AWP_AuditorObservationName,@AWP_Note,@AWP_AuditeeResponseName,@AWP_ReviewerRemarks,    
@AWP_Response,@AWP_CrBy,Getdate(),@AWP_IPAddress,@AWP_CompID,'Saved',@AWP_AttachID,@AWP_OpenCloseStatus,@AWP_AuditorRemarks)                                          
 set @iUpdateOrSave=3                                         
 set @iOper = @AWP_PKID                                               
end 

/

CREATE Procedure [dbo].[spAuditAssignment_EmpSubTask](     
 @AAEST_ID int,    
 @AAEST_AAS_ID int,    
 @AAEST_AAST_ID int,    
 @AAEST_WorkStatusID int,    
 @AAST_Closed int,    
 @AAST_Review int,
 @AAEST_Comments varchar(2000),    
 @AAEST_AttachID int,    
 @AAEST_CrBy int,  
 @AAEST_CrOn Datetime,    
 @AAEST_IPAddress varchar(25),    
 @AAEST_CompID int,    
 @iUpdateOrSave int Output,    
 @iOper int Output    
)    
as    
if (@AAEST_ID>0)    
 begin    
 update AuditAssignment_EmpSubTask set AAEST_AttachID=@AAEST_AttachID where AAEST_ID=@AAEST_ID    
 set @iUpdateOrSave=2    
 set @iOper=@AAEST_ID    
 end    
else     
 begin    
 set @AAEST_ID=(select isnull(max(AAEST_ID)+1,1) from AuditAssignment_EmpSubTask)    
 insert into AuditAssignment_EmpSubTask (AAEST_ID,AAEST_AAS_ID,AAEST_AAST_ID,AAEST_WorkStatusID,AAEST_Comments,AAEST_AttachID,AAEST_CrBy,AAEST_CrOn,AAEST_IPAddress,AAEST_CompID)     
 values(@AAEST_ID,@AAEST_AAS_ID,@AAEST_AAST_ID,@AAEST_WorkStatusID,@AAEST_Comments,@AAEST_AttachID,@AAEST_CrBy,@AAEST_CrOn,@AAEST_IPAddress,@AAEST_CompID)    
 set @iUpdateOrSave=3    
 set @iOper = @AAEST_ID    
 end    
 begin    
 Update AuditAssignment_SubTask set AAST_WorkStatusID=@AAEST_WorkStatusID,AAST_Review=@AAST_Review where AAST_ID=@AAEST_AAST_ID    
 end    
 if (@AAST_Closed=1)    
 begin    
 Update AuditAssignment_SubTask set AAST_Closed=@AAST_Closed,AAST_Review=@AAST_Review where AAST_ID=@AAEST_AAST_ID    
 end

/

CREATE Procedure [dbo].[spAuditAssignment_Invoice](       
@AAI_ID int,  
@AAI_YearID int,  
@AAI_Cust_ID int,  
@AAI_BillingEntity_ID int,  
@AAI_InvoiceNo varchar(50),  
@AAI_InvoiceTypeID int,  
@AAI_TaxType1 int,  
@AAI_TaxType1Percentage decimal(10,2),  
@AAI_TaxType2 int,  
@AAI_TaxType2Percentage decimal(10,2),  
@AAI_Notes varchar(5000),
@AAI_AuthorizedSignatory int,   
@AAI_CrBy int,  
@AAI_IPAddress varchar(25),  
@AAI_CompID int,  
@iUpdateOrSave int Output,      
@iOper int Output      
)      
as  
begin      
 set @AAI_ID=(select isnull(max(AAI_ID)+1,1) from AuditAssignment_Invoice)      
 insert into AuditAssignment_Invoice (AAI_ID,AAI_YearID,AAI_Cust_ID,AAI_BillingEntity_ID,AAI_InvoiceNo,AAI_InvoiceTypeID,AAI_TaxType1,AAI_TaxType1Percentage,  
 AAI_TaxType2,AAI_TaxType2Percentage,AAI_Notes,AAI_AuthorizedSignatory,AAI_CrBy,AAI_CrOn,AAI_IPAddress,AAI_CompID)       
 values(@AAI_ID,@AAI_YearID,@AAI_Cust_ID,@AAI_BillingEntity_ID,@AAI_InvoiceNo,@AAI_InvoiceTypeID,@AAI_TaxType1,@AAI_TaxType1Percentage,@AAI_TaxType2,  
 @AAI_TaxType2Percentage,@AAI_Notes,@AAI_AuthorizedSignatory,@AAI_CrBy,GetDate(),@AAI_IPAddress,@AAI_CompID)      
 set @iUpdateOrSave=3      
 set @iOper= @AAI_ID      
end

/

CREATE Procedure [dbo].[spAuditAssignment_InvoiceDetails](       
@AAID_ID int,    
@AAID_AAI_ID int,    
@AAID_AAS_ID int,
@AAID_IsTaxable int,
@AAID_Desc varchar(2000),  
@AAID_HSNSAC int,  
@AAID_Quantity int,  
@AAID_PricePerUnit decimal(10,2),  
@AAID_CrBy int,     
@AAID_IPAddress varchar(25),      
@AAID_CompID int,      
@iUpdateOrSave int Output,      
@iOper int Output      
)      
as  
begin      
 set @AAID_ID=(select isnull(max(AAID_ID)+1,1) from AuditAssignment_InvoiceDetails)      
 insert into AuditAssignment_InvoiceDetails (AAID_ID,AAID_AAI_ID,AAID_AAS_ID,AAID_IsTaxable,AAID_Desc,AAID_HSNSAC,AAID_Quantity,AAID_PricePerUnit,AAID_CrBy,AAID_CrOn,AAID_IPAddress,AAID_CompID)       
 values(@AAID_ID,@AAID_AAI_ID,@AAID_AAS_ID,@AAID_IsTaxable,@AAID_Desc,@AAID_HSNSAC,@AAID_Quantity,@AAID_PricePerUnit,@AAID_CrBy,GetDate(),@AAID_IPAddress,@AAID_CompID)      
 set @iUpdateOrSave=3      
 set @iOper= @AAID_ID   
end   

/

CREATE Procedure [dbo].[spAuditAssignment_Schedule](             
 @AAS_ID int,            
 @AAS_AssignmentNo varchar(50),            
 @AAS_CustID int,            
 @AAS_PartnerID int,            
 @AAS_YearID int,            
 @AAS_MonthID int,            
 @AAS_TaskID int,            
 @AAS_Status int,      
 @AAS_AdvancePartialBilling int,      
 @AAS_BillingType int,    
 @AAS_AssessmentYearID varchar(5000),      
 @AAS_AttachID int,            
 @AAS_CrBy int,            
 @AAS_UpdatedBy int,            
 @AAS_IPAddress varchar(25),            
 @AAS_CompID int,
 @AAS_IsComplianceAsg int,   
 @iUpdateOrSave int Output,            
 @iOper int Output            
)            
as            
--if exists(select Top 1 AAS_ID from AuditAssignment_Schedule Where AAS_CustID=@AAS_CustID And AAS_PartnerID=@AAS_PartnerID And AAS_YearID=@AAS_YearID And AAS_MonthID=@AAS_MonthID And AAS_TaskID=@AAS_TaskID And AAS_CompID=@AAS_CompID)            
-- begin            
-- update AuditAssignment_Schedule set AAS_Status=@AAS_Status,AAS_AdvancePartialBilling=@AAS_AdvancePartialBilling,AAS_BillingType=@AAS_BillingType,AAS_AssessmentYearID=@AAS_AssessmentYearID,AAS_AttachID=@AAS_AttachID,AAS_UpdatedBy=@AAS_UpdatedBy,  
-- AAS_UpdatedOn=GetDate()            
-- where AAS_CustID=@AAS_CustID And AAS_PartnerID=@AAS_PartnerID And AAS_YearID=@AAS_YearID And AAS_MonthID=@AAS_MonthID And AAS_TaskID=@AAS_TaskID And AAS_CompID=@AAS_CompID            
-- set @iUpdateOrSave=2            
-- set @iOper=(select Top 1 AAS_ID from AuditAssignment_Schedule Where AAS_CustID=@AAS_CustID And AAS_PartnerID=@AAS_PartnerID And AAS_YearID=@AAS_YearID And AAS_MonthID=@AAS_MonthID And AAS_CompID=@AAS_CompID)            
-- end            
--else             
 begin            
 set @AAS_ID=(select isnull(max(AAS_ID)+1,1) from AuditAssignment_Schedule)            
 insert into AuditAssignment_Schedule (AAS_ID,AAS_AssignmentNo,AAS_CustID,AAS_PartnerID,AAS_YearID,AAS_MonthID,AAS_TaskID,AAS_Status,AAS_AdvancePartialBilling,AAS_BillingType,AAS_AssessmentYearID,AAS_AttachID,AAS_CrBy,AAS_CrOn,AAS_IPAddress,AAS_CompID,AAS_IsComplianceAsg)   
   values(@AAS_ID,@AAS_AssignmentNo,@AAS_CustID,@AAS_PartnerID,@AAS_YearID,@AAS_MonthID,@AAS_TaskID,@AAS_Status,@AAS_AdvancePartialBilling,@AAS_BillingType,@AAS_AssessmentYearID,@AAS_AttachID,@AAS_CrBy,GetDate(),@AAS_IPAddress,@AAS_CompID,@AAS_IsComplianceAsg)            
 set @iUpdateOrSave=3            
 set @iOper = @AAS_ID            
end 

/

CREATE Procedure [dbo].[spAuditAssignment_SubTask](     
 @AAST_ID int,    
 @AAST_AAS_ID int,    
 @AAST_SubTaskID int,    
 @AAST_EmployeeID int,   
 @AAST_AssistedByEmployeesID varchar(2000),    
 @AAST_Desc varchar(2000),    
 @AAST_FrequencyID int,    
 @AAST_YearOrMonthID int,    
 @AAST_DueDate Datetime,    
 @AAST_ExpectedCompletionDate Datetime,    
 @AAST_WorkStatusID int,    
 @AAST_AttachID int,    
 @AAST_CrBy int,    
 @AAST_IPAddress varchar(25),    
 @AAST_CompID int,    
 @iUpdateOrSave int Output,    
 @iOper int Output    
)    
as    
if(@AAST_ID>0)    
 begin    
 update AuditAssignment_SubTask set AAST_WorkStatusID=@AAST_WorkStatusID where AAST_ID=@AAST_ID    
 set @iUpdateOrSave=2    
 set @iOper=@AAST_ID    
 end    
else     
 begin    
 set @AAST_ID=(select isnull(max(AAST_ID)+1,1) from AuditAssignment_SubTask)    
 insert into AuditAssignment_SubTask (AAST_ID,AAST_AAS_ID,AAST_SubTaskID,AAST_EmployeeID,AAST_AssistedByEmployeesID,AAST_Desc,AAST_FrequencyID,AAST_YearOrMonthID,    
 AAST_DueDate,AAST_ExpectedCompletionDate,AAST_WorkStatusID,AAST_Closed,AAST_Review,AAST_AttachID,AAST_CrBy,AAST_CrOn,AAST_IPAddress,AAST_CompID)     
 values(@AAST_ID,@AAST_AAS_ID,@AAST_SubTaskID,@AAST_EmployeeID,@AAST_AssistedByEmployeesID,@AAST_Desc,@AAST_FrequencyID,@AAST_YearOrMonthID,@AAST_DueDate,    
 @AAST_ExpectedCompletionDate,@AAST_WorkStatusID,0,0,@AAST_AttachID,@AAST_CrBy,GetDate(),@AAST_IPAddress,@AAST_CompID)    
 set @iUpdateOrSave=3    
 set @iOper = @AAST_ID    
end

/

CREATE Procedure [dbo].[spAuditAssignmentSubTask_Master]                  
(                    
@AM_ID int,                    
@AM_Code varchar(50),                    
@AM_Name varchar (2000),                    
@AM_AuditAssignmentID int,                    
@AM_Desc varchar(8000),                    
@AM_BillingTypeID int,                           
@AM_STATUS varchar(2),         
@AM_DELFLG char,                    
@AM_CRBY int,                    
@AM_UPDATEDBY int,             
@AM_IpAddress varchar(25),              
@AM_CompId int,                    
@iUpdateOrSave int Output,                      
@iOper int Output                         
)                                         
        
as                    
 if exists(select AM_ID from AuditAssignmentSubTask_Master where AM_ID=@AM_ID And AM_CompId=@AM_CompId)                      
  begin                       
 set @AM_Status='U'                                 
 update AuditAssignmentSubTask_Master set AM_Code=@AM_Code,AM_Name=@AM_Name, AM_Desc=@AM_Desc,AM_Status=@AM_Status,
 AM_BillingTypeID=@AM_BillingTypeID,AM_UPDATEDBY=@AM_UPDATEDBY,AM_UPDATEDON=GetDate(), AM_IPAddress=@AM_IPAddress                    
 where AM_ID=@AM_ID And AM_CompId=@AM_CompId And AM_AuditAssignmentID=@AM_AuditAssignmentID                  
  set @iUpdateOrSave=2                          
  set @iOper =@AM_ID                    
 end                      
    else                       
 begin                      
  set @AM_ID=(select isnull(max(AM_ID)+1,1) from AuditAssignmentSubTask_Master)                      
  insert into AuditAssignmentSubTask_Master(AM_ID,AM_Code,AM_Name,AM_Desc,AM_AuditAssignmentID,AM_BillingTypeID,
  AM_STATUS,AM_DELFLG,AM_CRBY,AM_CRON,AM_IPAddress,AM_CompId)
  values                      
  (@AM_ID,@AM_Code,@AM_Name,@AM_Desc,@AM_AuditAssignmentID,@AM_BillingTypeID,@AM_STATUS,@AM_DELFLG,@AM_CRBY,
  GetDate(),@AM_IPAddress,@AM_CompId)                      
   set @iUpdateOrSave=3                       
   set @iOper = @AM_ID                     
 end 

 /

CREATE Procedure [dbo].[spChecklistAuditAssest]           
(              
@CA_PKID int,              
@CA_CAuditID Varchar(25),              
@CA_LOCATIONID int,  
@CA_SECTIONID int,              
@CA_SUBSECTIONID int,  
@CA_PROCESSID int, 
@CA_SUBPROCESSID int,  
@CA_FINDINGS int,  
@CA_SCORE_STANDARD int, 
@CA_SCORE_RESULT int,                  
@CA_COMMENTS Varchar(50),  
@CA_DATE datetime,                   
@CA_YEARID int,              
@CA_CREATEDBY int, 
@CA_UPDATEDBY int,
@CA_IPAddress Varchar(50),  
@CA_CompID int,
@iUpdateOrSave int Output,              
@iOper int Output                
)     
As                    
if exists(select CRAD_PKID from CRPA_ChecklistAuditAssest where CRAD_PKID=@CA_PKID and CRAD_YEARID=@CA_YEARID And CRAD_LOCATIONID=@CA_LOCATIONID And CRAD_SECTIONID=@CA_SECTIONID And CRAD_CompID=@CA_CompID AND CRAD_SUBPROCESSID =@CA_SUBPROCESSID)             
Begin                 
Update CRPA_ChecklistAuditAssest set CRAD_FINDINGS=@CA_FINDINGS,CRAD_SCORE_STANDARD=@CA_SCORE_STANDARD,CRAD_UpdatedBy=@CA_UpdatedBy,CRAD_UpdatedOn=Getdate(),  
CRAD_SCORE_RESULT=@CA_SCORE_RESULT,CRAD_COMMENTS=@CA_COMMENTS where CRAD_PKID=@CA_PKID and CRAD_CompID=@CA_CompID           
set @iUpdateOrSave=2             
set @iOper = @CA_CAuditID       
End              
Else                
Begin                
set @CA_PKID=(select IsNull(Max(CRAD_PKID)+1,1) from CRPA_ChecklistAuditAssest)                
insert into CRPA_ChecklistAuditAssest(CRAD_PKID,CRAD_CAuditID,CRAD_LOCATIONID,CRAD_SECTIONID,CRAD_SUBSECTIONID,CRAD_PROCESSID,
CRAD_SUBPROCESSID,CRAD_FINDINGS,CRAD_SCORE_STANDARD,CRAD_SCORE_RESULT,CRAD_COMMENTS,CRAD_DATE,CRAD_YEARID,CRAD_CREATEDBY,CRAD_CREATEDON,
CRAD_UPDATEDBY,CRAD_UPDATEDON,CRAD_IPAddress,CRAD_CompID)              
values(@CA_PKID,@CA_CAuditID,@CA_LOCATIONID,@CA_SECTIONID,@CA_SUBSECTIONID,@CA_PROCESSID,@CA_SUBPROCESSID,@CA_FINDINGS,
@CA_SCORE_STANDARD,@CA_SCORE_RESULT,@CA_COMMENTS,@CA_DATE,@CA_YEARID,@CA_CREATEDBY,Getdate(),@CA_UPDATEDBY,Getdate(),
@CA_IPAddress,@CA_CompID)               
set @iUpdateOrSave=3               
set @iOper = @CA_PKID                
End 

/

CREATE procedure [dbo].[spCMACheckMaster]        
(        
@CM_Id int,      
@CM_FunctionId int,        
@CM_AreaId int,        
@CM_RiskCategory varchar(10),        
@CM_RiskWeight float(8),        
@CM_CheckPointNo varchar(10),        
@CM_CheckPoint varchar(600),        
@CM_MethodologyId int,        
@CM_Delflag varchar(1),        
@CM_SampleSize int,        
@CM_AreaNo varchar(2000),     
@CM_YearId int,   
@CM_FunType varchar(1),    
@CM_Status varchar(10),        
@CM_CrBy int,  
@CM_UpdatedBy int,  
@CM_IPAddress varchar(25),      
@CM_CompID int,    
@iUpdateOrSave int Output,          
@iOper int Output           
)      
 as        
  if exists(select CM_Id from CMACheckMaster where CM_Id=@CM_Id And CM_CheckPointNo=@CM_CheckPointNo And CM_CompID = @CM_CompID)          
   begin             
  update CMACheckMaster set CM_FunctionId=@CM_FunctionId,CM_AreaId=@CM_AreaId,    
  CM_RiskCategory=@CM_RiskCategory,CM_RiskWeight=@CM_RiskWeight,      
 CM_CheckPoint=@CM_CheckPoint,CM_MethodologyId=@CM_MethodologyId,CM_SampleSize=@CM_SampleSize,        
 CM_AreaNo=@CM_AreaNo,CM_FunType=@CM_FunType,CM_UpdatedBy=@CM_UpdatedBy,CM_UpdatedOn=GetDate(),CM_Status=@CM_Status,    
  CM_IPAddress=@CM_IPAddress         
 where  CM_Id=@CM_Id And CM_CheckPointNo=@CM_CheckPointNo And CM_CompID = @CM_CompID        
   set @iUpdateOrSave=2           
   set @iOper =@CM_Id      
 end          
    else          
begin          
   set @CM_Id=(select isnull(max(CM_Id)+1,1) from CMACheckMaster)          
   insert into CMACheckMaster (CM_Id,CM_FunctionId,CM_AreaId,CM_RiskCategory,CM_RiskWeight,        
  CM_CheckPointNo,CM_CheckPoint,CM_MethodologyId,CM_Delflag,CM_SampleSize,CM_AreaNo,CM_YearId,CM_FunType,       
  CM_Status,CM_CrBy,CM_CrOn,CM_IPAddress,CM_CompID)        
  values          
   (@CM_Id,@CM_FunctionId,@CM_AreaId,@CM_RiskCategory,@CM_RiskWeight,  
  @CM_CheckPointNo,@CM_CheckPoint,@CM_MethodologyId,@CM_Delflag,@CM_SampleSize,@CM_AreaNo,@CM_YearId,@CM_FunType,  
  @CM_Status,@CM_CrBy,getdate(),@CM_IPAddress,@CM_CompID)          
   set @iUpdateOrSave=3           
   set @iOper =@CM_Id         
end 

/

Create Procedure [dbo].[spCMARating]   
(    
@CMAR_ID int,    
@CMAR_YearID int,    
@CMAR_StartValue varchar(20),    
@CMAR_EndValue varchar(20),    
@CMAR_Desc varchar(2000), 
@CMAR_Name varchar(2000),  
@CMAR_Color varchar(20),    
@CMAR_FLAG varchar(2),    
@CMAR_STATUS varchar(2),       
@CMAR_CrBy int,   
@CMAR_UpdatedBy int,  
@CMAR_CompId int,   
@CMAR_IPAddress varchar(25),    
@iUpdateOrSave int Output,      
@iOper int Output     
)    
as           
  if exists(select CMAR_ID from CMARating where CMAR_ID=@CMAR_ID and CMAR_CompId = @CMAR_CompId)      
begin       
set @CMAR_Status='U'  
  update CMARating set CMAR_YearID=@CMAR_YearID,CMAR_StartValue=@CMAR_StartValue,CMAR_EndValue=@CMAR_EndValue,
  CMAR_Desc=@CMAR_Desc,CMAR_Name=@CMAR_Name,CMAR_Color=@CMAR_Color,CMAR_STATUS=@CMAR_STATUS,
  CMAR_UpdatedBy=@CMAR_UpdatedBy,CMAR_UpdatedOn=Getdate(),CMAR_IPAddress=@CMAR_IPAddress 
  where  CMAR_ID=@CMAR_ID and CMAR_CompId = @CMAR_CompId      
  set @iUpdateOrSave=2          
  set @iOper =@CMAR_ID      
end    
else    
begin      
  set @CMAR_ID=(select isnull(max(CMAR_ID)+1,1) from CMARating)      
 insert into CMARating(CMAR_ID,CMAR_YearID,CMAR_StartValue,CMAR_EndValue,CMAR_Desc,
 CMAR_Name,CMAR_Color,CMAR_FLAG,CMAR_STATUS,CMAR_CrBy,CMAR_CrOn,CMAR_IPAddress,CMAR_CompId)      
 values (@CMAR_ID,@CMAR_YearID,@CMAR_StartValue,@CMAR_EndValue,@CMAR_Desc,@CMAR_Name,@CMAR_Color,
 @CMAR_FLAG,@CMAR_STATUS,@CMAR_CrBy,Getdate(),@CMAR_IPAddress,@CMAR_CompId)
  set @iUpdateOrSave=3         
  set @iOper =@CMAR_ID      
 end

/

Create Procedure [dbo].[spCMARating_CoreProcess]    
(    
@CMACR_ID int,    
@CMACR_YearID int,    
@CMACR_StartValue varchar(10),    
@CMACR_EndValue varchar(10),    
@CMACR_Desc varchar(2000),
@CMACR_Name varchar(2000),  
@CMACR_Color varchar(20),    
@CMACR_FLAG varchar(1),    
@CMACR_STATUS varchar(2),    
@CMACR_CrBy int,
@CMACR_UpdatedBy int,        
@CMACR_IPAddress varchar(25),    
@CMACR_CompId int, 
@iUpdateOrSave int Output,      
@iOper int Output        
)    
as           
  if exists(select CMACR_ID from CMARating_CoreProcess where CMACR_ID=@CMACR_ID and  CMACR_CompId = @CMACR_CompId)      
begin                  
 set @CMACR_STATUS='U'      
  update CMARating_CoreProcess set CMACR_YearID=@CMACR_YearID,CMACR_StartValue=@CMACR_StartValue,CMACR_EndValue=@CMACR_EndValue,
  CMACR_Desc=@CMACR_Desc,CMACR_Name=@CMACR_Name,CMACR_Color=@CMACR_Color,CMACR_STATUS=@CMACR_STATUS,
  CMACR_UpdatedBy=@CMACR_UpdatedBy,CMACR_UpdatedOn=getDate(),CMACR_IPAddress=@CMACR_IPAddress  
where CMACR_ID=@CMACR_ID and CMACR_CompId = @CMACR_CompId      
 set @iUpdateOrSave=2          
 set @iOper =@CMACR_ID     
end    
else    
begin      
  set @CMACR_ID=(select isnull(max(CMACR_ID)+1,1) from CMARating_CoreProcess)      
 insert into CMARating_CoreProcess(CMACR_ID,CMACR_YearID,CMACR_StartValue,CMACR_EndValue,CMACR_Desc,
 CMACR_Name,CMACR_Color, CMACR_FLAG,CMACR_STATUS,CMACR_CrBy,CMACR_CrOn,CMACR_IPAddress,CMACR_CompId)      
  values      
  (@CMACR_ID,@CMACR_YearID,@CMACR_StartValue,@CMACR_EndValue,@CMACR_Desc,@CMACR_Name,@CMACR_Color,  
   @CMACR_FLAG,@CMACR_STATUS,@CMACR_CrBy,Getdate(),@CMACR_IPAddress,@CMACR_CompId)      
  set @iUpdateOrSave=3         
  set @iOper =@CMACR_ID      
 end 

/

Create Procedure [dbo].[spCMARating_SupportProcess]    
(    
@CMASR_ID int,    
@CMASR_YearID int,    
@CMASR_StartValue varchar(20),    
@CMASR_EndValue varchar(20),    
@CMASR_Desc varchar(2000), 
@CMASR_Name varchar(2000),  
@CMASR_Color varchar(20),    
@CMASR_FLAG varchar(1),    
@CMASR_STATUS varchar(2),       
@CMASR_CrBy int,   
@CMASR_UpdatedBy int,  
@CMASR_CompId int,   
@CMASR_IPAddress varchar(25),    
@iUpdateOrSave int Output,      
@iOper int Output     
)    
as           
  if exists(select CMASR_ID from CMARating_SupportProcess where CMASR_ID=@CMASR_ID and CMASR_CompId = @CMASR_CompId)      
begin       
set @CMASR_Status='U'  
  update CMARating_SupportProcess set CMASR_YearID=@CMASR_YearID,CMASR_StartValue=@CMASR_StartValue,CMASR_EndValue=@CMASR_EndValue,
  CMASR_Desc=@CMASR_Desc,CMASR_Name=@CMASR_Name,CMASR_Color=@CMASR_Color,CMASR_STATUS=@CMASR_STATUS,
  CMASR_UpdatedBy=@CMASR_UpdatedBy,CMASR_UpdatedOn=Getdate(),CMASR_IPAddress=@CMASR_IPAddress 
  where  CMASR_ID=@CMASR_ID and CMASR_CompId = @CMASR_CompId      
  set @iUpdateOrSave=2          
  set @iOper =@CMASR_ID      
end    
else    
begin      
  set @CMASR_ID=(select isnull(max(CMASR_ID)+1,1) from CMARating_SupportProcess)      
 insert into CMARating_SupportProcess(CMASR_ID,CMASR_YearID,CMASR_StartValue,CMASR_EndValue,CMASR_Desc,
 CMASR_Name,CMASR_Color,CMASR_FLAG,CMASR_STATUS,CMASR_CrBy,CMASR_CrOn,CMASR_IPAddress,CMASR_CompId)      
 values (@CMASR_ID,@CMASR_YearID,@CMASR_StartValue,@CMASR_EndValue,@CMASR_Desc,@CMASR_Name,@CMASR_Color,
 @CMASR_FLAG,@CMASR_STATUS,@CMASR_CrBy,Getdate(),@CMASR_IPAddress,@CMASR_CompId)
  set @iUpdateOrSave=3         
  set @iOper =@CMASR_ID      
 end

/

CREATE procedure [dbo].[spCompliance_Checklist]       
(              
@CRCD_PkID int, 
@CRCD_MasID int,
@CRCD_YearID int,
@CRCD_SubFunID int,
@CRCD_PID int,
@CRCD_SubPID int,
@CRCD_RiskID int,
@CRCD_ControlID int,
@CRCD_CheckID int,
@CRCD_AttchID int,
@CRCD_CompID int,
@CRCD_IPAddress varchar(500),
@CRCD_SunFunc varchar(Max),
@CRCD_Process varchar(Max),
@CRCD_SunProcess varchar(Max),
@CRCD_Risk varchar(Max),
@CRCD_Control varchar(Max),
@CRCD_CheckDesc varchar(Max),
@CRCD_InherentRiskID int,
@CRCD_CertID int,
@CRCD_RiskRemarks varchar(Max),
@CRCD_CheckRemarks varchar(Max),          
@iUpdateOrSave int Output,              
@iOper int Output             
)                    
As                     
  if Exists(select CRCD_PkID from Compliance_Checklist where CRCD_MasID=@CRCD_MasID and CRCD_YearID=@CRCD_YearID And
  CRCD_SubFunID=@CRCD_SubFunID And CRCD_PID=@CRCD_PID And CRCD_SubPID=@CRCD_SubPID And CRCD_RiskID=@CRCD_RiskID And
  CRCD_ControlID=@CRCD_ControlID And CRCD_CheckID=@CRCD_CheckID And CRCD_CompID=@CRCD_CompID)                
Begin        
  Declare @CRCD_Operation Varchar(10)         
  set @CRCD_Operation='U'  
  set @CRCD_PkID=(select CRCD_PkID from Compliance_Checklist where CRCD_MasID=@CRCD_MasID and CRCD_YearID=@CRCD_YearID And
  CRCD_SubFunID=@CRCD_SubFunID And CRCD_PID=@CRCD_PID And CRCD_SubPID=@CRCD_SubPID And CRCD_RiskID=@CRCD_RiskID And
  CRCD_ControlID=@CRCD_ControlID And CRCD_CheckID=@CRCD_CheckID And CRCD_CompID=@CRCD_CompID)
        
  Update Compliance_Checklist set CRCD_InherentRiskID=@CRCD_InherentRiskID,CRCD_CertID=@CRCD_CertID,
  CRCD_RiskRemarks=@CRCD_RiskRemarks,CRCD_CheckRemarks=@CRCD_CheckRemarks,CRCD_IPAddress=@CRCD_IPAddress  
  where CRCD_MasID=@CRCD_MasID and CRCD_PkID = @CRCD_PkID And CRCD_SubFunID=@CRCD_SubFunID And
  CRCD_PID=@CRCD_PID And CRCD_SubPID=@CRCD_SubPID And CRCD_RiskID=@CRCD_RiskID 
  And CRCD_ControlID=@CRCD_ControlID And CRCD_CheckID=@CRCD_CheckID              
  set @iUpdateOrSave=2             
  set @iOper = @CRCD_PkID                 
 End                
Else                 
 Begin                
  set @CRCD_PkID=(select isnull(max(CRCD_PkID)+1,1) from Compliance_Checklist)  
  insert into Compliance_Checklist(CRCD_PkID,CRCD_MasID,CRCD_YearID,CRCD_SubFunID,CRCD_PID,CRCD_SubPID,
  CRCD_RiskID,CRCD_ControlID,CRCD_CheckID,CRCD_AttchID,CRCD_CompID,CRCD_Operation,CRCD_IPAddress,
  CRCD_SunFunc,CRCD_Process,CRCD_SunProcess,CRCD_Risk,CRCD_Control,CRCD_CheckDesc,CRCD_InherentRiskID,
  CRCD_CertID,CRCD_RiskRemarks,CRCD_CheckRemarks
  )values                
  (@CRCD_PkID,@CRCD_MasID,@CRCD_YearID,@CRCD_SubFunID,@CRCD_PID,@CRCD_SubPID,@CRCD_RiskID,@CRCD_ControlID,
  @CRCD_CheckID,@CRCD_AttchID,@CRCD_CompID,'C',@CRCD_IPAddress,@CRCD_SunFunc,@CRCD_Process,
  @CRCD_SunProcess,@CRCD_Risk,@CRCD_Control,@CRCD_CheckDesc,@CRCD_InherentRiskID,@CRCD_CertID,
  @CRCD_RiskRemarks,@CRCD_CheckRemarks)                
  set @iUpdateOrSave=3               
  set @iOper = @CRCD_PkID                
End

/

CREATE PROCEDURE [dbo].[spCompliance_Checklist_Mas](  
@CRCM_ID int,  
@CRCM_CustID int,  
@CRCM_FunID int,  
@CRCM_JobID int,  
@CRCM_AttchID int, 
@CRCM_YearID int,
@CRCM_CompID int,
@CRCM_IPAddress varchar(100),
@CRCM_Status varchar(500),
@CRCM_CrBy int,
@CRCM_UpdatedBy int,
@iUpdateOrSave int Output,                    
@iOper int Output                      
)                  
as                         
  if @CRCM_ID > 0                    
 begin         
Declare @CRCM_Operation varchar(10)                            
Update Compliance_Checklist_Mas set CRCM_Status=@CRCM_Status,CRCM_Operation='U',CRCM_AttchID=@CRCM_AttchID,
CRCM_UpdatedBy=@CRCM_UpdatedBy,CRCM_UpdatedOn=GetDate() 
where CRCM_CustID=@CRCM_CustID And CRCM_JobID=@CRCM_JobID And CRCM_FunID=@CRCM_FunID And CRCM_YearID=@CRCM_YearID And CRCM_CompID=@CRCM_CompID
set @iUpdateOrSave=2                        
set @iOper =@CRCM_ID     
 end                    
else                     
 begin                    
 set @CRCM_ID=(select isnull(max(CRCM_ID)+1,1) from Compliance_Checklist_Mas)                    
 insert into Compliance_Checklist_Mas(CRCM_ID,CRCM_CustID,CRCM_FunID,CRCM_JobID,CRCM_AttchID,CRCM_YearID,CRCM_CompID,
 CRCM_Operation,CRCM_IPAddress,CRCM_Status,CRCM_CrBy,CRCM_CrOn)                  
 values(@CRCM_ID,@CRCM_CustID,@CRCM_FunID,@CRCM_JobID,@CRCM_AttchID,@CRCM_YearID,@CRCM_CompID,
'C',@CRCM_IPAddress,@CRCM_Status,@CRCM_CrBy,Getdate())                    
 set @iUpdateOrSave=3                        
 set @iOper=@CRCM_ID               
 End 

/

CREATE Procedure [dbo].[spCompliance_IssueTracker_details](            
@CIT_PKID int,    
@CIT_YearID int,    
@CIT_CustomerID int,
@CIT_ComplianceCodeID int,    
@CIT_ChecklistID int,    
@CIT_IssueJobNo Varchar(50),    
@CIT_FunctionID int,    
@CIT_SubFunctionID int,    
@CIT_ProcessID int,    
@CIT_SubProcessID int,    
@CIT_RiskID int,  
@CIT_RiskTypeID Varchar(100),  
@CIT_ControlID int,    
@CIT_CheckID int,    
@CIT_IssueHeading varchar(8000),      
@CIT_IssueDetails varchar(8000),    
@CIT_Impact varchar(2000),    
@CIT_ActionPlan varchar(8000),    
@CIT_IssueRatingID int,    
@CIT_ActualLoss varchar(2000),    
@CIT_ProbableLoss varchar(2000),    
@CIT_TargetDate datetime,    
@CIT_ResponsibleFunctionID int,    
@CIT_FunctionManagerID int,    
@CIT_Remarks varchar(8000),    
@CIT_IssueStatus varchar(5),    
@CIT_CreatedBy int,    
@CIT_UpdatedBy int ,    
@CIT_CompID int,    
@CIT_IPAddress varchar(100),    
@CIT_AttachID int,    
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as                     
if exists(select CIT_PKID from Compliance_IssueTracker_details Where CIT_CustomerID=@CIT_CustomerID And CIT_ChecklistID=@CIT_ChecklistID And CIT_PKID=@CIT_PKID and CIT_CompID=@CIT_CompID and CIT_YearID=@CIT_YearID)                
 Begin    
 update Compliance_IssueTracker_details set CIT_RiskTypeID=@CIT_RiskTypeID,CIT_Impact=@CIT_Impact,CIT_ActionPlan=@CIT_ActionPlan,CIT_IssueRatingID=@CIT_IssueRatingID,CIT_IssueStatus=@CIT_IssueStatus,            
 CIT_ActualLoss=@CIT_ActualLoss,CIT_ProbableLoss=@CIT_ProbableLoss,CIT_TargetDate=@CIT_TargetDate,CIT_ResponsibleFunctionID=@CIT_ResponsibleFunctionID,CIT_FunctionManagerID=@CIT_FunctionManagerID,
 CIT_Remarks=@CIT_Remarks,CIT_UpdatedBy=@CIT_UpdatedBy,CIT_UpdatedOn=getdate(),CIT_Status='Updated',
 CIT_AttachID=@CIT_AttachID,CIT_IssueDetails=@CIT_IssueDetails,CIT_IssueHeading=@CIT_IssueHeading,          
 CIT_IPAddress =@CIT_IPAddress             
 where CIT_CustomerID=@CIT_CustomerID And CIT_ChecklistID=@CIT_ChecklistID And CIT_PKID=@CIT_PKID And CIT_CompID=@CIT_CompID and CIT_YearID=@CIT_YearID              
 set @iUpdateOrSave=2               
 set @iOper =@CIT_PKID    
 End    
else          
 Begin                
 set @CIT_PKID=(select isnull(max(CIT_PKID)+1,1) from Compliance_IssueTracker_details)                
 insert into Compliance_IssueTracker_details(CIT_PKID,CIT_YearID,CIT_CustomerID,CIT_ComplianceCodeID,CIT_ChecklistID,CIT_IssueJobNo,CIT_FunctionID,CIT_SubFunctionID,CIT_ProcessID ,CIT_SubProcessID,CIT_RiskID,CIT_RiskTypeID,CIT_ControlID,CIT_CheckID,CIT_IssueHeading,   
 CIT_IssueDetails,CIT_Impact,CIT_ActionPlan,CIT_IssueRatingID,CIT_ActualLoss,CIT_ProbableLoss,CIT_TargetDate,CIT_ResponsibleFunctionID,CIT_FunctionManagerID,CIT_Remarks,CIT_IssueStatus,                
 CIT_CreatedBy,CIT_CreatedOn,CIT_Status,CIT_CompID,CIT_IPAddress,CIT_AttachID)    
 values                
 (@CIT_PKID,@CIT_YearID,@CIT_CustomerID,@CIT_ComplianceCodeID,@CIT_ChecklistID,@CIT_IssueJobNo,@CIT_FunctionID,@CIT_SubFunctionID,@CIT_ProcessID,@CIT_SubProcessID,@CIT_RiskID,@CIT_RiskTypeID,@CIT_ControlID,@CIT_CheckID,@CIT_IssueHeading,             
 @CIT_IssueDetails,@CIT_Impact,@CIT_ActionPlan,@CIT_IssueRatingID,@CIT_ActualLoss,@CIT_ProbableLoss,@CIT_TargetDate,@CIT_ResponsibleFunctionID,@CIT_FunctionManagerID,@CIT_Remarks,@CIT_IssueStatus,    
 @CIT_CreatedBy,Getdate(),'Saved',@CIT_CompID,@CIT_IPAddress,@CIT_AttachID)             
 set @iUpdateOrSave=3               
 set @iOper = @CIT_PKID                     
 End 

/

Create Procedure [dbo].[spCompliance_IssueTracker_details_History]
(
@CITH_PKID int,
@CITH_CITPKID int,
@CITH_CustomerID int,
@CITH_ComplianceCodeID int,
@CITH_ChecklistID int,
@CITH_ActionPlan varchar(8000),
@CITH_TargetDate datetime,
@CITH_IssueStatus varchar(5),
@CITH_ResponsibleFunctionID int,
@CITH_FunctionManagerID int,
@CITH_Remarks varchar(8000),
@CITH_CreatedBy int,
@CITH_UpdatedBy int ,
@CITH_CompID int,
@CITH_IPAddress varchar(100),
@iUpdateOrSave int Output,              
@iOper int Output  
)
As
Begin
	 Update Compliance_IssueTracker_details set CIT_ActionPlan=@CITH_ActionPlan,CIT_TargetDate=@CITH_TargetDate,CIT_IssueStatus=@CITH_IssueStatus,
	CIT_ResponsibleFunctionID=@CITH_ResponsibleFunctionID,CIT_FunctionManagerID=@CITH_FunctionManagerID,CIT_Remarks=@CITH_Remarks
	where CIT_PKID=@CITH_CITPKID And CIT_CustomerID=@CITH_CustomerID And CIT_ComplianceCodeID=@CITH_ComplianceCodeID And CIT_CompID=@CITH_CompID and CIT_ChecklistID=@CITH_ChecklistID
End                  
	if @CITH_PKID>0    
Begin  
	Update Compliance_IssueTracker_details_History set CITH_CITPKID=@CITH_CITPKID,CITH_CustomerID=@CITH_CustomerID,CITH_ComplianceCodeID=@CITH_ComplianceCodeID,
	CITH_ChecklistID=@CITH_ChecklistID,CITH_ActionPlan=@CITH_ActionPlan,CITH_TargetDate=@CITH_TargetDate,
	CITH_IssueStatus=@CITH_IssueStatus,CITH_ResponsibleFunctionID=@CITH_ResponsibleFunctionID,CITH_FunctionManagerID=@CITH_FunctionManagerID,
	CITH_Remarks=@CITH_Remarks,CITH_UpdatedBy=@CITH_UpdatedBy,CITH_IPAddress=@CITH_IPAddress,CITH_UpdatedOn=getdate()
	where CITH_PKID=@CITH_PKID and CITH_CompID=@CITH_CompID  
	set @iUpdateOrSave=2             
	set @iOper=@CITH_PKID              
 End              
Else                
Begin                
	set @CITH_PKID=(select IsNull(Max(CITH_PKID)+1,1) from Compliance_IssueTracker_details_History)                
	insert into Compliance_IssueTracker_details_History(CITH_PKID,CITH_CITPKID,CITH_CustomerID,CITH_ComplianceCodeID,CITH_ChecklistID,CITH_ActionPlan,CITH_TargetDate,
	CITH_IssueStatus,CITH_ResponsibleFunctionID,CITH_FunctionManagerID,CITH_CreatedBy,CITH_CreatedOn,CITH_Remarks,CITH_IPAddress,CITH_CompID)              
	values(@CITH_PKID,@CITH_CITPKID,@CITH_CustomerID,@CITH_ComplianceCodeID,@CITH_ChecklistID,@CITH_ActionPlan,@CITH_TargetDate,
	@CITH_IssueStatus,@CITH_ResponsibleFunctionID,@CITH_FunctionManagerID,@CITH_CreatedBy,GetDate(),@CITH_Remarks,@CITH_IPAddress,@CITH_CompID)              
	set @iUpdateOrSave=3               
	set @iOper=@CITH_PKID                 
 End 

/

CREATE Procedure [dbo].[spCompliance_Plan](            
@CP_ID int,            
@CP_YearID int, 
@CP_CustomerID int,             
@CP_FunctionID int,    
@CP_SubFunctionID int,          
@CP_InherentRiskID int,   
@CP_IsCurrentYear int,  
@CP_NetRatingID int,    
@CP_Remarks varchar(2000),  
@CP_PlanCreatedBy int,       
@CP_PlanUpdatedBy int,     
@CP_CompID int,    
@CP_ComplianceStatus varchar(15),    
@CP_IPAddress varchar(20),    
@iUpdateOrSave int Output,            
@iOper int Output  
)            
as                   
if exists(select CP_ID from Compliance_Plan Where CP_CustomerID=@CP_CustomerID And CP_FunctionID=@CP_FunctionID And CP_SubFunctionID=@CP_SubFunctionID And CP_CompID=@CP_CompID and CP_YearID=@CP_YearID)              
 begin  
 update Compliance_Plan set CP_InherentRiskID=@CP_InherentRiskID,CP_IsCurrentYear=@CP_IsCurrentYear,CP_NetRatingID=@CP_NetRatingID,CP_Remarks=@CP_Remarks,            
 CP_PlanUpdatedBy=@CP_PlanUpdatedBy,CP_PlanUpdatedOn=getdate(),CP_PlanStatus='Updated',CP_ComplianceStatus=@CP_ComplianceStatus,         
 CP_IPAddress =@CP_IPAddress           
 where CP_CustomerID=@CP_CustomerID And CP_FunctionID=@CP_FunctionID And CP_SubFunctionID=@CP_SubFunctionID And CP_CompID=@CP_CompID and CP_YearID=@CP_YearID            
 set @iUpdateOrSave=2             
 set @iOper =@CP_ID  
 end  
else        
 begin              
 set @CP_ID=(select isnull(max(CP_ID)+1,1) from Compliance_Plan)              
 insert into Compliance_Plan(CP_ID,CP_CustomerID,CP_FunctionID,CP_SubFunctionID,CP_InherentRiskID,CP_IsCurrentYear,CP_NetRatingID,           
 CP_Remarks,CP_PlanStatus,CP_PlanCreatedBy,CP_PlanCreatedOn,CP_ComplianceStatus,CP_CompID,CP_IPAddress,CP_YearID)              
 values              
 (@CP_ID,@CP_CustomerID,@CP_FunctionID,@CP_SubFunctionID,@CP_InherentRiskID,@CP_IsCurrentYear,@CP_NetRatingID,            
 @CP_Remarks,'Saved',@CP_PlanCreatedBy,getdate(),@CP_ComplianceStatus,@CP_CompID,@CP_IPAddress,@CP_YearID)              
 set @iUpdateOrSave=3             
 set @iOper = @CP_ID                   
 end 

/

CREATE Procedure [dbo].[spCompliance_Plan_history](            
@CPH_ID int,            
@CPH_YearID int,     
@CPH_CPID int,  
@CPH_CustomerID int,       
@CPH_FunctionID int,    
@CPH_SubFunctionID int,   
@CPH_ScheduledMonthID int,  
@CPH_status varchar(100),
@CPH_Remarks varchar(2000),  
@CPH_CreatedBy int,       
@CPH_CompID int,              
@CPH_IPAddress varchar(20),    
@iUpdateOrSave int Output,            
@iOper int Output  
)            
as                   
Begin     
 Set @CPH_ID=(select isnull(max(CPH_ID)+1,1) from Compliance_Plan_history)              
 Insert Into Compliance_Plan_history(CPH_ID,CPH_CPID,CPH_CustomerID,CPH_FunctionID,CPH_SubFunctionID,CPH_ScheduledMonthID ,            
 CPH_status,CPH_Remarks,CPH_CreatedBy,CPH_CreatedOn,CPH_CompID,CPH_IPAddress,CPH_YearID)              
 Values              
 (@CPH_ID,@CPH_CPID,@CPH_CustomerID,@CPH_FunctionID,@CPH_SubFunctionID,@CPH_ScheduledMonthID,           
 @CPH_status,@CPH_Remarks,@CPH_CreatedBy,getdate(),@CPH_CompID,@CPH_IPAddress,@CPH_YearID)              
 Set @iUpdateOrSave=3             
 Set @iOper = @CPH_ID                   
End 

/

Create Procedure [dbo].[spCompliance_SchedulePlan](                
@CP_ID int,       
@CP_YearID int,    
@CP_CustomerID int,         
@CP_ComplianceCode varchar(300),                       
@CP_ScheduledMonthID int,              
@CP_ScheduleCreatedBy int,           
@CP_ScheduleUpdatedBy int,   
@CP_ComplianceStatus varchar(15),            
@CP_CompID int,                
@CP_IPAddress varchar(20),        
@iUpdateOrSave int Output,                
@iOper int Output      
)                
as                       
if exists(select CP_ID from Compliance_Plan Where CP_YearID=@CP_YearID And CP_CustomerID=@CP_CustomerID And CP_ID=@CP_ID 
And CP_ComplianceCode=@CP_ComplianceCode And CP_CompID=@CP_CompID)                  
 Begin         
 Update Compliance_Plan set CP_ScheduledMonthID=@CP_ScheduledMonthID,CP_ScheduleUpdatedBy=@CP_ScheduleUpdatedBy,CP_ScheduleUpdatedOn=getdate(),            
 CP_IPAddress =@CP_IPAddress,CP_ComplianceStatus=@CP_ComplianceStatus               
 Where CP_YearID=@CP_YearID And CP_CustomerID=@CP_CustomerID And CP_ID=@CP_ID And CP_ComplianceCode=@CP_ComplianceCode And CP_CompID=@CP_CompID              
 set @iUpdateOrSave=2                 
 set @iOper=@CP_ID        
 End       
 Else            
 Begin                  
 Update Compliance_Plan set CP_ComplianceCode=@CP_ComplianceCode,CP_ScheduledMonthID=@CP_ScheduledMonthID,CP_ScheduleCreatedBy=@CP_ScheduleCreatedBy,               
 CP_ScheduleCreatedOn=getdate(),CP_ScheduleStatus='Saved',CP_IPAddress =@CP_IPAddress,CP_ComplianceStatus=@CP_ComplianceStatus              
 Where CP_CustomerID=@CP_CustomerID And CP_ID=@CP_ID And CP_CompID=@CP_CompID and CP_YearID=@CP_YearID                
 set @iUpdateOrSave=3                 
 set @iOper=@CP_ID                   
End 

/

CREATE Procedure [dbo].[spContent_Management_Master]                      
(                      
@cmm_ID int,                      
@cmm_Code varchar(50),                      
@cmm_Desc varchar (2000),                      
@cmm_Category varchar(3),                      
@cmm_Remarks varchar(8000),                      
@cms_KeyComponent int,                      
@cmm_Module char(1),                      
@CMM_RiskCategory int,          
@CMM_Status varchar(2),     
@cmm_Rate money,  
@CMM_Act varchar(50),    
@CMM_HSNSAC varchar(100), 
@cmm_Delflag char,                      
@CMM_CrBy int,                      
@CMM_UpdatedBy int,               
@CMM_IpAddress varchar(25),                
@CMM_CompId int,                      
@iUpdateOrSave int Output,                        
@iOper int Output                           
)       
as                      
 if exists(select cmm_ID from content_management_master where cmm_ID=@cmm_ID And CMM_CompId=@CMM_CompId)                        
  begin                         
 set @CMM_Status='U'                                   
 update content_management_master set cmm_Code=@cmm_Code,cmm_Desc=@cmm_Desc,cmm_Category=@cmm_Category,                      
 cms_Remarks=@cmm_Remarks,cms_KeyComponent=@cms_KeyComponent,cms_Module=@cmm_Module,CMM_RiskCategory=@CMM_RiskCategory,                      
 CMM_Status=@CMM_Status,cmm_Rate=@cmm_Rate,CMM_Act=@CMM_Act,CMM_HSNSAC=@CMM_HSNSAC,CMM_UpdatedBy=@CMM_UpdatedBy,CMM_UpdatedOn=GetDate(), CMM_IPAddress=@CMM_IPAddress                      
 where cmm_ID=@cmm_ID And CMM_CompId=@CMM_CompId And cmm_Category=@cmm_Category                     
  set @iUpdateOrSave=2                            
  set @iOper =@cmm_ID                      
 end                        
    else                         
 begin                        
  set @cmm_ID=(select isnull(max(cmm_ID)+1,1) from content_management_master)                        
  insert into content_management_master(cmm_ID,cmm_Code,cmm_Desc,cmm_Category,cms_Remarks,cms_KeyComponent,cms_Module,                      
  CMM_RiskCategory,CMM_Status,cmm_Rate,CMM_Act,CMM_HSNSAC,cmm_Delflag,CMM_CrBy,CMM_CrOn,CMM_IPAddress,CMM_CompId)                        
  values                        
  (@cmm_ID,@cmm_Code,@cmm_Desc,@cmm_Category,@cmm_Remarks,@cms_KeyComponent,@cmm_Module,                      
  @CMM_RiskCategory,@CMM_Status,@cmm_Rate,@CMM_Act,@CMM_HSNSAC,@cmm_Delflag,@CMM_CrBy,GetDate(),@CMM_IPAddress,@CMM_CompId)                        
   set @iUpdateOrSave=3                         
   set @iOper = @cmm_ID                       
 end 

 /

CREATE Procedure [dbo].[spCRPA_AUDITASSEST]           
(              
@CA_PKID int,              
@CA_AsgNo Varchar(25),              
@CA_FinancialYear int,  
@CA_LOCATIONID int,              
@CA_SECTIONID int,  
@CA_Date datetime,    
@CA_NAME_OF_OPS_HEAD varchar(50),   
@CA_ADDRESS varchar(500), 
@CA_NAME_OF_UNIT_PRESIDENT varchar(500),    
@CA_AUDITORNAME varchar(500),                 
@CA_NetScore real,                      
@CA_CrBy int,              
@CA_UpdatedBy int, 
@CA_ASubmittedBy int,
@CA_BSubmittedBy int,
@CA_Status varchar(25),
@CA_IPAddress varchar(25),
@CA_CompID int, 
@iUpdateOrSave int Output,              
@iOper int Output                
)     
As                    
if exists(select CA_PKID from CRPA_AuditAssest where CA_PKID=@CA_PKID and CA_FinancialYear=@CA_FinancialYear And CA_LOCATIONID=@CA_LOCATIONID And CA_SECTIONID=@CA_SECTIONID And CA_CompID=@CA_CompID)                
Begin  
set @CA_PKID=(select CA_PKID from CRPA_AuditAssest where CA_PKID=@CA_PKID and CA_FinancialYear=@CA_FinancialYear And CA_LOCATIONID=@CA_LOCATIONID And CA_SECTIONID=@CA_SECTIONID And CA_CompID=@CA_CompID) 
Update CRPA_AuditAssest set CA_NAME_OF_OPS_HEAD=@CA_NAME_OF_OPS_HEAD,CA_ADDRESS=@CA_ADDRESS,CA_NAME_OF_UNIT_PRESIDENT =@CA_NAME_OF_UNIT_PRESIDENT,
CA_AUDITORNAME=@CA_AUDITORNAME,CA_UpdatedBy=@CA_UpdatedBy,CA_UpdatedOn=Getdate()     
where CA_PKID=@CA_PKID and CA_CompID=@CA_CompID           
set @iUpdateOrSave=2             
set @iOper = @CA_PKID        
End              
Else                
Begin                
set @CA_PKID=(select IsNull(Max(CA_PKID)+1,1) from CRPA_AuditAssest)                
insert into CRPA_AuditAssest(CA_PKID,CA_AsgNo,CA_FinancialYear,CA_LOCATIONID,CA_SECTIONID,CA_Date,CA_NAME_OF_OPS_HEAD,
CA_ADDRESS,CA_NAME_OF_UNIT_PRESIDENT,CA_AUDITORNAME,CA_NetScore,CA_CrBy,CA_CrOn,CA_UpdatedBy,
CA_UpdatedOn,CA_ASubmittedBy,CA_ASubmittedOn,CA_BSubmittedBy,CA_BSubmittedOn,CA_Status,CA_IPAddress,CA_CompID)              
values(@CA_PKID,@CA_AsgNo,@CA_FinancialYear,@CA_LOCATIONID,@CA_SECTIONID,@CA_Date,@CA_NAME_OF_OPS_HEAD,@CA_ADDRESS,
@CA_NAME_OF_UNIT_PRESIDENT,@CA_AUDITORNAME,@CA_NetScore,@CA_CrBy,Getdate(),@CA_UpdatedBy,Getdate(),@CA_ASubmittedBy,
Getdate(),@CA_BSubmittedBy,Getdate(),@CA_Status,@CA_IPAddress,@CA_CompID)               
set @iUpdateOrSave=3               
set @iOper = @CA_PKID                
End 

/

Create procedure [dbo].[spCRPA_Process]          
(              
@CAP_ID int,
@CAP_CODE varchar(20),
@CAP_PROCESSNAME varchar(5000),
@CAP_POINTS int,
@CAP_SECTIONID int ,
@CAP_SUBSECTIONID int ,
@CAP_Desc varchar(8000) ,
@CAP_DELFLG varchar(1),
--@CAP_CRON datetime ,
@CAP_CRBY int ,
--@CAP_APPROVEDBY int ,
--@CAP_APPROVEDON datetime ,
@CAP_STATUS varchar(2),
@CAP_UPDATEDBY int ,
--@CAP_UPDATEDON datetime ,
--@CAP_DELETEDBY int ,
--@CAP_DELETEDON datetime ,
--@CAP_RECALLBY int ,
--@CAP_RECALLON datetime ,
@CAP_IPAddress varchar(25) ,
@CAP_CompId int ,
@CAP_YEARId int,               
@iUpdateOrSave int Output,                
@iOper int Output                  
)                
As                     
  if exists(select CAP_ID from CRPA_Process where CAP_ID= @CAP_ID and CAP_CompId= @CAP_CompId)  
Begin                  
set @CAP_STATUS ='U'     
         update CRPA_Process  set CAP_CODE= @CAP_CODE, CAP_PROCESSNAME= @CAP_PROCESSNAME, CAP_POINTS=@CAP_POINTS, CAP_SECTIONID=@CAP_SECTIONID, 
		 CAP_SUBSECTIONID=@CAP_SUBSECTIONID, CAP_Desc= @CAP_Desc, CAP_STATUS=@CAP_STATUS, CAP_UPDATEDBY= @CAP_UPDATEDBY, CAP_UPDATEDON=GetDate(),
		 CAP_IPAddress=@CAP_IPAddress, CAP_YEARId=@CAP_YEARId            
  where CAP_ID=@CAP_ID  and CAP_COMPID = @CAP_COMPID              
    set @iUpdateOrSave=2               
    set @iOper = @CAP_ID                 
End                       
   Else                 
Begin                      
 set @CAP_ID=(select isnull(max(CAP_ID)+1,1) from CRPA_Process)                
  insert into CRPA_Process(CAP_ID, CAP_CODE, CAP_PROCESSNAME, CAP_POINTS, CAP_SECTIONID, CAP_SUBSECTIONID, CAP_Desc, CAP_DELFLG, CAP_CRBY, CAP_CRON, 
			CAP_STATUS, CAP_IPAddress, CAP_CompId, CAP_YEARId)                
values                
  (@CAP_ID, @CAP_CODE, @CAP_PROCESSNAME, @CAP_POINTS, @CAP_SECTIONID, @CAP_SUBSECTIONID, @CAP_Desc, @CAP_DELFLG, @CAP_CRBY, GetDate(),              
			@CAP_STATUS, @CAP_IPAddress, @CAP_CompId, @CAP_YEARId)                
   set @iUpdateOrSave=3                 
   set @iOper = @CAP_ID                
End 

/

CREATE Procedure [dbo].[spCRPA_Rating]  
(    
@CRAT_PKID int,
@CRAT_YearID int,
@CRAT_AuditID int,
@CRAT_StartValue real,
@CRAT_EndValue real,
@CRAT_Desc varchar(2000),
@CRAT_Name varchar(2000),
@CRAT_Color varchar(20),
@CRAT_FLAG varchar(1),
@CRAT_STATUS varchar(2),
@CRAT_CrBy int,
--@CRAT_CrOn datetime,
@CRAT_UpdatedBy int,
--@CRAT_UpdatedOn datetime,
--@CRAT_ApprovedBy int,
--@CRAT_ApprovedOn datetime,
--@CRAT_RecallBy int,
--@CRAT_RecallOn datetime,
--@CRAT_DeletedBy int,
--@CRAT_DeletedOn datetime,
@CRAT_IPAddress varchar(25),
@CRAT_CompId int,   
@iUpdateOrSave int Output,      
@iOper int Output     
)    
as           
  if exists(select CRAT_PKID from CRPA_Rating where CRAT_PKID= @CRAT_PKID and CRAT_CompId= @CRAT_CompId)      
begin       
set @CRAT_STATUS='U'  
  update CRPA_Rating set CRAT_YearID= @CRAT_YearID, CRAT_AuditID= @CRAT_AuditID, CRAT_StartValue= @CRAT_StartValue, CRAT_EndValue= @CRAT_EndValue,
  CRAT_Desc= @CRAT_Desc, CRAT_Name= @CRAT_Name, CRAT_Color= @CRAT_Color, CRAT_STATUS= @CRAT_STATUS, CRAT_UpdatedBy= @CRAT_UpdatedBy, CRAT_UpdatedOn=Getdate(),
  CRAT_IPAddress=@CRAT_IPAddress 
  where  CRAT_PKID=@CRAT_PKID and CRAT_CompId = @CRAT_CompId     
  set @iUpdateOrSave=2          
  set @iOper =@CRAT_PKID      
end    
else    
begin      
  set @CRAT_PKID=(select isnull(max(CRAT_PKID)+1,1) from CRPA_Rating)      
 insert into CRPA_Rating(CRAT_PKID, CRAT_YearID, CRAT_AuditID, CRAT_StartValue, CRAT_EndValue, CRAT_Desc, CRAT_Name, CRAT_Color, CRAT_FLAG, CRAT_STATUS,
 CRAT_CrBy, CRAT_CrOn, CRAT_IPAddress,CRAT_CompId)      
 values (@CRAT_PKID, @CRAT_YearID, @CRAT_AuditID, @CRAT_StartValue, @CRAT_EndValue, @CRAT_Desc, @CRAT_Name, @CRAT_Color, @CRAT_FLAG, @CRAT_STATUS,
 @CRAT_CrBy, Getdate(), @CRAT_IPAddress, @CRAT_CompId)
  set @iUpdateOrSave=3         
  set @iOper =@CRAT_PKID      
 end

/

CREATE procedure [dbo].[spCRPA_Section_Master]                    
(
	@CAS_ID int,	
	@CAS_CODE varchar(20),
	@CAS_SECTIONNAME varchar(5000),
	@CAS_POINTS int ,
	@CAS_Desc varchar(8000),       
	@CAS_DELFLG varchar(1),
	--@CAS_CRON datetime,
	@CAS_CRBY int,
	--@CAS_APPROVEDBY int,
	--@CAS_APPROVEDON datetime ,
	@CAS_STATUS varchar(2) ,
	@CAS_UPDATEDBY int ,
	@CAS_IPAddress varchar(25) ,
	@CAS_CompId int ,
	@CAS_YEARId int, 
	@iUpdateOrSave int Output,      
	@iOper int Output                
)                            
as           
  if exists(select CAS_ID from CRPA_Section where CAS_ID= @CAS_ID and CAS_CompId= @CAS_CompId)      
begin       
set @CAS_STATUS='U'  
  update CRPA_Section set CAS_CODE= @CAS_CODE, CAS_SECTIONNAME= @CAS_SECTIONNAME, CAS_POINTS= @CAS_POINTS, 
   CAS_Desc= @CAS_Desc, CAS_STATUS= @CAS_STATUS, CAS_UPDATEDBY= @CAS_UPDATEDBY, CAS_UPDATEDON=Getdate(),
   CAS_IPAddress=@CAS_IPAddress, CAS_YEARId=@CAS_YEARId
  where  CAS_ID=@CAS_ID and CAS_CompId= @CAS_CompId   
  set @iUpdateOrSave=2          
  set @iOper =@CAS_ID     
end    
else    
begin      
  set @CAS_ID=(select isnull(max(CAS_ID)+1,1) from CRPA_Section)      
 insert into CRPA_Section(CAS_ID, CAS_CODE, CAS_SECTIONNAME,  CAS_POINTS, CAS_Desc, CAS_DELFLG, CAS_CRBY,
							CAS_CRON, CAS_STATUS, CAS_IPAddress, CAS_CompId, CAS_YEARId)      
					 values (@CAS_ID, @CAS_CODE, @CAS_SECTIONNAME, @CAS_Points, @CAS_Desc, @CAS_DELFLG, @CAS_CRBY,
					  Getdate(), @CAS_STATUS, @CAS_IPAddress, @CAS_CompId, @CAS_YEARId)
  set @iUpdateOrSave=3         
  set @iOper =@CAS_ID     
 end

/

CREATE procedure [dbo].[spCRPA_SubProcess]          
(              
@CASP_ID int,
@CASP_CODE varchar(20),
@CASP_SUBPROCESSNAME varchar(5000),
@CASP_POINTS int,
@CASP_SECTIONID int ,
@CASP_SUBSECTIONID int ,
@CASP_PROCESSID int ,
@CASP_Desc varchar(8000) ,
@CASP_DELFLG varchar(1),
--@CASP_CRON datetime ,
@CASP_CRBY int ,
--@CASP_APPROVEDBY int ,
--@CASP_APPROVEDON datetime ,
@CASP_STATUS varchar(2),
@CASP_UPDATEDBY int ,
--@CASP_UPDATEDON datetime ,
--@CASP_DELETEDBY int ,
--@CASP_DELETEDON datetime ,
--@CASP_RECALLBY int ,
--@CASP_RECALLON datetime ,
@CASP_IPAddress varchar(25) ,
@CASP_CompId int ,
@CASP_YEARId int,               
@iUpdateOrSave int Output,                
@iOper int Output                  
)                
As                     
  if exists(select CASP_ID from CRPA_SubProcess where CASP_ID= @CASP_ID and CASP_CompId= @CASP_CompId)  
Begin                  
set @CASP_STATUS ='U'     
         update CRPA_SubProcess  set CASP_CODE= @CASP_CODE, CASP_SUBPROCESSNAME= @CASP_SUBPROCESSNAME, CASP_POINTS=@CASP_POINTS, CASP_SECTIONID=@CASP_SECTIONID, 
		 CASP_SUBSECTIONID=@CASP_SUBSECTIONID, CASP_PROCESSID=@CASP_PROCESSID, CASP_Desc= @CASP_Desc, CASP_STATUS=@CASP_STATUS, CASP_UPDATEDBY= @CASP_UPDATEDBY, CASP_UPDATEDON=GetDate(),
		 CASP_IPAddress=@CASP_IPAddress, CASP_YEARId=@CASP_YEARId            
  where CASP_ID=@CASP_ID  and CASP_COMPID = @CASP_COMPID              
    set @iUpdateOrSave=2               
    set @iOper = @CASP_ID                 
End                       
   Else                 
Begin                      
 set @CASP_ID=(select isnull(max(CASP_ID)+1,1) from CRPA_SubProcess)                
  insert into CRPA_SubProcess(CASP_ID, CASP_CODE, CASP_SUBPROCESSNAME, CASP_POINTS, CASP_SECTIONID, CASP_SUBSECTIONID, CASP_PROCESSID, CASP_Desc, CASP_DELFLG, CASP_CRBY, 
								CASP_CRON, CASP_STATUS, CASP_IPAddress, CASP_CompId, CASP_YEARId)                
values                
  (@CASP_ID, @CASP_CODE, @CASP_SUBPROCESSNAME, @CASP_POINTS, @CASP_SECTIONID, @CASP_SUBSECTIONID, @CASP_PROCESSID, @CASP_Desc, @CASP_DELFLG, @CASP_CRBY, GetDate(),              
			@CASP_STATUS, @CASP_IPAddress, @CASP_CompId, @CASP_YEARId)                
   set @iUpdateOrSave=3                 
   set @iOper = @CASP_ID                
End 

/

CREATE Procedure [dbo].[spCRPA_SubSection]  
(    
@CASU_ID int  ,
@CASU_CODE varchar(20)  ,
@CASU_SUBSECTIONNAME varchar(5000) ,
@CASU_SECTIONID varchar(5000) ,
@CASU_Points int ,
@CASU_Desc varchar(8000) ,
@CASU_DELFLG varchar(1)  ,
--@CASU_CRON datetime ,
@CASU_CRBY int ,
--@CASU_APPROVEDBY int ,
--@CASU_APPROVEDON datetime ,
@CASU_STATUS varchar(2) ,
@CASU_UPDATEDBY int ,
--@CASU_UPDATEDON datetime ,
--@CASU_DELETEDBY int ,
--@CASU_DELETEDON datetime ,
--@CASU_RECALLBY int ,
--@CASU_RECALLON datetime ,
@CASU_IPAddress varchar(25) ,
@CASU_CompId int ,
@CASU_YEARId int ,
@iUpdateOrSave int Output,      
@iOper int Output     
)    
as           
  if exists(select CASU_ID from CRPA_SubSection where CASU_ID= @CASU_ID and CASU_CompId= @CASU_CompId)      
begin       
set @CASU_STATUS='U'  
  update CRPA_SubSection set CASU_CODE= @CASU_CODE, CASU_SUBSECTIONNAME= @CASU_SUBSECTIONNAME, CASU_SECTIONID= @CASU_SECTIONID, 
  CASU_Points= @CASU_Points, CASU_Desc= @CASU_Desc, CASU_STATUS= @CASU_STATUS, CASU_UPDATEDBY= @CASU_UPDATEDBY, CASU_UPDATEDON=Getdate(),
   CASU_IPAddress=@CASU_IPAddress, CASU_YEARId=@CASU_YEARId 
  where  CASU_ID=@CASU_ID and CASU_CompId= @CASU_CompId   
  set @iUpdateOrSave=2          
  set @iOper =@CASU_ID     
end    
else    
begin      
  set @CASU_ID=(select isnull(max(CASU_ID)+1,1) from CRPA_SubSection)      
 insert into CRPA_SubSection(CASU_ID, CASU_CODE, CASU_SUBSECTIONNAME, CASU_SECTIONID, CASU_Points, CASU_Desc, CASU_DELFLG, CASU_CRBY,
							CASU_CRON,CASU_STATUS,CASU_IPAddress,CASU_CompId,CASU_YEARId)      
					 values (@CASU_ID, @CASU_CODE, @CASU_SUBSECTIONNAME, @CASU_SECTIONID, @CASU_Points, @CASU_Desc, @CASU_DELFLG, @CASU_CRBY,
					  Getdate(), @CASU_STATUS, @CASU_IPAddress, @CASU_CompId, @CASU_YEARId)
  set @iUpdateOrSave=3         
  set @iOper =@CASU_ID     
 end

/

Create Procedure [dbo].[spCRPA_ValueRating]  
(    
@CVR_ID int,
@CVR_YearID int,
@CVR_Point varchar(50),
@CVR_AuditID int,
@CVR_Name varchar(2000),
@CVR_Desc varchar(2000),
@CVR_FLAG varchar(1),
@CVR_STATUS varchar(2),
@CVR_CrBy int,
--@CVR_CrOn datetime,
@CVR_UpdatedBy int,
--@CVR_UpdatedOn datetime,
--@CVR_ApprovedBy int,
--@CVR_ApprovedOn datetime,
--@CVR_RecallBy int,
--@CVR_RecallOn datetime,
--@CVR_DeletedBy int,
--@CVR_DeletedOn datetime,
@CVR_IPAddress varchar(25),
@CVR_CompId int,   
@iUpdateOrSave int Output,      
@iOper int Output     
)    
as           
  if exists(select CVR_ID from CRPA_ValueRating where CVR_ID= @CVR_ID and CVR_CompId= @CVR_CompId)      
begin       
set @CVR_STATUS='U'  
  update CRPA_ValueRating set CVR_YearID= @CVR_YearID,CVR_Point=@CVR_Point, CVR_AuditId= @CVR_AuditID, CVR_Name=@CVR_Name, 
  CVR_Desc= @CVR_Desc, CVR_STATUS= @CVR_STATUS, CVR_UpdatedBy= @CVR_UpdatedBy, CVR_UpdatedOn=Getdate(),
  CVR_IPAddress=@CVR_IPAddress 
  where  CVR_ID=@CVR_ID and CVR_CompId = @CVR_CompId     
  set @iUpdateOrSave=2          
  set @iOper =@CVR_ID      
end    
else    
begin      
  set @CVR_ID=(select isnull(max(CVR_ID)+1,1) from CRPA_ValueRating)      
 insert into CRPA_ValueRating(CVR_ID, CVR_YearID, CVR_Point, CVR_AuditId, CVR_Name, CVR_Desc, CVR_FLAG, CVR_STATUS,
 CVR_CrBy, CVR_CrOn, CVR_IPAddress,CVR_CompId)      
 values (@CVR_ID, @CVR_YearID, @CVR_Point, @CVR_AuditID, @CVR_Name, @CVR_Desc, @CVR_FLAG, @CVR_STATUS,
 @CVR_CrBy, Getdate(), @CVR_IPAddress, @CVR_CompId)
  set @iUpdateOrSave=3         
  set @iOper =@CVR_ID      
 end

/

CREATE Procedure [dbo].[spCustomer_COA] 
(    
@CC_ID int,		
@CC_AccHead int,
@CC_Head int,
@CC_GL int,
@CC_Parent int,
@CC_GLCode Varchar(25),
@CC_GLDesc Varchar(500),
@CC_CustID int,
@CC_IndType int,
@CC_OBDebit money,
@CC_OBCredit money,
@CC_TrDebit money,
@CC_TrCredit money,
@CC_CloseDebit money,
@CC_CloseCredit money,
@CC_YearID int ,
@CC_CompID int ,
@CC_Status varchar,
@CC_Createdby int,
@CC_CreatedOn datetime,
@CC_Operation Varchar(25),
@CC_IPAddress Varchar(25),
@iUpdateOrSave int Output,    
@iOper int Output     
)    
as
If exists(select CC_GL from Customer_COA where CC_GLDesc=@CC_GLDesc And CC_CustID=@CC_CustID And CC_IndType=@CC_IndType And CC_CompID = @CC_CompID And CC_YearID=CC_YearID)         
 Begin 

 Update Customer_COA Set CC_AccHead=@CC_AccHead,CC_Head=@CC_Head,CC_Parent=@CC_Parent,CC_GLCode=@CC_GLCode 
 Where CC_GLDesc=@CC_GLDesc And CC_CustID=@CC_CustID And CC_IndType=@CC_IndType And CC_CompID = @CC_CompID And CC_YearID=CC_YearID
set @iUpdateOrSave=2 
Set @iOper = (select CC_GL from Customer_COA where CC_GLDesc=@CC_GLDesc And CC_CustID=@CC_CustID And CC_IndType=@CC_IndType And CC_CompID = @CC_CompID And CC_YearID=CC_YearID)        
End        
Else   
 begin   
set @CC_Id=(select isnull(max(CC_Id)+1,1) from Customer_COA)        
  insert into Customer_COA (CC_ID,CC_AccHead,CC_Head,CC_GL,CC_Parent,CC_GLCode,CC_GLDesc,CC_CustID,CC_IndType,CC_OBDebit,CC_OBCredit,CC_TrDebit,CC_TrCredit,CC_CloseDebit,CC_CloseCredit,CC_YearID,CC_CompID,CC_Status,CC_Createdby,CC_CreatedOn,CC_Operation,CC_IPAddress)    
values (@CC_ID,@CC_AccHead,@CC_Head,@CC_GL,@CC_Parent,@CC_GLCode,@CC_GLDesc,@CC_CustID,@CC_IndType,@CC_OBDebit,@CC_OBCredit,@CC_TrDebit,@CC_TrCredit,@CC_CloseDebit,@CC_CloseCredit,@CC_YearID,@CC_CompID,@CC_Status,@CC_Createdby,@CC_CreatedOn,@CC_Operation,
@CC_IPAddress)      
   set @iUpdateOrSave=3         
   set @iOper = @CC_Id     
end 

/

CREATE procedure [dbo].[spEDT_Cabinet]
(				
@CBN_ID  int, 
@CBN_NAME varchar(500),
@CBN_Note varchar(max),
@CBN_PARENT int,
@CBN_UserID  int,
@CBN_Department  int,
@CBN_SubCabCount  int,
@CBN_FolderCount  int,
@CBN_Status varchar(2),
@CBN_DelFlag varchar(1),
@CBN_CreatedBy int,
@CBN_UpdatedBy int,
@CBN_CompID int,
@iUpdateOrSave int Output,     
@iOper int Output               
)          
 as            
  if exists(Select CBN_ID from edt_cabinet where CBN_ID=@CBN_ID and CBN_CompID=@CBN_CompID )             
   begin                 
    Update edt_cabinet set CBN_NAME=@CBN_NAME,CBN_Note=@CBN_Note,CBN_PARENT=@CBN_PARENT,CBN_UserID=@CBN_UserID,
	       CBN_Department=@CBN_Department,CBN_SubCabCount=@CBN_SubCabCount,CBN_FolderCount=@CBN_FolderCount,
	       CBN_Status=@CBN_Status,CBN_UpdatedBy=@CBN_UpdatedBy
		   where CBN_ID=@CBN_ID 
	set @iUpdateOrSave=2      
	set @iOper = @CBN_ID   
  end                    
else   

   begin  
   set @CBN_ID=(select isnull(max(CBN_ID)+1,1) from edt_cabinet)
   Insert into edt_cabinet (CBN_ID,CBN_NAME,CBN_Note,CBN_PARENT,CBN_UserID,CBN_Department,CBN_SubCabCount,CBN_FolderCount,CBN_Status,CBN_DelFlag,
                  CBN_CreatedBy,CBN_CreatedOn,CBN_CompID) values 
                 (@CBN_ID,@CBN_NAME,@CBN_Note,@CBN_PARENT,@CBN_UserID,@CBN_Department,@CBN_SubCabCount,@CBN_FolderCount,@CBN_Status,@CBN_DelFlag,
                  @CBN_CreatedBy,GetDate(),@CBN_CompID)
	set @iUpdateOrSave=3       
	set @iOper = @CBN_ID      
	end

/

CREATE procedure [dbo].[spEDT_cabinet_Permission]
(
@CBP_ID int,
@CBP_PermissionType varchar(1),
@CBP_Cabinet int,
@CBP_User int,
@CBP_Department int,
@CBP_View int,
@CBP_Create int,
@CBP_Modify int,
@CBP_Delete int,
@CBP_Search int,
@CBP_Index int,
@CBP_Other int,
@CBP_CreateFolder int,
@iUpdateOrSave int Output,     
@iOper int Output  
)
      as
        if exists(Select CBP_ID from edt_cabinet_Permission where CBP_Department=@CBP_Department and CBP_Cabinet=@CBP_Cabinet and CBP_User=@CBP_User)
           Begin
               Update edt_cabinet_permission set CBP_PermissionType=@CBP_PermissionType,CBP_Cabinet=@CBP_Cabinet,CBP_User=@CBP_User,
			   CBP_Department=@CBP_Department,CBP_View=@CBP_View,CBP_Create=@CBP_Create,CBP_Modify=@CBP_Modify,CBP_Delete=@CBP_Delete,
			   CBP_Search=@CBP_Search,CBP_Index=@CBP_Index,CBP_Other=@CBP_Other,CBP_CreateFolder=@CBP_CreateFolder
               where CBP_Department=@CBP_Department and CBP_Cabinet=@CBP_Cabinet and CBP_User=@CBP_User
			   set @iUpdateOrSave=2      
			   set @iOper = @CBP_ID   
           End
         else
           Begin
                set @CBP_id=(Select isnull(max(CBP_ID)+1,1) from edt_cabinet_permission)
					Insert into edt_cabinet_permission(CBP_ID,CBP_PermissionType,CBP_Cabinet,CBP_User,CBP_Department,
					CBP_View,CBP_Create,CBP_Modify,CBP_Delete,CBP_Search,CBP_Index,CBP_Other,CBP_CreateFolder)
                    values(@CBP_ID,@CBP_PermissionType,@CBP_Cabinet,@CBP_User,@CBP_Department,
                    @CBP_View,@CBP_Create,@CBP_Modify,@CBP_Delete,@CBP_Search,@CBP_Index,@CBP_Other,@CBP_CreateFolder)
					set @iUpdateOrSave=3       
					set @iOper = @CBP_ID    
           End 

/

CREATE procedure [dbo].[spEDT_COLLATEDOC]                  
(     
@CLD_COLLATENO int,  
@CLD_DOCID int,  
@CLD_PAGEID int,  
@iUpdateOrSave int Output,                     
@iOper Int Output   
)                    
as   
if exists(select CLD_COLLATENO from EDT_COLLATEDOC where CLD_COLLATENO=@CLD_COLLATENO And CLD_DOCID=@CLD_DOCID)                 
begin     
update EDT_COLLATEDOC set CLD_COLLATENO=@CLD_COLLATENO,CLD_DOCID=@CLD_DOCID,CLD_PAGEID=@CLD_PAGEID  
where CLD_COLLATENO=@CLD_COLLATENO And CLD_DOCID=@CLD_DOCID              
set @iUpdateOrSave=2                     
set @iOper=@CLD_COLLATENO                       
end                      
else                         
begin    
insert into EDT_COLLATEDOC(CLD_COLLATENO,CLD_DOCID,CLD_PAGEID)values(@CLD_COLLATENO,@CLD_DOCID,@CLD_PAGEID)                      
set @iUpdateOrSave=3                      
set @iOper=@CLD_COLLATENO                     
end

/

CREATE Procedure [dbo].[spEDT_DESCRIPTOR]
(
@DES_ID	int,		
@DESC_NAME varchar(100),
@DESC_NOTE varchar(200),
@DESC_DATATYPE varchar(25),
@DESC_SIZE varchar(3),
@DESC_STATUS varchar(2),
@DESC_DelFlag varchar(1),
@DESC_DefaultValues Varchar(250),
@DESC_CRBY int,
@DESC_UPDATEDBY int,
@DESC_CompId int,
@DESC_IPAddress varchar(50),
@iUpdateOrSave int Output,
@iOper Int Output 
)
	as 		
		if exists(select DES_ID from EDT_DESCRIPTOR where DES_ID=@DES_ID And DESC_CompId=@DESC_CompId)
	begin 
		update EDT_DESCRIPTOR set DESC_NAME=@DESC_NAME,DESC_NOTE=@DESC_NOTE,DESC_DATATYPE=@DESC_DATATYPE,DESC_SIZE=@DESC_SIZE,DESC_DefaultValues=@DESC_DefaultValues,
		DESC_UPDATEDBY=@DESC_UPDATEDBY,DESC_UPDATEDON=GetDate(),
		DESC_STATUS=@DESC_STATUS,DESC_IPAddress=@DESC_IPAddress where DES_ID=@DES_ID And DESC_CompId=@DESC_CompId
		Set @iUpdateOrSave=2  
		set @iOper=@DES_ID	
	end		
else 
	begin		
	set @DES_ID=(select isnull(max(DES_ID)+1,1) from EDT_DESCRIPTOR)
		insert into EDT_DESCRIPTOR (DES_ID,DESC_NAME,DESC_NOTE,DESC_DATATYPE,DESC_SIZE,DESC_STATUS,DESC_DelFlag,DESC_DefaultValues,
		DESC_CRBY,DESC_CRON,DESC_CompId,DESC_IPAddress)
		values
		(@DES_ID,@DESC_NAME,@DESC_NOTE,@DESC_DATATYPE,@DESC_SIZE,@DESC_STATUS,@DESC_DelFlag,@DESC_DefaultValues,@DESC_CRBY,GetDate(),@DESC_CompId,@DESC_IPAddress)	
		Set @iUpdateOrSave=3	
		set @iOper=@DES_ID
	end

/

CREATE procedure [dbo].[spEDT_DOCTYPE_LINK]                
(   
@EDD_Pk int,     
@EDD_DOCTYPEID int,
@EDD_DPTRID int,
@EDD_ISREQUIRED varchar(5),
@EDD_Size int,
@EDD_VALUES varchar(2000),
@EDD_VALIDATE varchar(1),
@EDD_CRBY int,
@EDD_UPDATEDBY int,
@EDD_CompId int,
@EDD_IPAddress varchar(50),
@iUpdateOrSave int Output,                   
@iOper Int Output                   
)                  
as                         
if exists(select EDD_Pk from EDT_DOCTYPE_LINK where EDD_Pk=@EDD_Pk And EDD_CompId=@EDD_CompId)                    
begin 
Declare @EDD_Status varchar(1)      
Set @EDD_Status='U' 
update EDT_DOCTYPE_LINK set EDD_DOCTYPEID=@EDD_DOCTYPEID,EDD_DPTRID=@EDD_DPTRID,EDD_ISREQUIRED=@EDD_ISREQUIRED,EDD_Size=@EDD_Size,
EDD_VALUES=@EDD_VALUES,EDD_VALIDATE=@EDD_VALIDATE,EDD_UPDATEDBY=@EDD_UPDATEDBY,EDD_UPDATEDON=GetDate(),EDD_IPAddress=@EDD_IPAddress       
where EDD_Pk=@EDD_Pk And EDD_CompId=@EDD_CompId              
set @iUpdateOrSave=2                   
set @iOper=@EDD_Pk                     
end                    
else                     
begin                    
set @EDD_Pk=(select isnull(max(EDD_Pk)+1,1) from EDT_DOCTYPE_LINK)                    
insert into EDT_DOCTYPE_LINK(EDD_Pk,EDD_DOCTYPEID,EDD_DPTRID,EDD_ISREQUIRED,EDD_Size,EDD_VALUES,EDD_VALIDATE,EDD_CRBY,EDD_CRON)values                    
(@EDD_Pk,@EDD_DOCTYPEID,@EDD_DPTRID,@EDD_ISREQUIRED,@EDD_Size,@EDD_VALUES,@EDD_VALIDATE,@EDD_CRBY,GetDate())                    
set @iUpdateOrSave=3                    
set @iOper=@EDD_Pk                   
end

/

CREATE procedure [dbo].[spEDT_DOCUMENT_TYPE]                 
(        
@DOT_DOCTYPEID int,
@DOT_DOCNAME varchar(400),
@DOT_NOTE varchar(600),
@DOT_PGROUP int,
@DOT_CRBY int,
@DOT_UPDATEDBY int,
@DOT_operation varchar(10),
@DOT_operationby int,
@DOT_isGlobal int,
@DOT_CompId int,
@DOT_IPAddress varchar(50),
@DOT_STATUS varchar(2),
@DOT_DelFlag varchar(2),
@iUpdateOrSave int Output,                   
@iOper Int Output                   
)                  
as                         
if exists(select DOT_DOCTYPEID from EDT_DOCUMENT_TYPE where DOT_DOCTYPEID=@DOT_DOCTYPEID And DOT_CompId=@DOT_CompId)                    
begin  
update EDT_DOCUMENT_TYPE set DOT_DOCNAME=@DOT_DOCNAME,DOT_NOTE=@DOT_NOTE,DOT_PGROUP=@DOT_PGROUP,DOT_UPDATEDBY=@DOT_UPDATEDBY,DOT_UPDATEDON=GetDate(),    
dot_operation=@DOT_operation,dot_operationby=@DOT_operationby,DOT_isGlobal=@DOT_isGlobal,DOT_STATUS=@DOT_STATUS,DOT_DelFlag=@DOT_DelFlag,DOT_IPAddress=@DOT_IPAddress        
where DOT_DOCTYPEID=@DOT_DOCTYPEID And DOT_CompId=@DOT_CompId             
set @iUpdateOrSave=2                   
set @iOper=@DOT_DOCTYPEID                     
end                    
else                     
begin                    
set @DOT_DOCTYPEID=(select isnull(max(DOT_DOCTYPEID)+1,1) from EDT_DOCUMENT_TYPE)                    
insert into EDT_DOCUMENT_TYPE(DOT_DOCTYPEID,DOT_DOCNAME,DOT_NOTE,DOT_PGROUP,DOT_CRBY,DOT_CRON,DOT_STATUS,dot_operation,dot_operationby,DOT_isGlobal,DOT_DelFlag,DOT_CompId,DOT_IPAddress)values                    
(@DOT_DOCTYPEID,@DOT_DOCNAME,@DOT_NOTE,@DOT_PGROUP,@DOT_CRBY,GetDate(),@DOT_STATUS,@DOT_operation,@DOT_operationby,@DOT_isGlobal,@DOT_DelFlag,@DOT_CompId,@DOT_IPAddress)                    
set @iUpdateOrSave=3                    
set @iOper=@DOT_DOCTYPEID                   
end

/

CREATE Procedure [dbo].[spEDT_PAGE](              
@PGE_BASENAME int,              
@PGE_CABINET int,      
@PGE_FOLDER int,            
@PGE_DOCUMENT_TYPE int,      
@PGE_TITLE varchar(max),     
@PGE_DATE datetime,  
@Pge_DETAILS_ID int,    
@Pge_CreatedBy int,           
@PGE_OBJECT varchar(10),   
@PGE_PAGENO integer,    
@PGE_EXT varchar(5),
@PGE_KeyWORD varchar(500),
@PGE_OCRText varchar(max),
@PGE_SIZE int,    
@PGE_CURRENT_VER int,
@PGE_STATUS varchar(1),
@PGE_SubCabinet int,
@PGE_QC_UsrGrpId int,
@PGE_FTPStatus  varchar(1),
@PGE_batch_name int,
@pge_OrignalFileName varchar(max),
@PGE_BatchID int,
@PGE_OCRDelFlag int,
@Pge_CompID int,
@pge_Delflag varchar(1),
@PGE_RFID varchar(max),
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as                     
begin                
 insert into EDT_PAGE(PGE_BASENAME,PGE_CABINET,PGE_FOLDER,PGE_DOCUMENT_TYPE,PGE_TITLE,PGE_DATE,Pge_DETAILS_ID,Pge_CreatedBy,Pge_CreatedOn,              
 PGE_OBJECT,PGE_PAGENO,PGE_EXT,PGE_KeyWORD,PGE_OCRText,PGE_SIZE,PGE_CURRENT_VER ,PGE_STATUS,PGE_SubCabinet,PGE_QC_UsrGrpId,
  PGE_FTPStatus,PGE_batch_name,pge_OrignalFileName,PGE_BatchID,PGE_OCRDelFlag,Pge_CompID,pge_Delflag,PGE_RFID)                
 values                
 (@PGE_BASENAME,@PGE_CABINET,@PGE_FOLDER,@PGE_DOCUMENT_TYPE,@PGE_TITLE,@PGE_DATE,@Pge_DETAILS_ID,@Pge_CreatedBy,Getdate(),           
 @PGE_OBJECT,@PGE_PAGENO,@PGE_EXT,@PGE_KeyWORD,@PGE_OCRText,@PGE_SIZE,@PGE_CURRENT_VER ,@PGE_STATUS,@PGE_SubCabinet,@PGE_QC_UsrGrpId,
 @PGE_FTPStatus,@PGE_batch_name,@pge_OrignalFileName,@PGE_BatchID,@PGE_OCRDelFlag,@Pge_CompID,@pge_Delflag,@PGE_RFID)                
 set @iUpdateOrSave=3               
 set @iOper = @PGE_BASENAME                     
end 

/

CREATE Procedure [dbo].[spEDT_PAGE_DETAILS](              
@EPD_BASEID int,
@EPD_DOCTYPE int,
@EPD_DESCID int,
@EPD_KEYWORD varchar(2000),
@EPD_VALUE varchar(max),
@EPD_CompID int,
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as                     
begin                
 insert into EDT_PAGE_DETAILS(EPD_BASEID,EPD_DOCTYPE,EPD_DESCID,EPD_KEYWORD,EPD_VALUE,EPD_CompID)                
 values                
 (@EPD_BASEID,@EPD_DOCTYPE,@EPD_DESCID,@EPD_KEYWORD,@EPD_VALUE,@EPD_CompID)                
 set @iUpdateOrSave=3               
 set @iOper = @EPD_BASEID                     
end 

/

CREATE Procedure [dbo].[spEDT_PAGE_DETAILSDigitalFiling](              
@EPD_BASEID int,
@EPD_DOCTYPE int,
@EPD_DESCID int,
@EPD_KEYWORD varchar(2000),
@EPD_VALUE varchar(max),
@EPD_CompID int,
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as                     
if exists(select EPD_BASEID from EDT_PAGE_DETAILS where EPD_BASEID=@EPD_BASEID And EPD_CompID=@EPD_CompID)              
  begin               
 update EDT_PAGE_DETAILS set EPD_DOCTYPE=@EPD_DOCTYPE,EPD_DESCID=@EPD_DESCID,EPD_KEYWORD=@EPD_KEYWORD,EPD_VALUE=@EPD_VALUE         
 where EPD_BASEID=@EPD_BASEID And EPD_CompID=@EPD_CompID          
  set @iUpdateOrSave=2                  
  set @iOper=@EPD_BASEID            
 end              
    else                        
begin                     
 insert into EDT_PAGE_DETAILS(EPD_BASEID,EPD_DOCTYPE,EPD_DESCID,EPD_KEYWORD,EPD_VALUE,EPD_CompID)                
 values                
 (@EPD_BASEID,@EPD_DOCTYPE,@EPD_DESCID,@EPD_KEYWORD,@EPD_VALUE,@EPD_CompID)                
 set @iUpdateOrSave=3               
 set @iOper = @EPD_BASEID                     
end 

/

CREATE Procedure [dbo].[SpEDT_PAGE_ViewAndDownloadlogs]          
(                
@PVD_LogOperation varchar(50),
@PVD_PageBaseID int,
@PVD_Version int,
@PVD_UserId int,         
@PVD_Ipaddress varchar(25),
@PVD_CompId int                           
)                      
As
Begin
Declare @PVD_PKID int,@PVD_Cabinet int,@PVD_SubCabinet int,@PVD_Folder int,@PVD_DocumentType int,@PVD_DepId int,@PVD_PageDetailsID int
set @PVD_PKID=(select isnull(max(PVD_PKID)+1,1) from EDT_PAGE_ViewAndDownloadlogs)
set @PVD_PageDetailsID = (select pge_details_id from edt_page where PGE_BASENAME =@PVD_PageBaseID)
set @PVD_Cabinet =(select PGE_CABINET from edt_page where pge_basename = @PVD_PageDetailsID )
set @PVD_SubCabinet =(select PGE_SubCabinet from edt_page where pge_basename = @PVD_PageDetailsID )
set @PVD_Folder = (select PGE_FOLDER from edt_page where pge_basename = @PVD_PageDetailsID  )
set @PVD_DocumentType = (select PGE_DOCUMENT_TYPE from edt_page where pge_basename = @PVD_PageDetailsID )
set @PVD_DepId = (select USR_DeptID from sad_UserDetails where USR_ID =@PVD_UserId)
insert into EDT_PAGE_ViewAndDownloadlogs(PVD_PKID,PVD_LogOperation,PVD_PageBaseID,PVD_PageDetailsID,
PVD_Cabinet,PVD_SubCabinet,PVD_Folder,PVD_DocumentType,PVD_Version,PVD_UserId,PVD_DepId,PVD_Date,PVD_Ipaddress,PVD_CompId)
Values(@PVD_PKID,@PVD_LogOperation,@PVD_PageBaseID,@PVD_PageDetailsID,@PVD_Cabinet,@PVD_SubCabinet,
@PVD_Folder,@PVD_DocumentType,@PVD_Version,@PVD_UserId,@PVD_DepId,getdate(),@PVD_Ipaddress,@PVD_CompId)
End 

/

CREATE Procedure [dbo].[spEDT_PAGEDigitalFiling](                
@PGE_BASENAME int,                
@PGE_CABINET int,        
@PGE_FOLDER int,              
@PGE_DOCUMENT_TYPE int,        
@PGE_TITLE varchar(max),       
@PGE_DATE datetime,    
@Pge_DETAILS_ID int,      
@Pge_CreatedBy int,
@Pge_UpdatedBy int,             
@PGE_OBJECT varchar(10),     
@PGE_PAGENO integer,      
@PGE_EXT varchar(5),  
@PGE_KeyWORD varchar(500),  
@PGE_OCRText varchar(max),  
@PGE_SIZE int,      
@PGE_CURRENT_VER int,  
@PGE_STATUS varchar(1),  
@PGE_SubCabinet int,  
@PGE_QC_UsrGrpId int,  
@PGE_FTPStatus  varchar(1),  
@PGE_batch_name int,  
@pge_OrignalFileName varchar(max),  
@PGE_BatchID int,  
@PGE_OCRDelFlag int,  
@Pge_CompID int,  
@pge_Delflag varchar(1),  
@iUpdateOrSave int Output,                
@iOper int Output      
)  
as 
if exists(select PGE_BASENAME from EDT_PAGE where PGE_BASENAME=@PGE_BASENAME And Pge_CompID=@Pge_CompID)              
  begin                                   
 update EDT_PAGE set PGE_CABINET=@PGE_CABINET,PGE_FOLDER=@PGE_FOLDER,PGE_DOCUMENT_TYPE=@PGE_DOCUMENT_TYPE,PGE_TITLE=@PGE_TITLE,PGE_DATE=@PGE_DATE,
 Pge_UpdatedBy=@Pge_UpdatedBy,Pge_UpdatedOn=GetDate(),PGE_OBJECT=@PGE_OBJECT,PGE_PAGENO=@PGE_PAGENO,PGE_KeyWORD=@PGE_KeyWORD,PGE_OCRText=@PGE_OCRText,
 PGE_CURRENT_VER=@PGE_CURRENT_VER,PGE_STATUS=@PGE_STATUS,PGE_SubCabinet=@PGE_SubCabinet,PGE_QC_UsrGrpId=@PGE_QC_UsrGrpId,PGE_FTPStatus=@PGE_FTPStatus,            
 PGE_batch_name=@PGE_batch_name,pge_OrignalFileName=@pge_OrignalFileName,PGE_BatchID=@PGE_BatchID,PGE_OCRDelFlag=@PGE_OCRDelFlag,Pge_CompID=@Pge_CompID,pge_Delflag=@pge_Delflag          
 where PGE_BASENAME=@PGE_BASENAME And Pge_CompID=@Pge_CompID          
  set @iUpdateOrSave=2                  
  set @iOper=@PGE_BASENAME            
 end              
    else                        
begin                  
 insert into EDT_PAGE(PGE_BASENAME,PGE_CABINET,PGE_FOLDER,PGE_DOCUMENT_TYPE,PGE_TITLE,PGE_DATE,Pge_DETAILS_ID,Pge_CreatedBy,Pge_CreatedOn,                
 PGE_OBJECT,PGE_PAGENO,PGE_EXT,PGE_KeyWORD,PGE_OCRText,PGE_SIZE,PGE_CURRENT_VER ,PGE_STATUS,PGE_SubCabinet,PGE_QC_UsrGrpId,  
  PGE_FTPStatus,PGE_batch_name,pge_OrignalFileName,PGE_BatchID,PGE_OCRDelFlag,Pge_CompID,pge_Delflag)                  
 values                  
 (@PGE_BASENAME,@PGE_CABINET,@PGE_FOLDER,@PGE_DOCUMENT_TYPE,@PGE_TITLE,@PGE_DATE,@Pge_DETAILS_ID,@Pge_CreatedBy,Getdate(),             
 @PGE_OBJECT,@PGE_PAGENO,@PGE_EXT,@PGE_KeyWORD,@PGE_OCRText,@PGE_SIZE,@PGE_CURRENT_VER ,'U',@PGE_SubCabinet,@PGE_QC_UsrGrpId,  
 @PGE_FTPStatus,@PGE_batch_name,@pge_OrignalFileName,@PGE_BatchID,@PGE_OCRDelFlag,@Pge_CompID,@pge_Delflag)                  
 set @iUpdateOrSave=3                 
 set @iOper = @PGE_BASENAME                       
end 

/

CREATE PROCEDURE [dbo].[spEmailSettings] 
(  
@Conf_IPAddress varchar(20),  
@conf_Port int,  
@conf_From varchar(200),  
@conf_SenderID varchar(15),  
@Conf_INS_IPAddress varchar(20),  
@Conf_Status varchar(2),  
@Conf_UpdatedBy int,  
@Conf_CompID int,  
@iOper int Output      
)  
AS  
 If exists(Select * from INS_COnfig Where conf_CompID=@Conf_CompID)   
BEGIN  
 Update INS_COnfig set conf_UpdatedBy=@Conf_UpdatedBy,conf_UpdatedOn=GetDate(),Conf_IPAddress=@Conf_IPAddress,Conf_Port=@conf_Port,Conf_From=@conf_From,  
 Conf_SenderID=@conf_SenderID,Conf_INS_IPAddress=@Conf_INS_IPAddress,Conf_Status=@Conf_Status   
 Where conf_CompID=@Conf_CompID  
 Set @iOper=2   
END  
Else       
 Begin   
  Insert into INS_COnfig(Conf_IPAddress,conf_Port,conf_From,conf_SenderID,Conf_INS_IPAddress,Conf_Status,Conf_CompID)  
 values(@Conf_IPAddress,@conf_Port,@conf_From,@conf_SenderID,@Conf_INS_IPAddress,@Conf_Status,@Conf_CompID)  
set @iOper=3  
 End   

/

CREATE Procedure [dbo].[spEmp_Category_Charges]
(                          
@EMPC_Id int,        
@EMPC_CAT_ID int,        
@EMPC_HOURS int,        
@EMPC_CHARGES money,        
@EMPC_KMCharges money,        
@EMPC_DelFlag Char(1),        
@EMPC_CompiD int,          
@EMPC_YearID int,        
@EMPC_CreatedBy int,        
@EMPC_UpdatedBy int,        
@EMPC_IPAddress Varchar(25),        
@EMPC_Remarks VarChar(500),        
@iUpdateOrSave int Output,                        
@iOper int Output                        
)                            
 as                               
  if exists(select EMPC_Id from Emp_Category_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompiD = @EMPC_CompiD)                                
begin                             
    Update Emp_Category_Charges set EMPC_HOURS=@EMPC_HOURS,EMPC_CHARGES=@EMPC_CHARGES,EMPC_KMCharges=@EMPC_KMCharges,EMPC_UpdatedBy=@EMPC_UpdatedBy,EMPC_UpdatedOn=Getdate(),EMPC_IPAddress=@EMPC_IPAddress,EMPC_Remarks=@EMPC_Remarks      
    Where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompiD = @EMPC_CompiD        
    set @iUpdateOrSave=2                            
    set @iOper = (select EMPC_Id from Emp_Category_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompiD = @EMPC_CompiD)                                      
end                                      
  else                                  
begin                      
  set @EMPC_Id=(select isnull(max(EMPC_Id)+1,1) from Emp_Category_Charges)                          
  Insert into Emp_Category_Charges (EMPC_Id,EMPC_CAT_ID,EMPC_HOURS,EMPC_CHARGES,EMPC_KMCharges,EMPC_DelFlag,EMPC_Status,EMPC_CompiD,EMPC_YearID,EMPC_CreatedBy,EMPC_CreatedOn,EMPC_IPAddress,EMPC_Remarks)                  
  values (@EMPC_Id,@EMPC_CAT_ID,@EMPC_HOURS,@EMPC_CHARGES,@EMPC_KMCharges,@EMPC_DelFlag,'Saved',@EMPC_CompiD,@EMPC_YearID,@EMPC_CreatedBy,GetDate(),@EMPC_IPAddress,@EMPC_Remarks)                
  set @iUpdateOrSave=3                         
  set @iOper = @EMPC_Id                             
End

/
  
CREATE Procedure [dbo].[spEmployeeMaster]            
(              
@Usr_ID  int,             
@Usr_Node int,            
@Usr_Code  varchar(50),              
@Usr_FullName  varchar(500),              
@Usr_LoginName varchar(50),              
@Usr_Password varchar(500),              
@Usr_Email varchar(500),     
@Usr_Category int, 
@usr_partner int,         
@Usr_LevelGrp  int,              
@Usr_DutyStatus  varchar(1),               
@Usr_PhoneNo  varchar(50),              
@Usr_MobileNo  varchar(50),              
@Usr_OfficePhone  varchar(50),             
@Usr_OffPhExtn varchar(50),            
@Usr_Designation int,            
@Usr_CompanyID int,            
@Usr_OrgnID  int,            
@Usr_GrpOrUserLvlPerm int,            
@Usr_Role int,            
@Usr_MasterModule int,            
@Usr_AuditModule int,            
@Usr_RiskModule int,            
@Usr_ComplianceModule int,            
@Usr_BCMModule int,  
@Usr_DigitalOfficeModule int,  
@Usr_MasterRole int,            
@Usr_AuditRole int,            
@Usr_RiskRole int,            
@Usr_ComplianceRole int,            
@Usr_BCMRole int,  
@Usr_DigitalOfficeRole int,  
@Usr_CreatedBy int,          
@Usr_UpdatedBy int,          
@Usr_DelFlag varchar(1),            
@Usr_Status Varchar(3),      
@Usr_IPAddress Varchar(500),       
@Usr_CompId int, 
@Usr_Type Varchar(5),     
@usr_IsSuperuser int,  
@USR_DeptID int,  
@iUpdateOrSave int Output,          
@iOper int Output               
)                
 As                   
  If exists(select Usr_ID from Sad_UserDetails where Usr_ID=@Usr_ID and Usr_CompId = @Usr_CompId)      
   Begin      
   Set @Usr_Status ='U'      
   Update Sad_UserDetails set Usr_Node=@Usr_Node,Usr_Code=@Usr_Code,Usr_FullName=@Usr_FullName,Usr_LoginName=@Usr_LoginName,Usr_Password=@Usr_Password,Usr_Email=@Usr_Email,      
   usr_partner=@usr_partner,Usr_LevelGrp=@Usr_LevelGrp,Usr_PhoneNo=@Usr_PhoneNo,Usr_MobileNo=@Usr_MobileNo,Usr_OfficePhone=@Usr_OfficePhone,Usr_OffPhExtn=@Usr_OffPhExtn,      
   Usr_Designation=@Usr_Designation,Usr_CompanyID=@Usr_CompanyID,Usr_OrgnID=@Usr_OrgnID,Usr_GrpOrUserLvlPerm=@Usr_GrpOrUserLvlPerm,Usr_Role=@Usr_Role,      
   Usr_MasterModule=@Usr_MasterModule,Usr_AuditModule=@Usr_AuditModule,Usr_RiskModule=@Usr_RiskModule,Usr_ComplianceModule=@Usr_ComplianceModule,Usr_BCMModule=@Usr_BCMModule,    
   Usr_DigitalOfficeModule = @Usr_DigitalOfficeModule,
   Usr_MasterRole=@Usr_MasterRole,Usr_AuditRole=@Usr_AuditRole,Usr_RiskRole=@Usr_RiskRole,Usr_ComplianceRole=@Usr_ComplianceRole,Usr_BCMRole=@Usr_BCMRole, 
   Usr_DigitalOfficeRole = @Usr_DigitalOfficeRole,   
   Usr_Status=@Usr_Status,Usr_UpdatedBy=@Usr_UpdatedBy,Usr_UpdatedOn=GetDate(),Usr_IPAddress=@Usr_IPAddress,Usr_Category=@Usr_Category,Usr_Type = @Usr_Type,
   usr_IsSuperuser =@usr_IsSuperuser, USR_DeptID=@USR_DeptID 
   Where Usr_ID=@Usr_ID  and Usr_CompId = @Usr_CompId      
   Set @iUpdateOrSave=2      
   Set @iOper = @Usr_ID                
 End                
Else               
 Begin      
 Set @Usr_ID=(select isnull(max(Usr_ID)+1,1) from Sad_UserDetails)      
 Insert into Sad_UserDetails (Usr_ID,Usr_Node,Usr_Code,Usr_FullName,Usr_LoginName,Usr_Password,Usr_Email,usr_partner,Usr_LevelGrp,Usr_DutyStatus,Usr_PhoneNo,Usr_MobileNo,      
 Usr_OfficePhone,Usr_OffPhExtn,Usr_Designation,Usr_CompanyID,Usr_OrgnID,Usr_GrpOrUserLvlPerm,Usr_Role,Usr_MasterModule,Usr_AuditModule,Usr_RiskModule,      
 Usr_ComplianceModule,Usr_BCMModule,Usr_DigitalOfficeModule,Usr_MasterRole,Usr_AuditRole,Usr_RiskRole,Usr_ComplianceRole,Usr_BCMRole,Usr_DigitalOfficeRole,
 Usr_DelFlag,Usr_Status,Usr_CompId,Usr_CreatedBy,Usr_CreatedOn,Usr_IPAddress,Usr_Category,Usr_Type,usr_IsSuperuser,USR_DeptID)      
 Values      
 (@Usr_ID,@Usr_Node,@Usr_Code,@Usr_FullName,@Usr_LoginName,@Usr_Password,@Usr_Email,@usr_partner,@Usr_LevelGrp,@Usr_DutyStatus,@Usr_PhoneNo,@Usr_MobileNo,@Usr_OfficePhone,      
 @Usr_OffPhExtn,@Usr_Designation,@Usr_CompanyID,@Usr_OrgnID,@Usr_GrpOrUserLvlPerm,@Usr_Role,@Usr_MasterModule,@Usr_AuditModule,@Usr_RiskModule,      
 @Usr_ComplianceModule,@Usr_BCMModule,@Usr_DigitalOfficeModule,@Usr_MasterRole,@Usr_AuditRole,@Usr_RiskRole,@Usr_ComplianceRole,@Usr_BCMRole,@Usr_DigitalOfficeRole,
 @Usr_DelFlag,@Usr_Status,@Usr_CompId,@Usr_CreatedBy,GetDate(),@Usr_IPAddress,@Usr_Category,@Usr_Type,@usr_IsSuperuser,@USR_DeptID)      
 Set @iUpdateOrSave=3      
 Set @iOper = @Usr_ID             
 End

/

create Procedure [dbo].[spFinancial_AddAssign] 
( 
@FAA_ID int,
@FAA_AccHead int,
@FAA_Head int,
@FAA_GL int,
@FAA_Parent int,
@FAA_GLCode varchar(25),
@FAA_GLDesc varchar(500),
@FAA_SGLDesc varchar(500),
@FAA_CustID int,
@FAA_IndType int,
@FAA_OBDebit money,
@FAA_OBCredit money,
@FAA_TrDebit money,
@FAA_TrCredit money,
@FAA_CloseDebit money,
@FAA_CloseCredit money,
@FAA_Comments varchar(250),
@FAA_Nameoftheperson int,
@FAA_YearID int,
@FAA_CompID int,
@FAA_Createdby int,
@FAA_CreatedOn datetime,
@FAA_Operation varchar(25),
@FAA_IPAddress varchar(25),
@iUpdateOrSave int Output,    
@iOper int Output     
)    
as
If exists(select FAA_GL from Financial_AddAssign where FAA_ID=@FAA_ID and  FAA_CompID = @FAA_CompID And FAA_YearID=@FAA_YearID)         
Begin 
Update Financial_AddAssign Set FAA_Comments=@FAA_Comments,FAA_Nameoftheperson=@FAA_Nameoftheperson
Where FAA_ID=@FAA_ID and FAA_CompID = @FAA_CompID And FAA_YearID=@FAA_YearID
set @iUpdateOrSave=2 
Set @iOper = @FAA_ID 
End        
Else   
begin   
set @FAA_ID=(select isnull(max(FAA_ID)+1,1) from Financial_AddAssign)        
insert into Financial_AddAssign (FAA_ID,FAA_AccHead,FAA_Head,FAA_GL,FAA_Parent,FAA_GLCode,FAA_GLDesc,FAA_SGLDesc,FAA_CustID,FAA_IndType,FAA_OBDebit,FAA_OBCredit,FAA_TrDebit,FAA_TrCredit,FAA_CloseDebit,FAA_CloseCredit,FAA_Comments,FAA_Nameoftheperson,FAA_YearID,FAA_CompID,FAA_Createdby,FAA_CreatedOn,FAA_Operation,FAA_IPAddress)    
values (@FAA_ID,@FAA_AccHead,@FAA_Head,@FAA_GL,@FAA_Parent,@FAA_GLCode,@FAA_GLDesc,@FAA_SGLDesc,@FAA_CustID,@FAA_IndType,@FAA_OBDebit,@FAA_OBCredit,@FAA_TrDebit,@FAA_TrCredit,@FAA_CloseDebit,@FAA_CloseCredit,@FAA_Comments,@FAA_Nameoftheperson,@FAA_YearID,@FAA_CompID,@FAA_Createdby,@FAA_CreatedOn,@FAA_Operation,@FAA_IPAddress)       
   set @iUpdateOrSave=3         
   set @iOper = @FAA_ID  
end 

/

CREATE PROCEDURE [dbo].[spFla_LeaveDetails]
(  
@LPE_ID int,
@LPE_EMPID Int,
@LPE_YearID Int,
@LPE_FROMDATE DateTime,
@LPE_TODATE DateTime,
@LPE_DAYS Int,
@LPE_PURPOSE Varchar(1000),
@LPE_CrBY int,
@LPE_UpdatedBY int,
@LPE_IPAddress Varchar(25),
@LPE_CompID int,
@iUpdateOrSave int Output,                    
@iOper int Output                  
)  
As        
  If exists(Select LPE_ID from Fla_LeaveDetails where LPE_ID=@LPE_ID And LPE_EMPID= @LPE_EMPID And LPE_YearID=@LPE_YearID And LPE_CompID=@LPE_CompID)   
  Begin    
  Update Fla_LeaveDetails set LPE_FROMDATE=@LPE_FROMDATE, LPE_TODATE=@LPE_TODATE,LPE_DAYS=@LPE_DAYS,LPE_PURPOSE=@LPE_PURPOSE,
  LPE_UpdatedBY=@LPE_UpdatedBY,LPE_UpdatedOn=GetDate()
  Where LPE_ID=@LPE_ID And LPE_EMPID= @LPE_EMPID And LPE_YearID=@LPE_YearID And LPE_CompID=@LPE_CompID
  set @iUpdateOrSave=2                        
  set @iOper =@LPE_ID    
END  
Else       
 Begin                  
 Set @LPE_ID=(select isnull(max(LPE_ID)+1,1) from Fla_LeaveDetails)  
 Insert into Fla_LeaveDetails (LPE_ID,LPE_EMPID,LPE_YearID,LPE_FROMDATE,LPE_TODATE,LPE_DAYS,LPE_PURPOSE,LPE_DelFlag,LPE_Status,LPE_CrBY,LPE_CrOn,
 LPE_IPAddress,LPE_CompID)  
 values(@LPE_ID,@LPE_EMPID,@LPE_YearID,@LPE_FROMDATE,@LPE_TODATE,@LPE_DAYS,@LPE_PURPOSE,'W','C',@LPE_CrBY,GetDate(),
 @LPE_IPAddress,@LPE_CompID)  
set @iUpdateOrSave=3                     
set @iOper =@LPE_ID   
 End 

/

CREATE Procedure [dbo].[SpGRACe_EMailSent_Details]            
(  
@EMD_MstPKID int,                 
@EMD_YearID int,  
@EMD_FormName varchar(50),  
@EMD_FromEMailID Varchar(max),
@EMD_ToEmailIDs varchar(max),  
@EMD_CCEmailIDs varchar(max),  
@EMD_Subject varchar(2000),  
@EMD_Body varchar(max),  
@EMD_EMailStatus varchar(25),  
@EMD_SentUsrID int,
@EMD_CreatedBy int,  
@EMD_IPAddress varchar(25),  
@EMD_CompID int                                       
)                        
As  
Begin  
Declare @EMD_ID int 
set @EMD_ID=(select isnull(max(EMD_ID)+1,1) from GRACe_EMailSent_Details)  
insert into GRACe_EMailSent_Details(EMD_ID,EMD_MstPKID,EMD_YearID,EMD_FormName,EMD_FromEMailID,EMD_ToEmailIDs,EMD_CCEmailIDs,
EMD_Subject,EMD_Body,EMD_EMailStatus,EMD_SentUsrID,EMD_SentOn,EMD_CreatedBy,EMD_CreatedOn,EMD_IPAddress,EMD_CompID)  
Values(@EMD_ID,@EMD_MstPKID,@EMD_YearID,@EMD_FormName,@EMD_FromEMailID,@EMD_ToEmailIDs,@EMD_CCEmailIDs,
@EMD_Subject,@EMD_Body,@EMD_EMailStatus,@EMD_SentUsrID,Getdate(),@EMD_CreatedBy,Getdate(),@EMD_IPAddress,@EMD_CompID)  
End 

/

CREATE Procedure [dbo].[spGRACe_OverallBranchRating_Details]    
(        
@GOD_PKID int,    
@GOD_YearID int, 
@GOD_CustID int,     
@GOD_BranchID int,  
@GOD_BRRCoreProcessRatingID int,
@GOD_BRRCoreProcessScore real,
@GOD_BRRSupportProcessRatingID int,
@GOD_BRRSupportProcessScore real,  
@GOD_BRRNetRatingID int,    
@GOD_BRRNetScore Float(8),
@GOD_BACoreProcessRatingID int,
@GOD_BACoreProcessScore real,
@GOD_BASupportProcessRatingID int,
@GOD_BASupportProcessScore real,    
@GOD_BANetRatingID int,    
@GOD_BANetScore Float(8), 
@GOD_BCMCoreProcessRatingID int,
@GOD_BCMCoreProcessScore real,
@GOD_BCMSupportProcessRatingID int,
@GOD_BCMSupportProcessScore real,   
@GOD_BCMNetRatingID int,    
@GOD_BCMNetScore Float(8),    
@GOD_FormName Varchar(50),    
@GOD_CrBy int,    
@GOD_IPAddress Varchar(25),    
@GOD_CompID int,    
@iUpdateOrSave int Output,                      
@iOper int Output     
)    
As    
If exists(Select GOD_PKID from GRACe_OverallBranchRating_Details where GOD_CustID=@GOD_CustID And GOD_BranchID=@GOD_BranchID And GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID)    
Begin     
 Set @GOD_PKID=(Select GOD_PKID from GRACe_OverallBranchRating_Details where GOD_CustID=@GOD_CustID And GOD_BranchID=@GOD_BranchID And GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID)  
 if(@GOD_FormName = 'BRR')  
 Begin     
 Update GRACe_OverallBranchRating_Details Set GOD_BRRCoreProcessRatingID=@GOD_BRRCoreProcessRatingID,GOD_BRRCoreProcessScore=@GOD_BRRCoreProcessScore,
 GOD_BRRSupportProcessRatingID=@GOD_BRRSupportProcessRatingID,GOD_BRRSupportProcessScore=@GOD_BRRSupportProcessScore,
 GOD_BRRNetRatingID=@GOD_BRRNetRatingID,GOD_BRRNetScore=@GOD_BRRNetScore,
 GOD_IPAddress=@GOD_IPAddress,GOD_CrBy=@GOD_CrBy,GOD_CrOn=GetDate()
 Where GOD_CustID=@GOD_CustID And GOD_BranchID=@GOD_BranchID and GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID
 End  
 if(@GOD_FormName = 'BA')  
 Begin     
 Update GRACe_OverallBranchRating_Details Set GOD_BACoreProcessRatingID=@GOD_BACoreProcessRatingID,GOD_BACoreProcessScore=@GOD_BACoreProcessScore,
 GOD_BASupportProcessRatingID=@GOD_BASupportProcessRatingID,GOD_BASupportProcessScore=@GOD_BASupportProcessScore,
 GOD_BANetRatingID=@GOD_BANetRatingID,GOD_BANetScore=@GOD_BANetScore,
 GOD_IPAddress=@GOD_IPAddress,GOD_CrBy=@GOD_CrBy,GOD_CrOn=GetDate()
 Where GOD_CustID=@GOD_CustID And GOD_BranchID=@GOD_BranchID and GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID
 End 
 if(@GOD_FormName = 'BCM')  
 Begin     
 Update GRACe_OverallBranchRating_Details Set GOD_BCMCoreProcessRatingID=@GOD_BCMCoreProcessRatingID,GOD_BCMCoreProcessScore=@GOD_BCMCoreProcessScore,
 GOD_BCMSupportProcessRatingID=@GOD_BCMSupportProcessRatingID,GOD_BCMSupportProcessScore=@GOD_BCMSupportProcessScore,
 GOD_BCMNetRatingID=@GOD_BCMNetRatingID,GOD_BCMNetScore=@GOD_BCMNetScore,
 GOD_IPAddress=@GOD_IPAddress,GOD_CrBy=@GOD_CrBy,GOD_CrOn=GetDate()
 Where GOD_CustID=@GOD_CustID And GOD_BranchID=@GOD_BranchID and GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID
 End             
Set @iUpdateOrSave=2                           
Set @iOper=@GOD_PKID                           
End                           
Else                        
Begin     
Set @GOD_PKID=(Select isnull(max(GOD_PKID)+1,1) from GRACe_OverallBranchRating_Details)     
if(@GOD_FormName = 'BRR')    
 Begin     
 Insert Into GRACe_OverallBranchRating_Details(GOD_PKID,GOD_YearID,GOD_CustID,GOD_BranchID,GOD_BRRCoreProcessRatingID,GOD_BRRCoreProcessScore,
 GOD_BRRSupportProcessRatingID,GOD_BRRSupportProcessScore,GOD_BRRNetRatingID,GOD_BRRNetScore,GOD_CrBy,GOD_CrOn,GOD_IPAddress,GOD_CompID)                   
Values (@GOD_PKID,@GOD_YearID,@GOD_CustID,@GOD_BranchID,@GOD_BRRCoreProcessRatingID,@GOD_BRRCoreProcessScore,
@GOD_BRRSupportProcessRatingID,@GOD_BRRSupportProcessScore,@GOD_BRRNetRatingID,@GOD_BRRNetScore,@GOD_CrBy,GetDate(),@GOD_IPAddress,@GOD_CompID)     
 End    
if(@GOD_FormName = 'BA')    
 Begin     
 Insert Into GRACe_OverallBranchRating_Details(GOD_PKID,GOD_YearID,GOD_CustID,GOD_BranchID,GOD_BACoreProcessRatingID,GOD_BACoreProcessScore,
 GOD_BASupportProcessRatingID,GOD_BASupportProcessScore,GOD_BANetRatingID,GOD_BANetScore,GOD_CrBy,GOD_CrOn,GOD_IPAddress,GOD_CompID)                   
Values (@GOD_PKID,@GOD_YearID,@GOD_CustID,@GOD_BranchID,@GOD_BACoreProcessRatingID,@GOD_BACoreProcessScore,
@GOD_BASupportProcessRatingID,@GOD_BASupportProcessScore,@GOD_BANetRatingID,@GOD_BANetScore,@GOD_CrBy,GetDate(),@GOD_IPAddress,@GOD_CompID)     
 End    
 if(@GOD_FormName = 'BCM')    
 Begin     
 Insert Into GRACe_OverallBranchRating_Details(GOD_PKID,GOD_YearID,GOD_CustID,GOD_BranchID,GOD_BCMCoreProcessRatingID,GOD_BCMCoreProcessScore,
 GOD_BCMSupportProcessRatingID,GOD_BCMSupportProcessScore,GOD_BCMNetRatingID,GOD_BCMNetScore,GOD_CrBy,GOD_CrOn,GOD_IPAddress,GOD_CompID)                   
Values (@GOD_PKID,@GOD_YearID,@GOD_CustID,@GOD_BranchID,@GOD_BCMCoreProcessRatingID,@GOD_BCMCoreProcessScore,
@GOD_BCMSupportProcessRatingID,@GOD_BCMSupportProcessScore,@GOD_BCMNetRatingID,@GOD_BCMNetScore,@GOD_CrBy,GetDate(),@GOD_IPAddress,@GOD_CompID)     
 End  
 Set @iUpdateOrSave=3                           
Set @iOper=@GOD_PKID                        
End 

/

CREATE Procedure [dbo].[spGRACe_OverallFunctionRating_Details]      
(         
@GOD_PKID int,    
@GOD_YearID int,  
@GOD_CustID int,     
@GOD_FunID int,    
@GOD_SubFunID int,    
@GOD_RANetScore Float(8),     
@GOD_RANetRatingID int,    
@GOD_IANetScore Float(8),     
@GOD_IAMNetRatingID int,   
@GOD_FormName Varchar(50),    
@GOD_CrBy int,    
@GOD_IPAddress Varchar(25),    
@GOD_CompID int,    
@iUpdateOrSave int Output,                      
@iOper int Output     
)    
  
As    
  
If exists(Select GOD_PKID from GRACe_OverallFunctionRating_Details where GOD_CustID=@GOD_CustID And GOD_FunID=@GOD_FunID And GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID)     
Begin         
	Set @GOD_PKID=(Select GOD_PKID from GRACe_OverallFunctionRating_Details where GOD_CustID=@GOD_CustID And GOD_FunID=@GOD_FunID And GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID)    
	if(@GOD_FormName = 'RA')      
	Begin           
		Update GRACe_OverallFunctionRating_Details Set GOD_RANetScore=@GOD_RANetScore,GOD_RANetRatingID=@GOD_RANetRatingID,    
		GOD_IPAddress=@GOD_IPAddress,GOD_CrBy=@GOD_CrBy,GOD_CrOn=GetDate()    
		Where GOD_CustID=@GOD_CustID And GOD_FunID=@GOD_FunID and GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID    
 End     
     
	if(@GOD_FormName = 'IA')      
	Begin         
		Update GRACe_OverallFunctionRating_Details Set GOD_IANetScore=@GOD_IANetScore,GOD_IAMNetRatingID=@GOD_IAMNetRatingID,     
		GOD_IPAddress=@GOD_IPAddress,GOD_CrBy=@GOD_CrBy,GOD_CrOn=GetDate()    
		Where GOD_CustID=@GOD_CustID And GOD_FunID=@GOD_FunID and GOD_YearID=@GOD_YearID And GOD_CompID=@GOD_CompID    
	End     
Set @iUpdateOrSave=2                            
Set @iOper=@GOD_PKID                            
End 
                          
Else
                        
Begin     
  
Set @GOD_PKID=(Select isnull(max(GOD_PKID)+1,1) from GRACe_OverallFunctionRating_Details)        
if(@GOD_FormName = 'RA')     
 Begin      
		Insert Into GRACe_OverallFunctionRating_Details(GOD_PKID,GOD_YearID,GOD_CustID,GOD_FunID,GOD_SubFunID,GOD_RANetScore,GOD_RANetRatingID,
		GOD_CrBy,GOD_CrOn,GOD_IPAddress,GOD_CompID)                       
		Values (@GOD_PKID,@GOD_YearID,@GOD_CustID,@GOD_FunID,@GOD_SubFunID,@GOD_RANetScore,@GOD_RANetRatingID,
		@GOD_CrBy,GetDate(),@GOD_IPAddress,@GOD_CompID)           
 End      
 if(@GOD_FormName = 'IA')    
 Begin     
		Insert Into GRACe_OverallFunctionRating_Details(GOD_PKID,GOD_YearID,GOD_CustID,GOD_FunID,GOD_SubFunID,GOD_IANetScore,GOD_IAMNetRatingID,
		GOD_CrBy,GOD_CrOn,GOD_IPAddress,GOD_CompID)                       
		Values (@GOD_PKID,@GOD_YearID,@GOD_CustID,@GOD_FunID,@GOD_SubFunID,@GOD_IANetScore,@GOD_IAMNetRatingID,
		@GOD_CrBy,GetDate(),@GOD_IPAddress,@GOD_CompID)         
  
 End      
Set @iUpdateOrSave=3                           
Set @iOper=@GOD_PKID                           
End  

/

Create procedure [dbo].[spHoliday_master]         
(            
@Hol_YearId integer,    
@Hol_Date datetime,    
@Hol_Remarks varchar(500),    
@Hol_Createdby integer,    
@Hol_UpdatedBy integer,    
@Hol_Delflag varchar(3),   
@Hol_Status varchar(3),    
@Hol_IPAddress varchar(25),    
@Hol_CompID integer,    
@iUpdateOrSave int Output            
)           
as                   
  if exists(select Hol_Date from Holiday_master where Hol_Date=@Hol_Date And Hol_YearId=@Hol_YearId and Hol_CompID=@Hol_CompID)              
  begin        
  Set @Hol_Status='U'            
   update holiday_master set Hol_Remarks=@Hol_Remarks,Hol_UpdatedBy=@Hol_UpdatedBy,Hol_UpdatedOn=GetDate(),        
 Hol_CompID=@Hol_CompID ,Hol_IPAddress=@Hol_IPAddress,Hol_Status=@Hol_Status,Hol_Delflag=@Hol_Delflag         
  where Hol_Date=@Hol_Date and Hol_CompID=@Hol_CompID and Hol_YearId=@Hol_YearId             
   set @iUpdateOrSave=2                  
       end              
 else               
 begin              
  insert into holiday_master (Hol_YearId,Hol_Date,Hol_Remarks,        
  Hol_CompID,Hol_IPAddress,Hol_Status,Hol_Delflag,Hol_Createdby,Hol_CreatedOn)           
  values              
  (@Hol_YearId,@Hol_Date,@Hol_Remarks,        
  @Hol_CompID,@Hol_IPAddress,@Hol_Status,@Hol_Delflag ,@Hol_Createdby,GetDate())              
    set @iUpdateOrSave=3                
  end    

/

Create Procedure [dbo].[spLOE_AdditionalFees]
(                  
@LAF_ID int,   
@LAF_LOEID int, 
@LAF_OtherExpensesID int,
@LAF_Charges int,
@LAF_CODE varchar(5),
@LAF_OtherExpensesName varchar(100),
@LAF_Delflag Varchar(1),
@LAF_STATUS Varchar(2),
@LAF_CrBy int,
@LAF_UpdatedBy int,     
@LAF_IPAddress Varchar(25),   
@LAF_CompID int,    
@iUpdateOrSave int Output,                  
@iOper int Output            
)         
As                                           
Begin                    
set @LAF_ID=(select IsNull(Max(LAF_ID)+1,1) from LOE_AdditionalFees)                    
   Insert Into LOE_AdditionalFees(LAF_ID,LAF_LOEID,LAF_OtherExpensesID,LAF_Charges,LAF_CODE,LAF_OtherExpensesName,LAF_Delflag,LAF_STATUS,LAF_CrBy,LAF_CrOn,
   LAF_IPAddress,LAF_CompID)                 
   Values(@LAF_ID,@LAF_LOEID,@LAF_OtherExpensesID,@LAF_Charges,@LAF_CODE,@LAF_OtherExpensesName,@LAF_Delflag,@LAF_STATUS,@LAF_CrBy,Getdate(),
   @LAF_IPAddress,@LAF_CompID)          
   set @iUpdateOrSave=3                   
   set @iOper = @LAF_ID                     
End 

/

Create Procedure [dbo].[spLOE_ReAmbersment]
(                  
@LAR_ID int,     
@LAR_LOEID int,
@LAR_ReambersmentID int,
@LAR_Charges int,
@LAR_ReambName Varchar(100),
@LAR_Delflag Varchar(1),
@LAR_STATUS Varchar(2),
@LAR_CrBy int,  
@LAR_UpdatedBy int,     
@LAR_IPAddress Varchar(25),    
@LAR_CompID int,    
@iUpdateOrSave int Output,                  
@iOper int Output            
)         
As                                           
Begin                    
set @LAR_ID=(select IsNull(Max(LAR_ID)+1,1) from LOE_ReAmbersment)                    
   Insert Into LOE_ReAmbersment(LAR_ID,LAR_LOEID,LAR_ReambersmentID,LAR_Charges,LAR_ReambName,LAR_Delflag,LAR_STATUS,LAR_CrBy,LAR_CrOn,LAR_IPAddress,LAR_CompID)                 
   Values(@LAR_ID,@LAR_LOEID,@LAR_ReambersmentID,@LAR_Charges,@LAR_ReambName,@LAR_Delflag,@LAR_STATUS,@LAR_CrBy,Getdate(),@LAR_IPAddress,@LAR_CompID)          
   set @iUpdateOrSave=3                   
   set @iOper = @LAR_ID                     
End 

/

CREATE Procedure [dbo].[spLOE_Resources]
(                  
@LOER_ID int,      
@LOER_LOEID int, 
@LOER_CategoryID int,   
@LOER_NoResources smallint,
@LOER_ChargesPerDay int,
@LOER_CategoryName varchar(100),
@LOER_NoDays int, 
@LOER_ResTotal int, 
@LOER_Delflag Varchar(1),
@LOER_STATUS Varchar(2),
@LOER_CrBy int,  
@LOER_UpdatedBy int,     
@LOER_IPAddress Varchar(25),    
@LOER_CompID int,    
@iUpdateOrSave int Output,                  
@iOper int Output            
)         
As                                           
Begin                    
set @LOER_ID=(select IsNull(Max(LOER_ID)+1,1) from LOE_Resources)                    
   Insert Into LOE_Resources(LOER_ID,LOER_LOEID,LOER_CategoryID,LOER_NoResources,LOER_ChargesPerDay,LOER_CategoryName,LOER_NoDays,LOER_ResTotal,LOER_Delflag,LOER_STATUS,LOER_CrBy,LOER_CrOn,
   LOER_IPAddress,LOER_CompID)                 
   Values(@LOER_ID,@LOER_LOEID,@LOER_CategoryID,@LOER_NoResources,@LOER_ChargesPerDay,@LOER_CategoryName,@LOER_NoDays,@LOER_ResTotal,@LOER_Delflag,@LOER_STATUS,@LOER_CrBy,Getdate(),
   @LOER_IPAddress,@LOER_CompID)          
   set @iUpdateOrSave=3                   
   set @iOper = @LOER_ID                     
End 

/

Create Procedure [dbo].[spLOE_Template]      
(                    
@LOET_Id int,        
@LOET_LOEID int,      
@LOET_CustomerId int,      
@LOET_FunctionId int,  
@LOET_ScopeOfWork Varchar(500),  
@LOET_Frequency Varchar(50),      
@LOET_Deliverable Varchar(8000),     
@LOET_ProfessionalFees Varchar(500),  
@LOET_StdsInternalAudit Varchar(8000),     
@LOET_Responsibilities Varchar(8000),  
@LOET_Infrastructure Varchar(8000),      
@LOET_NDA Varchar(8000),    
@LOET_General Varchar(8000),  
@LOET_Delflag Varchar(1),  
@LOET_STATUS Varchar(2),
@LOE_AttachID int,   
@LOET_CrBy int,      
@LOET_UpdatedBy int,     
@LOET_IPAddress Varchar(25),      
@LOET_CompID int,           
@iUpdateOrSave int Output,                    
@iOper int Output              
)           
As                                             
Begin                      
set @LOET_Id=(select IsNull(Max(LOET_Id)+1,1) from LOE_Template)                      
   Insert Into LOE_Template(LOET_Id,LOET_LOEID,LOET_CustomerId,LOET_FunctionId,LOET_ScopeOfWork,LOET_Frequency,LOET_Deliverable,LOET_ProfessionalFees,LOET_StdsInternalAudit,  
   LOET_Responsibilities,LOET_Infrastructure,LOET_NDA,LOET_General,LOET_Delflag,LOET_STATUS,LOE_AttachID,LOET_CrOn,LOET_CrBy,LOET_IPAddress,LOET_CompID)                    
   Values(@LOET_Id,@LOET_LOEID,@LOET_CustomerId,@LOET_FunctionId,@LOET_ScopeOfWork,@LOET_Frequency,@LOET_Deliverable,@LOET_ProfessionalFees,@LOET_StdsInternalAudit,  
   @LOET_Responsibilities,@LOET_Infrastructure,@LOET_NDA,@LOET_General,@LOET_Delflag,@LOET_STATUS,@LOE_AttachID,Getdate(),@LOET_CrBy,@LOET_IPAddress,@LOET_CompID)                      
   set @iUpdateOrSave=3                     
   set @iOper = @LOET_Id                       
End 

/

CREATE procedure [dbo].[spMST_Checks_Master]            
(                 
@CHK_ID int,     
@CHK_ControlID int,    
@CHK_CheckName varchar(5000),    
@CHK_CheckDesc varchar(8000),     
@CHK_CatId int,    
@CHK_IsKey int,    
@CHK_CrBy int,              
@CHK_UpdatedBy int,              
@CHK_IPAddress varchar(25),             
@CHK_CompID int,                 
@iUpdateOrSave int Output,                  
@iOper int Output                 
)                        
As                         
  if @CHK_ID>0                    
Begin            
  Declare @CHK_DelFlag Varchar(2)             
  Declare @CHK_Status Varchar(2)        
  set @CHK_Status ='U'             
  set @CHK_DelFlag='A'              
  Update MST_Checks_Master set CHK_ControlID=@CHK_ControlID,CHK_CheckName=@CHK_CheckName,CHK_CheckDesc=@CHK_CheckDesc,CHK_CatId=@CHK_CatId,    
  CHK_IsKey=@CHK_IsKey,CHK_UpdatedOn=GetDate(),CHK_UpdatedBy=@CHK_UpdatedBy,CHK_IPAddress=@CHK_IPAddress,CHK_Status=@CHK_Status             
  where CHK_ID=@CHK_ID and CHK_CompID = @CHK_CompID                  
  set @iUpdateOrSave=2                 
  set @iOper = @CHK_ID                      
 End                    
Else                     
 Begin                    
  set @CHK_ID=(select isnull(max(CHK_ID)+1,1) from MST_Checks_Master)      
  insert into MST_Checks_Master (CHK_ID,CHK_ControlID,CHK_CheckName,CHK_CheckDesc,CHK_CatId,CHK_IsKey,CHK_DelFlag,            
  CHK_Status,CHK_CrBy,CHK_CrOn,CHK_IPAddress,CHK_CompID)values                    
  (@CHK_ID,@CHK_ControlID,@CHK_CheckName,@CHK_CheckDesc,@CHK_CatId,@CHK_IsKey,'A',    
  'C',@CHK_CrBy,GetDate(),@CHK_IPAddress,@CHK_CompID)                    
  set @iUpdateOrSave=3                   
  set @iOper = @CHK_ID                    
End 

/

CREATE procedure [dbo].[spMST_CONTROL_Library]           
(                
@MCL_PKID int,   
@MCL_ControlName varchar(5000),  
@MCL_ControlDesc varchar(8000),   
@MCL_Code varchar(10),  
@MCL_IsKey int,  
@MCL_CrBy int,            
@MCL_UpdatedBy int,            
@MCL_IPAddress varchar(25),           
@MCL_CompID int,               
@iUpdateOrSave int Output,                
@iOper int Output               
)                      
As                       
  if (@MCL_PKID>0)                  
Begin          
  Declare @MCL_DelFlag Varchar(2)           
  Declare @MCL_Status Varchar(2)      
  set @MCL_Status ='U'           
  set @MCL_DelFlag='A'            
  Update MST_CONTROL_Library set MCL_ControlName=@MCL_ControlName,MCL_ControlDesc=@MCL_ControlDesc,MCL_Code=@MCL_Code,  
  MCL_IsKey=@MCL_IsKey,MCL_UpdatedOn=GetDate(),MCL_UpdatedBy=@MCL_UpdatedBy,MCL_IPAddress=@MCL_IPAddress,MCL_Status=@MCL_Status           
  where MCL_PKID=@MCL_PKID and MCL_CompID = @MCL_CompID                
  set @iUpdateOrSave=2               
  set @iOper = @MCL_PKID                    
 End                  
Else                   
 Begin                  
  set @MCL_PKID=(select isnull(max(MCL_PKID)+1,1) from MST_CONTROL_Library)    
  insert into MST_CONTROL_Library (MCL_PKID,MCL_ControlName,MCL_ControlDesc,MCL_Code,MCL_IsKey,MCL_DelFlag,          
  MCL_Status,MCL_CrBy,MCL_CrOn,MCL_IPAddress,MCL_CompID)values                  
  (@MCL_PKID,@MCL_ControlName,@MCL_ControlDesc,@MCL_Code,@MCL_IsKey,'W',  
  'C',@MCL_CrBy,GetDate(),@MCL_IPAddress,@MCL_CompID)                  
  set @iUpdateOrSave=3                 
  set @iOper = @MCL_PKID                  
End 

/

CREATE procedure [dbo].[spMST_Entity_Master]                    
(                      
@ENT_ID int,               
@ENT_CODE varchar(20),                  
@ENT_ENTITYNAME varchar(5000),               
@ENT_Desc  varchar(8000),               
@ENT_CRBY int,                  
@ENT_UPDATEDBY int,                  
@ENT_IPAddress varchar(25),                 
@ENT_COMPID int,        
@Ent_FunOwnerID int,    
@Ent_FunManagerID  int,  
@Ent_FunSPOCID  int,                               
@iUpdateOrSave int Output,                      
@iOper int Output                        
)                            
As                             
  if @ENT_ID>0                        
Begin                
  Declare @ENT_DelFlag Varchar(2)                 
  Declare @ENT_Status Varchar(2)            
  set @ENT_Status ='U'                 
  set @ENT_DelFlag='A'                  
  Update mst_entity_master set ent_code=@ent_code,ent_entityName=@ent_entityName,ENT_UPDATEDON=GetDate(),          
  ENT_UPDATEDBY=@ENT_UPDATEDBY,ENT_Desc=@ENT_Desc,ENT_IPAddress=@ENT_IPAddress,ENT_Status=@ENT_Status,Ent_FunOwnerID=@Ent_FunOwnerID,  
  Ent_FunManagerID=@Ent_FunManagerID,Ent_FunSPOCID=@Ent_FunSPOCID                   
  where ent_ID=@ent_ID and ent_Compid = @ent_Compid                      
  set @iUpdateOrSave=2                     
  set @iOper = @ent_ID                          
 End                        
Else                         
 Begin                        
  set @ent_ID=(select isnull(max(ent_ID)+1,1) from mst_entity_master)          
  insert into mst_entity_master (ENT_ID,ENT_CODE,ENT_ENTITYNAME,Ent_Branch,ENT_RRPSTATUS,                
  ENT_DELFLG,ENT_CRON,ENT_CRBY,ENT_STATUS,ENT_IPAddress,ENT_COMPID,ENT_Desc,Ent_FunOwnerID,Ent_FunManagerID,Ent_FunSPOCID)values                        
  (@ENT_ID,@ENT_CODE,@ENT_ENTITYNAME,'F','N','W',GetDate(),@ENT_CRBY,'C',@ENT_IPAddress,@ENT_COMPID,@ENT_Desc,@Ent_FunOwnerID,@Ent_FunManagerID,@Ent_FunSPOCID)                        
  set @iUpdateOrSave=3                       
  set @iOper = @ent_ID                        
End 

/

CREATE procedure [dbo].[spMST_Entity_UsrMap](  
@MEUM_PKID int,  
@MEUM_EntityID int,  
@MEUM_UsrID varchar(8000),  
@MEUM_CompID int  
)  
As      
Begin                   
  set @MEUM_PKID=(select isnull(max(MEUM_PKID)+1,1) from MST_Entity_UsrMap)    
  insert into MST_Entity_UsrMap (MEUM_PKID,MEUM_EntityID,MEUM_UsrID,MEUM_CompID)  
  values (@MEUM_PKID,@MEUM_EntityID,@MEUM_UsrID,@MEUM_CompID)                                   
End

/

CREATE procedure [dbo].[spMST_MAPPING_MASTER]        
(              
 @MMM_ID int,  
 @MMM_YearID int,  
 @MMM_CustID int,  
 @MMM_FunID int,  
 @MMM_SEMID int,  
 @MMM_PMID int,  
 @MMM_SPMID int,  
 @MMM_SPMKey int,  
 @MMM_RISKID int,  
 @MMM_Risk Varchar(5000),  
 @MMM_RiskKey int,  
 @MMM_CONTROLID int,  
 @MMM_Control Varchar(5000),  
 @MMM_ControlKey  int,  
 @MMM_ChecksID int,  
 @MMM_CHECKS varchar(5000),  
 @MMM_ChecksKey  int,  
 @MMM_InherentRiskID int,  
 @MMM_InherentRisk Varchar(100),  
 @MMM_Module Varchar(5),  
 @MMM_CRBY int,  
 @MMM_UpdatedBY int,  
 @MMM_IPaddress Varchar(25),  
 @MMM_CompID Int,             
 @iUpdateOrSave int Output,                
 @iOper int Output                  
)              
as                     
  if exists(select MMM_ID from MST_MAPPING_MASTER where MMM_ID=@MMM_ID and MMM_CompID = @MMM_CompID)                
 begin    
Declare @MMM_DELFLAG Varchar(2)   
Declare @MMM_Status Varchar(2)            
set @MMM_Status='U'              
 update MST_MAPPING_MASTER set MMM_YearID=@MMM_YearID,MMM_CustID=@MMM_CustID,MMM_FunID=@MMM_FunID,MMM_SEMID=@MMM_SEMID,MMM_PMID=@MMM_PMID,MMM_SPMID=@MMM_SPMID, 
MMM_RISKID=@MMM_RISKID,MMM_Risk=@MMM_Risk,MMM_CONTROLID=@MMM_CONTROLID,MMM_Control=@MMM_Control,MMM_ChecksID=@MMM_ChecksID,MMM_CHECKS=@MMM_CHECKS,  
MMM_InherentRiskID=@MMM_InherentRiskID,MMM_InherentRisk=@MMM_InherentRisk,MMM_UpdatedBY=@MMM_UpdatedBY,  
MMM_SPMKey=@MMM_SPMKey,MMM_RiskKey=@MMM_RiskKey,MMM_ControlKey=@MMM_ControlKey,MMM_ChecksKey=@MMM_ChecksKey,  
MMM_UpdatedON=GetDate(),MMM_IPaddress=@MMM_IPaddress         
where MMM_ID=@MMM_ID and MMM_CompID = @MMM_CompID and MMM_Module= @MMM_Module              
  set @iUpdateOrSave=2                    
  set @iOper =@MMM_ID              
 end                
else                 
 begin                
 set @MMM_ID=(select isnull(max(MMM_ID)+1,1) from MST_MAPPING_MASTER)                
 insert into MST_MAPPING_MASTER (MMM_ID,MMM_YearID,MMM_CustID,MMM_FunID,MMM_SEMID,MMM_PMID,MMM_SPMID,MMM_RISKID,MMM_Risk,MMM_CONTROLID,MMM_Control,  
MMM_ChecksID,MMM_CHECKS,MMM_InherentRiskID,MMM_InherentRisk,MMM_DELFLAG,MMM_Status,MMM_Module,MMM_CRBY,MMM_CRON,MMM_IPaddress,MMM_CompID,  
MMM_SPMKey,MMM_RiskKey,MMM_ControlKey,MMM_ChecksKey)              
 values                
 (@MMM_ID,@MMM_YearID,@MMM_CustID,@MMM_FunID,@MMM_SEMID,@MMM_PMID,@MMM_SPMID,@MMM_RISKID,@MMM_Risk,@MMM_CONTROLID,@MMM_Control,  
@MMM_ChecksID,@MMM_CHECKS,@MMM_InherentRiskID,@MMM_InherentRisk,'W','C',@MMM_Module,@MMM_CRBY,GetDate(),@MMM_IPaddress,@MMM_CompID,  
@MMM_SPMKey,@MMM_RiskKey,@MMM_ControlKey,@MMM_ChecksKey)                
 set @iUpdateOrSave=3                    
 set @iOper =@MMM_ID                
 end

/

CREATE procedure [dbo].[spMST_PROCESS_MASTER]          
(              
@PM_ID int,        
@PM_ENT_ID int,               
@PM_SEM_ID int,              
@PM_CODE varchar(20),              
@PM_NAME varchar(500),              
@PM_CRBY int,              
@PM_UPDATEDBY int,              
@PM_Desc varchar(8000),              
@PM_COMPID int,               
@PM_IPAddress varchar(25),              
@iUpdateOrSave int Output,                
@iOper int Output                  
)                
As                     
  if @PM_ID>0  
Begin          
Declare @PM_DelFLG varchar(1)             
Declare @PM_STATUS varchar(2)           
set @PM_STATUS ='U'     
         update MST_PROCESS_MASTER  set PM_CODE=@PM_CODE,PM_NAME=@PM_NAME,PM_STATUS=@PM_STATUS,        
  PM_Desc=@PM_Desc,PM_UPDATEDBY=@PM_UPDATEDBY,PM_UPDATEDON=GetDate(),PM_IPAddress=@PM_IPAddress              
  where PM_ID=@PM_ID  and PM_COMPID = @PM_COMPID and PM_SEM_ID=@PM_SEM_ID              
    set @iUpdateOrSave=2               
    set @iOper = @PM_ID                 
End                       
   Else                 
Begin                      
 set @PM_ID=(select isnull(max(PM_ID)+1,1) from MST_PROCESS_MASTER)                
  insert into MST_PROCESS_MASTER(PM_ID,PM_ENT_ID,PM_SEM_ID,PM_CODE,PM_NAME,PM_CRBY,              
  PM_CRON,PM_Desc,PM_COMPID,PM_DelFLG,PM_STATUS,PM_IPAddress)                
values                
  (@PM_ID,@PM_ENT_ID,@PM_SEM_ID,@PM_CODE,@PM_NAME,@PM_CRBY,              
  GetDate(),@PM_Desc,@PM_COMPID,'W','C',@PM_IPAddress)                
   set @iUpdateOrSave=3                 
   set @iOper = @PM_ID                
End 

/

CREATE procedure [dbo].[spMST_RISK_Library]                 
(                    
@MRL_PKID int,       
@MRL_RiskName varchar(5000),      
@MRL_RiskDesc varchar(8000),       
@MRL_Code varchar(10),      
@MRL_IsKey int,      
@MRL_RiskTypeID int,       
@MRL_InherentRiskID int,      
@MRL_Module varchar(10),      
@MRL_CrBy int,                
@MRL_UpdatedBy int,                
@MRL_IPAddress varchar(25),               
@MRL_CompID int,                   
@iUpdateOrSave int Output,                    
@iOper int Output                   
)                          
As                           
  if @MRL_PKID>0  
Begin              
  Declare @MRL_DelFlag Varchar(1)               
  Declare @MRL_Status Varchar(2)          
  set @MRL_Status ='U'               
  set @MRL_DelFlag='A'                
  Update MST_RISK_Library set MRL_RiskName=@MRL_RiskName,MRL_RiskDesc=@MRL_RiskDesc,MRL_Code=@MRL_Code,      
  MRL_IsKey=@MRL_IsKey,MRL_RiskTypeID=@MRL_RiskTypeID,MRL_InherentRiskID=@MRL_InherentRiskID,      
  MRL_UpdatedOn=GetDate(),MRL_UpdatedBy=@MRL_UpdatedBy,MRL_IPAddress=@MRL_IPAddress,MRL_Status=@MRL_Status,MRL_Module=@MRL_Module            
  where MRL_PKID=@MRL_PKID and MRL_CompID = @MRL_CompID                    
  set @iUpdateOrSave=2                   
  set @iOper = @MRL_PKID                        
 End                      
Else                       
 Begin                      
  set @MRL_PKID=(select isnull(max(MRL_PKID)+1,1) from MST_RISK_Library)        
  insert into MST_RISK_Library (MRL_PKID,MRL_RiskName,MRL_RiskDesc,MRL_Code,MRL_IsKey,MRL_RiskTypeID,MRL_InherentRiskID,MRL_DelFlag,              
  MRL_Status,MRL_CrBy,MRL_CrOn,MRL_IPAddress,MRL_CompID,MRL_Module)values                      
  (@MRL_PKID,@MRL_RiskName,@MRL_RiskDesc,@MRL_Code,@MRL_IsKey,@MRL_RiskTypeID,@MRL_InherentRiskID,'W',      
  'C',@MRL_CrBy,GetDate(),@MRL_IPAddress,@MRL_CompID,@MRL_Module)                      
  set @iUpdateOrSave=3                     
  set @iOper = @MRL_PKID                      
End     

/

CREATE procedure [dbo].[spMST_SUBENTITY_MASTER]             
(              
@SEM_ID int,              
@SEM_ENT_ID int,              
@SEM_CODE varchar(20),              
@SEM_NAME varchar(500),              
@SEM_CRBY int,               
@SEM_UPDATEDBY int,            
@SEM_DESC varchar(8000),              
@SEM_COMPID int,              
@SEM_IPAddress varchar(25),              
@iUpdateOrSave int Output,              
@iOper int Output                
)              
As                    
if  @SEM_ID>0  
Begin      
Declare @SEM_DelFLG varchar(1)              
Declare @SEM_STATUS varchar(2)                      
set @SEM_STATUS = 'U'      
set @SEM_DelFLG='A'               
  update MST_SUBENTITY_MASTER  set SEM_CODE=@SEM_CODE,              
SEM_NAME=@SEM_NAME,SEM_UPDATEDON=GetDate(),SEM_UPDATEDBY=@SEM_UPDATEDBY,              
SEM_DESC=@SEM_DESC,SEM_COMPID=@SEM_COMPID,              
SEM_STATUS=@SEM_STATUS,SEM_IPAddress=@SEM_IPAddress              
where SEM_ID=@SEM_ID  and SEM_COMPID = @SEM_COMPID and SEM_ENT_ID=@SEM_ENT_ID              
    set @iUpdateOrSave=2             
    set @iOper = @SEM_ID              
End              
  Else                
Begin                
   set @SEM_ID=(select isnull(max(SEM_ID)+1,1) from MST_SUBENTITY_MASTER )                
  insert into MST_SUBENTITY_MASTER(SEM_ID,SEM_ENT_ID,SEM_CODE,SEM_NAME,SEM_CRON,              
SEM_CRBY,SEM_DESC,SEM_COMPID,SEM_DelFLG,SEM_STATUS,              
SEM_IPAddress)              
  values                
  (@SEM_ID,@SEM_ENT_ID,@SEM_CODE,@SEM_NAME,GetDate(),              
@SEM_CRBY,@SEM_DESC,@SEM_COMPID,'W','C',              
@SEM_IPAddress)                
   set @iUpdateOrSave=3               
   set @iOper = @SEM_ID                 
End   

/

CREATE procedure [dbo].[spMST_SUBPROCESS_MASTER]             
(            
@SPM_ID int,       
@SPM_ENT_ID int,        
@SPM_SEM_ID int,             
@SPM_PM_ID int,            
@SPM_CODE varchar(20),            
@SPM_NAME varchar(900),             
@SPM_CRBY int,            
@SPM_UPDATEDBY int,               
@SPM_Desc varchar(8000),        
@SPM_IsKey int,          
@SPM_COMPID int,          
@SPM_IPAddress varchar(25),            
@iUpdateOrSave int Output,            
@iOper int Output                
)            
As                   
  if @SPM_ID>0  
Begin           
Declare @SPM_FLAG varchar(1)           
Declare @SPM_STATUS varchar(2)          
set @SPM_STATUS = 'U'               
    update MST_SUBPROCESS_MASTER  set SPM_CODE=@SPM_CODE,SPM_NAME=@SPM_NAME,SPM_UPDATEDBY=@SPM_UPDATEDBY,SPM_UPDATEDON=GetDate(),           
  SPM_Desc=@SPM_Desc,SPM_IPAddress=@SPM_IPAddress,SPM_IsKey=@SPM_IsKey,SPM_STATUS=@SPM_STATUS       
  where SPM_ID=@SPM_ID  and SPM_COMPID = @SPM_COMPID and SPM_PM_ID=@SPM_PM_ID            
  set @iUpdateOrSave=2           
    set @iOper = @SPM_ID               
End              
        Else               
Begin                     
 set @SPM_ID=(select isnull(max(SPM_ID)+1,1) from MST_SUBPROCESS_MASTER )              
  insert into MST_SUBPROCESS_MASTER (SPM_ID,SPM_ENT_ID,SPM_SEM_ID,SPM_PM_ID,SPM_CODE,SPM_NAME,SPM_CRBY,            
  SPM_CRON,SPM_Desc,SPM_IsKey,SPM_COMPID,SPM_DelFLG,SPM_STATUS,SPM_IPAddress)            
values              
  (@SPM_ID,@SPM_ENT_ID,@SPM_SEM_ID,@SPM_PM_ID,@SPM_CODE,@SPM_NAME,@SPM_CRBY,            
GetDate(),@SPM_Desc,@SPM_IsKey,@SPM_COMPID,'W','C',@SPM_IPAddress)              
   set @iUpdateOrSave=3             
   set @iOper = @SPM_ID             
End 

/

CREATE Procedure [dbo].[spOrgStructure]                     
(                  
@Org_Node int,                        
@Org_Code varchar(10),     
@Org_SalesUnitCode varchar(100),   
@Org_BranchCode varchar(100),                      
@Org_Name varchar(1000),              
@Org_Parent int,            
@Org_Delflag varchar(1),            
@Org_Note varchar(255),                    
@Org_AppStrength smallint,             
@Org_CreatedBy int,                 
@Org_UpdatedBy int,                        
@Org_Status varchar(1),                    
@Org_LevelCode varchar(10),                      
@Org_IPAddress varchar(25),                  
@Org_CompID int,                     
@iUpdateOrSave int Output,                  
@iOper int Output                     
)                        
 as                           
  if exists(select Org_Node from sad_org_structure where Org_Node=@Org_Node and Org_CompID = @Org_CompID)                      
 begin                    
 set @Org_Status ='U'                
  update sad_org_structure set Org_Name=@Org_Name,Org_Code=@Org_Code,Org_AppStrength=@Org_AppStrength,Org_Note=@Org_Note,                    
Org_Status=@Org_Status,Org_UpdatedBy=@Org_UpdatedBy,Org_UpdatedOn=GetDate(),Org_IPAddress=@Org_IPAddress,  
Org_SalesUnitCode=@Org_SalesUnitCode,Org_BranchCode=@Org_BranchCode                      
where Org_Node=@Org_Node  and Org_CompID = @Org_CompID                    
set @iUpdateOrSave=2                      
  set @iOper = @Org_Node                            
 end                      
else                       
 begin                      
 set @Org_Node=(select isnull(max(Org_Node)+1,1) from sad_org_structure where Org_CompID=@Org_CompID)                      
  insert into sad_org_structure (Org_Node,Org_Code,Org_Name,Org_Parent,Org_Delflag,Org_Note,Org_AppStrength,                    
Org_CreatedBy,Org_CreatedOn,Org_Status,Org_LevelCode,Org_IPAddress,Org_CompID,Org_SalesUnitCode,Org_BranchCode)                      
  values                      
  (@Org_Node,@Org_Code,@Org_Name,@Org_Parent,@Org_Delflag,@Org_Note,@Org_AppStrength,                    
@Org_CreatedBy,GetDate(),@Org_Status,@Org_LevelCode,@Org_IPAddress,@Org_CompID,@Org_SalesUnitCode,@Org_BranchCode)                      
set @iUpdateOrSave=3                   
   set @iOper = @Org_Node                    
 end   
 
/

CREATE Procedure [dbo].[spPasswordManagement]      
(          
@MPS_MinimumChar int,    
@MPS_MaximumChar int,    
@MPS_RecoveryAttempts int,    
@MPS_UnsuccessfulAttempts int,    
@MPS_PasswordExpiryDays int,    
@MPS_NotLoginDays int,    
@MPS_Password_Contains varchar(10),       
@MPS_PasswordExpiryAlertDays int,    
@MPS_UpdatedBy int,    
@MPS_Operation varchar(1),     
@MPS_IPAddress varchar(50),     
@MPS_CompID varchar(100),     
@iOper Int Output       
)        
 As           
  If exists(Select MPS_pkID From MST_Password_Setting Where MPS_CompID = @MPS_CompID)      
 Begin       
  Update MST_Password_Setting set MPS_MinimumChar=@MPS_MinimumChar,MPS_MaximumChar=@MPS_MaximumChar,MPS_RecoveryAttempts=@MPS_RecoveryAttempts,  
  MPS_UnsuccessfulAttempts=@MPS_UnsuccessfulAttempts,MPS_PasswordExpiryDays=@MPS_PasswordExpiryDays,MPS_NotLoginDays=@MPS_NotLoginDays,  
  MPS_Password_Contains=@MPS_Password_Contains,MPS_PasswordExpiryAlertDays=@MPS_PasswordExpiryAlertDays,MPS_IPAddress=@MPS_IPAddress    
  Where MPS_CompID = @MPS_CompID    
  Set @iOper=2       
End      
Else       
 Begin   
 Declare @MPS_pkID int    
 Set @MPS_pkID=(select isnull(max(MPS_pkID)+1,1) from MST_Password_Setting)      
  Insert into MST_Password_Setting (MPS_pkID,MPS_MinimumChar,MPS_MaximumChar,MPS_RecoveryAttempts,MPS_UnsuccessfulAttempts ,MPS_PasswordExpiryDays ,    
  MPS_NotLoginDays ,MPS_Password_Contains ,MPS_PasswordExpiryAlertDays,MPS_UpdatedBy,MPS_Operation,MPS_IPAddress,MPS_CompID)      
  values(@MPS_pkID,@MPS_MinimumChar,@MPS_MaximumChar,@MPS_RecoveryAttempts,@MPS_UnsuccessfulAttempts,@MPS_PasswordExpiryDays,    
  @MPS_NotLoginDays,@MPS_Password_Contains,@MPS_PasswordExpiryAlertDays,@MPS_UpdatedBy,@MPS_Operation,@MPS_IPAddress,@MPS_CompID)      
  set @iOper=3  
 End  
 
/

CREATE Procedure [dbo].[spQA_Assessment](                      
	@QA_PKID int,
	@QA_Code varchar(25) ,
	@QA_FinancialYear int,
	@QA_CUSTID int,
	@QA_FUNID int,
	@QA_StartDate datetime,
	@QA_EndDate datetime,
	@QA_AUDITORTEAM varchar(50) ,
	@QA_AUDITTITLE varchar(50) ,
	@QA_Delflag varchar(2) ,
	@QA_CrBy int,
	--@QA_CrOn datetime,
	@QA_UpdatedBy int,
	--@QA_UpdatedOn datetime,
	@QA_SavedBy int,
	--@QA_SavedOn datetime,
	@QA_AUDStatus varchar(25) ,
	@QA_WPStatus varchar(25) ,
	@QA_IPAddress varchar(25) ,
	@QA_CompID int ,           
 @iUpdateOrSave int Output,                                  
@iOper int Output                        
)                      
as                                         
if exists(select QA_PKID from QA_Assessment Where  QA_CUSTID=@QA_CUSTID And QA_FUNID=@QA_FUNID And QA_CompID=@QA_CompID and QA_FinancialYear=@QA_FinancialYear)                                    
 begin                        
 update QA_Assessment set QA_FinancialYear=@QA_FinancialYear, QA_Code=@QA_Code, QA_CUSTID=@QA_CUSTID, QA_FUNID=@QA_FUNID,                  
        QA_StartDate=@QA_StartDate, QA_EndDate=@QA_EndDate, QA_AUDITORTEAM=@QA_AUDITORTEAM, QA_AUDITTITLE=@QA_AUDITTITLE, QA_Delflag=@QA_Delflag, QA_UpdatedBy=@QA_UpdatedBy,          
		QA_UpdatedOn=GetDate(), QA_AUDStatus=@QA_AUDStatus, QA_WPStatus=@QA_WPStatus,  QA_IPAddress=@QA_IPAddress, QA_CompID=@QA_CompID                     
where  QA_CUSTID=@QA_CUSTID  And QA_FUNID=@QA_FUNID  And QA_CompID=@QA_CompID and QA_FinancialYear=@QA_FinancialYear                                  
set @iUpdateOrSave=2                                   
set @iOper =(select QA_PKID from QA_Assessment Where  QA_CUSTID=@QA_CUSTID And QA_FUNID=@QA_FUNID And QA_CompID=@QA_CompID and QA_FinancialYear=@QA_FinancialYear)                                                       
 end                        
else                              
 begin                                    
 set @QA_PKID=(select isnull(max(QA_PKID)+1,1) from QA_Assessment)                                    
 insert into  QA_Assessment (QA_PKID, QA_Code, QA_FinancialYear, QA_CUSTID, QA_FUNID, QA_StartDate, QA_EndDate, QA_AUDITORTEAM, QA_AUDITTITLE, QA_Delflag,                     
			QA_CrBy, QA_CrOn, QA_SavedBy, QA_SavedOn, QA_AUDStatus, QA_WPStatus, QA_IPAddress, QA_CompID)                                    
 values                                    
 (@QA_PKID, @QA_Code, @QA_FinancialYear, @QA_CUSTID, @QA_FUNID, @QA_StartDate, @QA_EndDate, @QA_AUDITORTEAM, @QA_AUDITTITLE, @QA_Delflag,                     
			@QA_CrBy, GETDATE(), @QA_SavedBy, GETDATE(), @QA_AUDStatus, @QA_WPStatus, @QA_IPAddress, @QA_CompID)                                    
 set @iUpdateOrSave=3                                   
 set @iOper = @QA_PKID                                         
end

/

Create Procedure [dbo].[spQA_WorkPaper]    
(    
 @QAW_PKID Int,    
 @QAW_YearID int,    
 @QAW_CustID int,    
 @QAW_AuditCode int,    
 @QAW_FunctionID int,    
 @QAW_SubFunctionID int,    
 @QAW_ProcessID int,    
 @QAW_SubProcessID int,    
 @QAW_RiskID int,    
 @QAW_ControlID int,    
 @QAW_ChecksID int,    
 @QAW_WorkPaperNo varchar(500),    
 @QAW_TypeofTestID int,    
 @QAW_ConclusionID int,    
 @QAW_WorkPaperDone varchar(5000),    
 @QAW_AuditorObservationName varchar(500),    
 @QAW_Note Varchar(5000),    
 @QAW_AuditeeResponseName varchar(500),    
 @QAW_Response Varchar(5000), 
 @QAW_AuditorRemarks  Varchar(5000),
 @QAW_ReviewerRemarks  Varchar(5000),
 @QAW_OpenCloseStatus int,   
 @QAW_AttachID int,    
 @QAW_CrBy int,    
 @QAW_UpdatedBy int,    
 @QAW_IPAddress Varchar(25),    
 @QAW_CompID int,                            
 @iUpdateOrSave int Output,                                        
 @iOper int Output      
)    
as                                               
if exists(select QAW_PKID from QA_WorkPaper Where  QAW_WorkPaperNo=@QAW_WorkPaperNo And QAW_YearID=@QAW_YearID And QAW_CustID =@QAW_CustID And QAW_AuditCode=@QAW_AuditCode And QAW_FunctionID=@QAW_FunctionID And QAW_CompID =@QAW_CompID And QAW_YearID=@QAW_YearID)                                          
begin                              
  update QA_WorkPaper set QAW_SubFunctionID=@QAW_SubFunctionID ,QAW_ProcessID=@QAW_ProcessID ,QAW_SubProcessID =@QAW_SubProcessID ,    
QAW_RiskID=@QAW_RiskID ,QAW_ControlID=@QAW_ControlID ,QAW_ChecksID=@QAW_ChecksID ,QAW_TypeofTestID=@QAW_TypeofTestID ,QAW_ConclusionID=@QAW_ConclusionID ,QAW_WorkPaperDone =@QAW_WorkPaperDone ,    
QAW_AuditorObservationName =@QAW_AuditorObservationName ,QAW_Note=@QAW_Note ,QAW_AuditeeResponseName=@QAW_AuditeeResponseName,QAW_AuditorRemarks=@QAW_AuditorRemarks,QAW_ReviewerRemarks=@QAW_ReviewerRemarks,  
QAW_Response=@QAW_Response,QAW_UpdatedBy=@QAW_UpdatedBy,QAW_UpdatedOn=GetDate(),QAW_IPAddress=@QAW_IPAddress,QAW_AttachID=@QAW_AttachID,QAW_OpenCloseStatus=@QAW_OpenCloseStatus,QAW_Status='Updated'
where QAW_WorkPaperNo=@QAW_WorkPaperNo And QAW_YearID=@QAW_YearID And QAW_CustID =@QAW_CustID And QAW_AuditCode=@QAW_AuditCode And QAW_FunctionID=@QAW_FunctionID And QAW_CompID =@QAW_CompID                                          
set @iUpdateOrSave=2                                         
set @iOper = (Select QAW_PKID From QA_WorkPaper Where QAW_WorkPaperNo=@QAW_WorkPaperNo And QAW_YearID=@QAW_YearID And QAW_CustID =@QAW_CustID And QAW_AuditCode=@QAW_AuditCode And QAW_FunctionID=@QAW_FunctionID And QAW_CompID =@QAW_CompID)  
 end                              
else                                    
 begin                                          
 set @QAW_PKID=(select isnull(max(QAW_PKID)+1,1) from QA_WorkPaper)                                          
 insert into  QA_WorkPaper (QAW_PKID,QAW_YearID,QAW_CustID,QAW_AuditCode,QAW_FunctionID,QAW_SubFunctionID,QAW_ProcessID,QAW_SubProcessID,QAW_RiskID,QAW_ControlID,    
QAW_ChecksID,QAW_WorkPaperNo,QAW_TypeofTestID,QAW_ConclusionID,QAW_WorkPaperDone,QAW_AuditorObservationName,QAW_Note,QAW_AuditeeResponseName,QAW_ReviewerRemarks,  
QAW_Response,QAW_CrBy,QAW_CrON,QAW_IPAddress,QAW_CompID,QAW_Status,QAW_AttachID,QAW_OpenCloseStatus,QAW_AuditorRemarks)                                          
 values                                          
 (@QAW_PKID,@QAW_YearID,@QAW_CustID,@QAW_AuditCode,@QAW_FunctionID,@QAW_SubFunctionID,@QAW_ProcessID,@QAW_SubProcessID,@QAW_RiskID,@QAW_ControlID,    
@QAW_ChecksID,@QAW_WorkPaperNo,@QAW_TypeofTestID,@QAW_ConclusionID,@QAW_WorkPaperDone,@QAW_AuditorObservationName,@QAW_Note,@QAW_AuditeeResponseName,@QAW_ReviewerRemarks,    
@QAW_Response,@QAW_CrBy,Getdate(),@QAW_IPAddress,@QAW_CompID,'Saved',@QAW_AttachID,@QAW_OpenCloseStatus,@QAW_AuditorRemarks)                                          
 set @iUpdateOrSave=3                                         
 set @iOper = @QAW_PKID                                               
end 

/

CREATE procedure [dbo].[spQAA_ChecksMatrix] (  
  @QAM_PKID int ,  
  @QAM_QAPKID int ,  
  @QAM_YearID int ,  
  @QAM_CustID int ,  
  @QAM_FunctionID int ,  
  @QAM_SubFunctionID int ,  
  @QAM_ProcessID int ,  
  @QAM_SubProcessID int ,  
  @QAM_RiskID int ,  
  @QAM_ControlID int ,  
  @QAM_ChecksID int ,
  @QAM_MMMID int,  
  @QAM_Status varchar(20) ,
  @QAM_IPAddress varchar(20) ,  
  @QAM_CompID int,  
  @iUpdateOrSave int Output,                                
  @iOper int Output                      
)                    
as                                       
                        
 begin                                  
 set @QAM_PKID=(select isnull(max(QAM_PKID)+1,1) from QAA_ChecksMatrix)                                  
 insert into  QAA_ChecksMatrix (QAM_PKID,QAM_QAPKID,QAM_YearID,QAM_CustID,QAM_FunctionID,QAM_SubFunctionID ,QAM_ProcessID ,QAM_SubProcessID ,
 QAM_RiskID ,QAM_ControlID,  QAM_ChecksID,QAM_MMMID,QAM_Status,QAM_IPAddress,QAM_CompID) values                                  
 (@QAM_PKID,@QAM_QAPKID,@QAM_YearID,@QAM_CustID,@QAM_FunctionID,@QAM_SubFunctionID ,@QAM_ProcessID ,@QAM_SubProcessID ,@QAM_RiskID ,@QAM_ControlID,@QAM_ChecksID,  
@QAM_MMMID,@QAM_Status, @QAM_IPAddress,@QAM_CompID)                                  
 set @iUpdateOrSave=3                                 
 set @iOper = @QAM_PKID                                       
end 

/

Create procedure [dbo].[spRisk_BRRChecklist_Details]                      
(                
@BRRD_PKID int,                        
@BRRD_BRRPKID int,    
@BRRD_RCMID int,                      
@BRRD_FunctionID int,                        
@BRRD_AreaID int,       
@BRRD_RefNo varchar(2000),             
@BRRD_CheckPoint varchar(8000),     
@BRRD_MethodologyID int,            
@BRRD_Methodology varchar(5000),      
@BRRD_SampleSizeID int,           
@BRRD_SampleSizeName varchar(5000),       
@BRRD_RiskCategory varchar(500),      
@BRRD_Status varchar(2),     
@BRRD_YESNONA int,                        
@BRRD_IssueDetails varchar(2000),                        
@BRRD_OWeightage float(8),       
@BRRD_RiskScore int,        
@BRRD_WeightedRiskScore float(8),                        
@BRRD_Annexure varchar(8000),                        
@BRRD_FunType varchar(1),    
@BRRD_AttachID int,      
@BRRD_IPAddress varchar(25),                       
@BRRD_CompID int,                        
@iUpdateOrSave int Output,                           
@iOper Int Output                            
)                        
as                               
if exists(select BRRD_PKID from Risk_BRRChecklist_Details where BRRD_BRRPKID=@BRRD_BRRPKID and BRRD_RCMID=@BRRD_RCMID and BRRD_CompID = @BRRD_CompID)                           
begin                           
set @BRRD_PKID=(select BRRD_PKID from Risk_BRRChecklist_Details where BRRD_BRRPKID=@BRRD_BRRPKID And BRRD_RCMID=@BRRD_RCMID And BRRD_CompID = @BRRD_CompID)                      
update Risk_BRRChecklist_Details set BRRD_BRRPKID=@BRRD_BRRPKID,BRRD_RCMID=@BRRD_RCMID,BRRD_YESNONA=@BRRD_YESNONA,BRRD_IssueDetails=@BRRD_IssueDetails,BRRD_RiskScore=@BRRD_RiskScore,                
BRRD_WeightedRiskScore=@BRRD_WeightedRiskScore,BRRD_OWeightage=@BRRD_OWeightage,BRRD_Annexure=@BRRD_Annexure,BRRD_FunType=@BRRD_FunType,BRRD_AttachID=@BRRD_AttachID,                
BRRD_Status=@BRRD_Status,BRRD_IPAddress=@BRRD_IPAddress,BRRD_CheckPoint=@BRRD_CheckPoint,BRRD_RefNo=@BRRD_RefNo,BRRD_SampleSizeName=@BRRD_SampleSizeName,          
BRRD_RiskCategory=@BRRD_RiskCategory,BRRD_MethodologyID=@BRRD_MethodologyID,BRRD_Methodology=@BRRD_Methodology,BRRD_SampleSizeID=@BRRD_SampleSizeID     
where BRRD_PKID=@BRRD_PKID and BRRD_CompID = @BRRD_CompID                        
set @iUpdateOrSave=2                           
set @iOper=@BRRD_PKID                           
end                           
else                           
begin                             
set @BRRD_PKID=(select isnull(max(BRRD_PKID)+1,1) from Risk_BRRChecklist_Details )                          
insert into Risk_BRRChecklist_Details (BRRD_PKID,BRRD_BRRPKID,BRRD_RCMID,BRRD_FunctionID,BRRD_AreaID,BRRD_RefNo,BRRD_CheckPoint,BRRD_RiskCategory,    
BRRD_Methodology,BRRD_MethodologyID,BRRD_SampleSizeName,BRRD_SampleSizeID,BRRD_YESNONA,BRRD_IssueDetails,BRRD_OWeightage,BRRD_RiskScore,BRRD_WeightedRiskScore,BRRD_Annexure,          
BRRD_FunType,BRRD_AttachID,BRRD_IPAddress,BRRD_DelFlag,BRRD_Status,BRRD_CompID)                        
values (@BRRD_PKID,@BRRD_BRRPKID,@BRRD_RCMID,@BRRD_FunctionID,@BRRD_AreaID,@BRRD_RefNo,@BRRD_CheckPoint,@BRRD_RiskCategory,        
@BRRD_Methodology,@BRRD_MethodologyID,@BRRD_SampleSizeName,@BRRD_SampleSizeID,@BRRD_YESNONA,@BRRD_IssueDetails,@BRRD_OWeightage,@BRRD_RiskScore,@BRRD_WeightedRiskScore,@BRRD_Annexure,          
@BRRD_FunType,@BRRD_AttachID,@BRRD_IPAddress,'A',@BRRD_Status,@BRRD_CompID)          
set @iUpdateOrSave=3                           
set @iOper=@BRRD_PKID                          
end

/

Create procedure [dbo].[spRisk_BRRChecklist_Mas]                   
(                        
@BRR_PKID int, 
@BRR_CustID int,                        
@BRR_AsgID int,          
@BRR_BranchId int,                     
@BRR_YearID int,                            
@BRR_ASDate datetime,                        
@BRR_AEDate datetime,      
@BRR_CrBy int,          
@BRR_Status varchar(50),       
@BRR_Flag varchar(1),       
@BRR_Remarks varchar(5000),       
@BRR_Title varchar(5000),      
@BRR_IPAddress varchar(25),         
@BRR_CompID int,  
@BRR_AttachID int,                       
@iUpdateOrSave int Output,                         
@iOper Int Output                         
)                        
as                               
if exists(select BRR_PKID from Risk_BRRChecklist_Mas where BRR_CustID=@BRR_CustID And BRR_AsgID=@BRR_AsgID and BRR_BranchId=@BRR_BranchId and BRR_CompID=@BRR_CompID)                          
begin                           
set @BRR_PKID=(select BRR_PKID from Risk_BRRChecklist_Mas  where BRR_CustID=@BRR_CustID And BRR_AsgID=@BRR_AsgID and BRR_BranchId=@BRR_BranchId and BRR_CompID=@BRR_CompID)                          
update Risk_BRRChecklist_Mas set BRR_AsgID=@BRR_AsgID,BRR_BranchId=@BRR_BranchId,BRR_ASDate=@BRR_ASDate,BRR_AEDate=@BRR_AEDate,       
BRR_CompID=@BRR_CompID,BRR_Remarks=@BRR_Remarks,BRR_Title=@BRR_Title,BRR_Status=@BRR_Status,BRR_Flag=@BRR_Flag,BRR_IPAddress=@BRR_IPAddress,BRR_AttachID=@BRR_AttachID    
where BRR_PKID=@BRR_PKID and BRR_CompID=@BRR_CompID                      
set @iUpdateOrSave=2                         
set @iOper=@BRR_PKID                           
end                          
else                           
begin                          
set @BRR_PKID=(select isnull(max(BRR_PKID)+1,1) from Risk_BRRChecklist_Mas )                          
insert into Risk_BRRChecklist_Mas (BRR_PKID,BRR_CustID,BRR_AsgID,BRR_BranchId,BRR_YearID,BRR_CrBy,BRR_CrOn,BRR_ASDate,BRR_AEDate,BRR_CompID,BRR_Status,BRR_Title,BRR_Remarks,      
BRR_IPAddress,BRR_Flag,BRR_AttachID)values                          
(@BRR_PKID,@BRR_CustID,@BRR_AsgID,@BRR_BranchId,@BRR_YearID,@BRR_CrBy,GetDate(),@BRR_ASDate,@BRR_AEDate,@BRR_CompID,@BRR_Status,@BRR_Title,@BRR_Remarks,      
@BRR_IPAddress,@BRR_Flag,@BRR_AttachID)                          
set @iUpdateOrSave=3                          
set @iOper=@BRR_PKID                         
end

/

Create Procedure [dbo].[spRisk_BRRIssueTracker]      
(                      
@BBRIT_PKID int,         
@BBRIT_BRRDPKID int,       
@BBRIT_RCMID int, 
@BBRIT_CustID int,     
@BBRIT_AsgNo int,         
@BBRIT_BranchId int,          
@BBRIT_FunctionID int,          
@BBRIT_AreaID int,          
@BBRIT_CheckPointID int,        
@BBRIT_FinancialYear int,        
@BBRIT_IssueHeading varchar(8000),      
@BBRIT_IssueDesc varchar(8000),       
@BBRIT_ActionPlan varchar(5000),        
@BBRIT_TargetDate datetime,  
@BBRIT_OpenCloseStatus int,  
@BBRIT_Responsible int,  
@BBRIT_Remaks varchar(8000),  
@BBRIT_AttchID int,          
@BBRIT_CrBy int,           
@BBRIT_UpdatedBy int,  
@BBRIT_Status varchar(2),  
@BBRIT_DelFlag varchar(1),        
@BBRIT_IPAddress varchar(25),          
@BBRIT_CompID int,              
@iUpdateOrSave int Output,                      
@iOper int Output                        
)             
As                            
if exists(select BBRIT_PKID from Risk_BRRIssueTracker where BBRIT_BRRDPKID=@BBRIT_BRRDPKID And BBRIT_RCMID=@BBRIT_RCMID And BBRIT_CustID=@BBRIT_CustID 
And BBRIT_AsgNo=@BBRIT_AsgNo And BBRIT_BranchId=@BBRIT_BranchId And BBRIT_FinancialYear=@BBRIT_FinancialYear And BBRIT_CompID=@BBRIT_CompID)                    
Begin             
Update Risk_BRRIssueTracker set BBRIT_FunctionID=@BBRIT_FunctionID,BBRIT_AreaID=@BBRIT_AreaID,BBRIT_CheckPointID=@BBRIT_CheckPointID,  
BBRIT_IssueHeading=@BBRIT_IssueHeading,BBRIT_IssueDesc=@BBRIT_IssueDesc,BBRIT_ActionPlan=@BBRIT_ActionPlan,BBRIT_TargetDate=@BBRIT_TargetDate,  
BBRIT_OpenCloseStatus=@BBRIT_OpenCloseStatus,BBRIT_Responsible=@BBRIT_Responsible,BBRIT_Remaks=@BBRIT_Remaks,BBRIT_AttchID=@BBRIT_AttchID,      
BBRIT_UpdatedBy=@BBRIT_UpdatedBy,BBRIT_UpdatedOn=GetDate(),BBRIT_Status=@BBRIT_Status,BBRIT_DelFlag=@BBRIT_DelFlag,BBRIT_IPAddress=@BBRIT_IPAddress         
where BBRIT_BRRDPKID=@BBRIT_BRRDPKID And BBRIT_RCMID=@BBRIT_RCMID And BBRIT_CustID=@BBRIT_CustID And BBRIT_AsgNo=@BBRIT_AsgNo And BBRIT_BranchId=@BBRIT_BranchId And BBRIT_FinancialYear=@BBRIT_FinancialYear And BBRIT_CompID=@BBRIT_CompID  
set @iUpdateOrSave=2                     
set @iOper=@BBRIT_PKID   
End                      
Else                        
Begin                        
set @BBRIT_PKID=(select IsNull(Max(BBRIT_PKID)+1,1) from Risk_BRRIssueTracker)                        
insert into Risk_BRRIssueTracker(BBRIT_PKID,BBRIT_BRRDPKID,BBRIT_RCMID,BBRIT_CustID,BBRIT_AsgNo,BBRIT_BranchId,BBRIT_FunctionID,BBRIT_AreaID,BBRIT_CheckPointID,  
BBRIT_IssueHeading,BBRIT_IssueDesc,BBRIT_ActionPlan,BBRIT_TargetDate,BBRIT_OpenCloseStatus,BBRIT_Responsible,BBRIT_Remaks,BBRIT_AttchID,  
BBRIT_FinancialYear,BBRIT_CrBy,BBRIT_CrOn,BBRIT_Status,BBRIT_DelFlag,BBRIT_IPAddress,BBRIT_CompID)                      
values(@BBRIT_PKID,@BBRIT_BRRDPKID,@BBRIT_RCMID,@BBRIT_CustID,@BBRIT_AsgNo,@BBRIT_BranchId,@BBRIT_FunctionID,@BBRIT_AreaID,@BBRIT_CheckPointID,  
@BBRIT_IssueHeading,@BBRIT_IssueDesc,@BBRIT_ActionPlan,@BBRIT_TargetDate,@BBRIT_OpenCloseStatus,@BBRIT_Responsible,@BBRIT_Remaks,@BBRIT_AttchID,       
@BBRIT_FinancialYear,@BBRIT_CrBy,GetDate(),@BBRIT_Status,@BBRIT_DelFlag,@BBRIT_IPAddress,@BBRIT_CompID)                      
set @iUpdateOrSave=3                       
set @iOper=@BBRIT_PKID                         
End 

/

Create Procedure [dbo].[spRisk_BRRIssueTracker_History]
(
@BRRITH_PKID int,
@BRRITH_BBRITPKID int,
@BRRITH_CustID int,
@BRRITH_AsgNo int,
@BRRITH_ActionPlan Varchar(5000),
@BRRITH_TargetDate datetime,
@BRRITH_OpenCloseStatus int,
@BRRITH_Remarks Varchar(8000),
@BRRITH_CrBy int,
@BRRITH_UpdatedBy int,
@BRRITH_IPAddress Varchar(25),
@BRRITH_CompID int,
@iUpdateOrSave int Output,              
@iOper int Output  
)
As
Begin
Update Risk_BRRIssueTracker set BBRIT_ActionPlan=@BRRITH_ActionPlan,BBRIT_TargetDate=@BRRITH_TargetDate,BBRIT_OpenCloseStatus=@BRRITH_OpenCloseStatus,
BBRIT_Remaks=@BRRITH_Remarks
where BBRIT_PKID=@BRRITH_BBRITPKID And BBRIT_CustID=@BRRITH_CustID And BBRIT_AsgNo=@BRRITH_AsgNo And BBRIT_CompID=@BRRITH_CompID   
End                  
if @BRRITH_PKID>0    
Begin  
Update Risk_BRRIssueTracker_History set BRRITH_BBRITPKID=@BRRITH_BBRITPKID,BRRITH_CustID=@BRRITH_CustID,BRRITH_AsgNo=@BRRITH_AsgNo,BRRITH_ActionPlan=@BRRITH_ActionPlan,BRRITH_TargetDate=@BRRITH_TargetDate,
BRRITH_OpenCloseStatus=@BRRITH_OpenCloseStatus,BRRITH_Remarks=@BRRITH_Remarks,BRRITH_UpdatedBy=@BRRITH_UpdatedBy,BRRITH_IPAddress=@BRRITH_IPAddress
where BRRITH_PKID=@BRRITH_PKID and BRRITH_CompID=@BRRITH_CompID  
set @iUpdateOrSave=2             
set @iOper=@BRRITH_PKID              
End              
Else                
Begin                
set @BRRITH_PKID=(select IsNull(Max(BRRITH_PKID)+1,1) from Risk_BRRIssueTracker_History)                
insert into Risk_BRRIssueTracker_History(BRRITH_PKID,BRRITH_BBRITPKID,BRRITH_CustID,BRRITH_AsgNo,BRRITH_ActionPlan,BRRITH_TargetDate,
BRRITH_OpenCloseStatus,BRRITH_CrBy,BRRITH_CrOn,BRRITH_Remarks,BRRITH_IPAddress,BRRITH_CompID)              
values(@BRRITH_PKID,@BRRITH_BBRITPKID,@BRRITH_CustID,@BRRITH_AsgNo,@BRRITH_ActionPlan,@BRRITH_TargetDate,
@BRRITH_OpenCloseStatus,@BRRITH_CrBy,GetDate(),@BRRITH_Remarks,@BRRITH_IPAddress,@BRRITH_CompID)              
set @iUpdateOrSave=3               
set @iOper=@BRRITH_PKID                 
End 

/

Create procedure [dbo].[spRisk_BRRPlanning]  
(          
@BRRP_PKID int,
@BRRP_YearId int,
@BRRP_CustId int,
@BRRP_SalesUnitCode int,
@BRRP_BranchID int,
@BRRP_RegionID int,
@BRRP_ZoneID int,
@BRRP_RiskScore int,
@BRRP_BRRRatingID int,
@BRRP_BCMRatingID int,
@BRRP_IARatingID int,
@BRRP_GrossControlScore int,
@BRRP_NetScore int,
@BRRP_AAPlan int,
@BRRP_Remarks varchar(5000),
@BRRP_Status varchar(2),
@BRRP_DelFlag varchar(1),
@BRRP_CrBy int,
@BRRP_UpdatedBy int,
@BRRP_IPAddress varchar(25),
@BRRP_CompID int,     
@iUpdateOrSave int Output,            
@iOper int Output             
)        
 as          
  if exists(Select BRRP_PKID from Risk_BRRPlanning where BRRP_CustId=@BRRP_CustId And BRRP_BranchID=@BRRP_BranchID And BRRP_RegionID=@BRRP_RegionID And BRRP_ZoneID=@BRRP_ZoneID And BRRP_CompID=@BRRP_CompID)            
   begin               
  update Risk_BRRPlanning set BRRP_YearId=@BRRP_YearId,BRRP_SalesUnitCode=@BRRP_SalesUnitCode,      
 BRRP_BranchID=@BRRP_BranchID,BRRP_RegionID=@BRRP_RegionID,BRRP_ZoneID=@BRRP_ZoneID,BRRP_RiskScore=@BRRP_RiskScore,        
 BRRP_BRRRatingID=@BRRP_BRRRatingID,BRRP_BCMRatingID=@BRRP_BCMRatingID,BRRP_IARatingID=@BRRP_IARatingID,BRRP_GrossControlScore=@BRRP_GrossControlScore,          
 BRRP_NetScore=@BRRP_NetScore,BRRP_AAPlan=@BRRP_AAPlan,
 BRRP_Remarks=@BRRP_Remarks,BRRP_Status=@BRRP_Status,BRRP_DelFlag=@BRRP_DelFlag,BRRP_UpdatedBy=@BRRP_UpdatedBy,
 BRRP_UpdatedOn =GetDate(),BRRP_IPAddress=@BRRP_IPAddress     
 where BRRP_CustId=@BRRP_CustId And BRRP_BranchID=@BRRP_BranchID And BRRP_RegionID=@BRRP_RegionID And BRRP_ZoneID=@BRRP_ZoneID And BRRP_CompID = @BRRP_CompID          
   set @iUpdateOrSave=2             
   set @iOper =@BRRP_PKID        
 end            
    else            
begin            
   set @BRRP_PKID=(select isnull(max(BRRP_PKID)+1,1) from Risk_BRRPlanning)            
   insert into Risk_BRRPlanning (BRRP_PKID,BRRP_YearId,BRRP_CustId,BRRP_SalesUnitCode,BRRP_BranchID,BRRP_RegionID,BRRP_ZoneID,          
  BRRP_RiskScore,BRRP_BRRRatingID,BRRP_BCMRatingID,BRRP_IARatingID,BRRP_GrossControlScore,BRRP_NetScore,   
  BRRP_AAPlan,BRRP_Remarks,BRRP_Status,BRRP_DelFlag,BRRP_CrBy,BRRP_CrOn,BRRP_IPAddress,BRRP_CompID)          
  values            
   (@BRRP_PKID,@BRRP_YearId,@BRRP_CustId,@BRRP_SalesUnitCode,@BRRP_BranchID,@BRRP_RegionID,@BRRP_ZoneID,    
  @BRRP_RiskScore,@BRRP_BRRRatingID,@BRRP_BCMRatingID,@BRRP_IARatingID,@BRRP_GrossControlScore,@BRRP_NetScore,   
  @BRRP_AAPlan,@BRRP_Remarks,@BRRP_Status,@BRRP_DelFlag,@BRRP_CrBy,getdate(),@BRRP_IPAddress,@BRRP_CompID)            
   set @iUpdateOrSave=3             
   set @iOper =@BRRP_PKID           
end 

/

CREATE PROCEDURE [dbo].[spRisk_BRRReport] (    
@BRRR_Pkid int,
@BRRR_CustID int,    
@BRRR_AsgID int,    
@BRRR_BBRITID int,    
@BRRR_BRRDID int,    
@BRRR_BranchId int,    
@BRRR_FunctionID int,    
@BRRR_AreaID int,    
@BRRR_IssuAgreed int,    
@BRRR_ActionPlanDate datetime,    
@BRRR_DisAgreedRsn varchar(8000),    
@BRRR_IssuStatus int,    
@BRRR_ClosingDate datetime,    
@BRRR_Status varchar(2),    
@BRRR_DelFlag varchar(2),    
@BRRR_CreatedBy varchar(5),    
@BRRR_UpdatedBy varchar(5),    
@BRRR_IPAddress varchar(25),    
@BRRR_YearID varchar(5),    
@BRRR_CompID int,   
@BRRR_AttachID int,  
@iUpdateOrSave int Output,         
@iOper int output    
)    
 As                    
  If exists(select BRRR_Pkid from Risk_BRRReport where BRRR_BBRITID=@BRRR_BBRITID and BRRR_CustID=@BRRR_CustID And BRRR_AsgID=@BRRR_AsgID and BRRR_BRRDID=@BRRR_BRRDID and BRRR_CompID = @BRRR_CompID)      
Begin       
Update Risk_BRRReport set BRRR_IssuAgreed =@BRRR_IssuAgreed, BRRR_ActionPlanDate =@BRRR_ActionPlanDate,       
BRRR_DisAgreedRsn=@BRRR_DisAgreedRsn, BRRR_IssuStatus=@BRRR_IssuStatus,BRRR_ClosingDate=@BRRR_ClosingDate,    
BRRR_UpdatedBy=@BRRR_UpdatedBy,BRRR_UpdatedOn=GetDate(),BRRR_IPAddress=@BRRR_IPAddress,BRRR_Status=@BRRR_Status,BRRR_AttachID=@BRRR_AttachID      
where  BRRR_BBRITID=@BRRR_BBRITID and BRRR_CustID=@BRRR_CustID and BRRR_AsgID=@BRRR_AsgID and BRRR_BRRDID=@BRRR_BRRDID and BRRR_CompID=@BRRR_CompID                 
set @iUpdateOrSave=2                   
set @iOper = @BRRR_BRRDID      
END    
Else    
BEGIN     
 set @BRRR_Pkid=(select isnull(max(BRRR_Pkid)+1,1)from Risk_BRRReport)     
 insert into Risk_BRRReport (BRRR_Pkid,BRRR_CustID,BRRR_AsgID,BRRR_BBRITID,BRRR_BRRDID,BRRR_BranchId,BRRR_FunctionID,    
BRRR_AreaID,BRRR_IssuAgreed,BRRR_ActionPlanDate,BRRR_DisAgreedRsn,BRRR_IssuStatus,    
BRRR_ClosingDate,BRRR_Status,BRRR_DelFlag,BRRR_CreatedBy,BRRR_CreatedOn,BRRR_IPAddress,
BRRR_YearID,BRRR_CompID,BRRR_AttachID)    

values(@BRRR_Pkid,@BRRR_CustID,@BRRR_AsgID,@BRRR_BBRITID,@BRRR_BRRDID,@BRRR_BranchId,@BRRR_FunctionID,    
@BRRR_AreaID,@BRRR_IssuAgreed,@BRRR_ActionPlanDate,@BRRR_DisAgreedRsn,@BRRR_IssuStatus,    
@BRRR_ClosingDate,@BRRR_Status,@BRRR_DelFlag,@BRRR_CreatedBy,Getdate(),@BRRR_IPAddress,
@BRRR_YearID,@BRRR_CompID,@BRRR_AttachID)    
set @iUpdateOrSave=3      
set @iOper =@BRRR_Pkid     
END

/

Create Procedure [dbo].[spRisk_BRRSchedule]         
(                  
@BRRS_PKID int,  
@BRRS_CustID int,  
@BRRS_AsgNo Varchar(100),    
@BRRS_FinancialYear int,    
@BRRS_ScheduleMonth int,    
@BRRS_ZoneID int,    
@BRRS_RegionID int,    
@BRRS_BranchID int,    
@BRRS_ZonalMgrID int,    
@BRRS_BranchMgrID int,    
@BRRS_ReviewerTypeID int,    
@BRRS_EmployeeID int,    
@BRRS_Remarks varchar(8000),    
@BRRS_AttchID int,    
@BRRS_CrBy int,    
@BRRS_UpdatedBy int,    
@BRRS_IPAddress Varchar(25),    
@BRRS_CompID int,    
@iUpdateOrSave int Output,                  
@iOper int Output                    
)         
As                        
if @BRRS_PKID>0    
Begin     
Declare  @BRRS_Status varchar(50)    
 Update Risk_BRRSchedule set BRRS_FinancialYear =@BRRS_FinancialYear, BRRS_ScheduleMonth =@BRRS_ScheduleMonth,     
BRRS_ZoneID=@BRRS_ZoneID, BRRS_RegionID=@BRRS_RegionID,BRRS_BranchID=@BRRS_BranchID,BRRS_ZonalMgrID=@BRRS_ZonalMgrID,    
BRRS_BranchMgrID=@BRRS_BranchMgrID,BRRS_ReviewerTypeID=@BRRS_ReviewerTypeID,BRRS_EmployeeID=@BRRS_EmployeeID,BRRS_Remarks=@BRRS_Remarks,    
BRRS_AttchID=@BRRS_AttchID,BRRS_UpdatedBy=@BRRS_UpdatedBy,BRRS_UpdatedOn=GetDate(),BRRS_IPAddress=@BRRS_IPAddress    
where BRRS_PKID=@BRRS_PKID and BRRS_CompID=@BRRS_CompID               
set @iUpdateOrSave=2                 
set @iOper = @BRRS_PKID                  
End                  
Else                    
Begin                    
set @BRRS_PKID=(select IsNull(Max(BRRS_PKID)+1,1) from Risk_BRRSchedule)                    
insert into Risk_BRRSchedule(BRRS_PKID,BRRS_CustID,BRRS_AsgNo,BRRS_FinancialYear,BRRS_ScheduleMonth,BRRS_ZoneID,BRRS_RegionID,BRRS_BranchID,BRRS_ZonalMgrID,    
   BRRS_BranchMgrID,BRRS_ReviewerTypeID,BRRS_EmployeeID,BRRS_Remarks,BRRS_AttchID,BRRS_Status,BRRS_CrBy,BRRS_CrOn,BRRS_IPAddress,BRRS_CompID)                  
values(@BRRS_PKID,@BRRS_CustID,@BRRS_AsgNo,@BRRS_FinancialYear,@BRRS_ScheduleMonth,@BRRS_ZoneID,@BRRS_RegionID,@BRRS_BranchID,@BRRS_ZonalMgrID,    
   @BRRS_BranchMgrID,@BRRS_ReviewerTypeID,@BRRS_EmployeeID,@BRRS_Remarks,@BRRS_AttchID,'Saved',@BRRS_CrBy,GetDate(),@BRRS_IPAddress,@BRRS_CompID)                    
set @iUpdateOrSave=3                   
set @iOper = @BRRS_PKID                     
End 

/

CREATE procedure [dbo].[spRisk_CheckList_Master]    
(          
@RCM_Id int,  
@RCM_CustId int,        
@RCM_FunctionId int,          
@RCM_AreaId int,          
@RCM_RiskCategory varchar(10),          
@RCM_RiskWeight float(8),          
@RCM_CheckPointNo varchar(10),          
@RCM_CheckPoint varchar(600),          
@RCM_MethodologyId int,          
@RCM_Delflag varchar(1),          
@RCM_SampleSize int,          
@RCM_AreaNo varchar(2000),  
@RCM_YearId int,     
@RCM_FunType varchar(1),      
@RCM_Status varchar(10),          
@RCM_CrBy int,    
@RCM_UpdatedBy int,    
@RCM_IPAddress varchar(25),        
@RCM_CompID int,      
@iUpdateOrSave int Output,            
@iOper int Output             
)        
 as          
  if exists(select RCM_Id from Risk_CheckList_Master where RCM_Id=@RCM_Id And RCM_CustId=@RCM_CustId And RCM_CheckPointNo=@RCM_CheckPointNo And RCM_CompID = @RCM_CompID)            
   begin               
  update Risk_CheckList_Master set RCM_FunctionId=@RCM_FunctionId,RCM_AreaId=@RCM_AreaId,      
  RCM_RiskCategory=@RCM_RiskCategory,RCM_RiskWeight=@RCM_RiskWeight,        
 RCM_CheckPoint=@RCM_CheckPoint,RCM_MethodologyId=@RCM_MethodologyId,RCM_SampleSize=@RCM_SampleSize,          
 RCM_AreaNo=@RCM_AreaNo,RCM_FunType=@RCM_FunType,RCM_UpdatedBy=@RCM_UpdatedBy,RCM_UpdatedOn=GetDate(),RCM_Status=@RCM_Status,      
  RCM_IPAddress=@RCM_IPAddress           
 where  RCM_Id=@RCM_Id And RCM_CustId=@RCM_CustId And RCM_CheckPointNo=@RCM_CheckPointNo And RCM_CompID = @RCM_CompID          
   set @iUpdateOrSave=2             
   set @iOper =@RCM_Id        
 end            
    else            
begin            
   set @RCM_Id=(select isnull(max(RCM_Id)+1,1) from Risk_CheckList_Master)            
   insert into Risk_CheckList_Master (RCM_Id,RCM_CustId,RCM_FunctionId,RCM_AreaId,RCM_RiskCategory,RCM_RiskWeight,          
  RCM_CheckPointNo,RCM_CheckPoint,RCM_MethodologyId,RCM_Delflag,RCM_SampleSize,RCM_AreaNo,RCM_YearId,RCM_FunType,         
  RCM_Status,RCM_CrBy,RCM_CrOn,RCM_IPAddress,RCM_CompID)          
  values            
   (@RCM_Id,@RCM_CustId,@RCM_FunctionId,@RCM_AreaId,@RCM_RiskCategory,@RCM_RiskWeight,    
  @RCM_CheckPointNo,@RCM_CheckPoint,@RCM_MethodologyId,@RCM_Delflag,@RCM_SampleSize,@RCM_AreaNo,@RCM_YearId,@RCM_FunType,    
  @RCM_Status,@RCM_CrBy,getdate(),@RCM_IPAddress,@RCM_CompID)            
   set @iUpdateOrSave=3             
   set @iOper =@RCM_Id           
end 

/

CREATE procedure [dbo].[spRisk_GeneralMaster]                 
(                
 @RAM_PKID int,   
 @RAM_YearID int,    
 @RAM_Code varchar(20),    
 @RAM_Category varchar(20),    
 @RAM_Name varchar(200),     
 @RAM_Score int,  
 @RAM_StartValue float,  
 @RAM_EndValue float,  
 @RAM_Color varchar(50) ,  
 @RAM_Remarks varchar(8000),     
 @RAM_CrBy int,    
 @RAM_UpdatedBy int,    
 @RAM_IPAddress varchar(25),    
 @RAM_CompID int,             
 @iUpdateOrSave int Output,                 
 @iOper Int Output                   
)                
as                       
if exists(select RAM_PKID from Risk_GeneralMaster  where RAM_PKID=@RAM_PKID and @RAM_CompID=RAM_CompID)                  
begin      
Declare @RAM_DelFlag varchar(2)     
Declare @RAM_Status varchar(2)      
Set @RAM_Status='U'   
set @RAM_DelFlag='U'                          
update Risk_GeneralMaster set RAM_PKID=@RAM_PKID,RAM_YearID=@RAM_YearID,RAM_Code=@RAM_Code,RAM_Name=@RAM_Name,RAM_Remarks=@RAM_Remarks,     
RAM_UpdatedBy =@RAM_UpdatedBy,RAM_UpdatedOn=GetDate(),RAM_IPAddress = @RAM_IPAddress,RAM_Category=@RAM_Category,RAM_Score=@RAM_Score,  
RAM_StartValue= @RAM_StartValue,RAM_EndValue=@RAM_EndValue,RAM_Color=@RAM_Color,RAM_Status=@RAM_Status      
where RAM_PKID=@RAM_PKID and @RAM_CompID=RAM_CompID              
set @iUpdateOrSave=2                 
set @iOper=@RAM_PKID                   
end                  
else                   
begin                  
set @RAM_PKID=(select isnull(max(RAM_PKID)+1,1) from Risk_GeneralMaster )                  
insert into Risk_GeneralMaster (RAM_PKID,RAM_YearID,RAM_Code,RAM_Category,RAM_Name,RAM_Remarks,RAM_DelFlag,RAM_Status,RAM_CrBy,RAM_CrOn,RAM_IPAddress,RAM_CompID,RAM_Score,RAM_StartValue,RAM_EndValue,RAM_Color)values                  
(@RAM_PKID,@RAM_YearID,@RAM_Code,@RAM_Category,@RAM_Name,@RAM_Remarks,'W','C',@RAM_CrBy,GetDate(),@RAM_IPAddress,@RAM_CompID,@RAM_Score,@RAM_StartValue,@RAM_EndValue,@RAM_Color)                  
set @iUpdateOrSave=3                  
set @iOper=@RAM_PKID                 
end   
  
/

CREATE Procedure [dbo].[spRisk_IssueTracker]  
(                
@RIT_PKID int,  
@RIT_Source Varchar(100),  
@RIT_IssueNo Varchar(100),    
@RIT_AsgNo int, 
@RIT_ReferenceNo varchar(100),   
@RIT_FinancialYear int,  
@RIT_CustID int,    
@RIT_FunID int,  
@RIT_SubFunID int,  
@RIT_IssueHeading Varchar(8000),    
@RIT_Issue_Desc Varchar(8000),    
@RIT_RiskID int,    
@RIT_RiskTypeID int,    
@RIT_ControlID int,    
@RIT_ActualLoss Varchar(5000),    
@RIT_ProbableLoss Varchar(5000),    
@RIT_ActionPlan Varchar(5000),  
@RIT_TargetDate datetime,  
@RIT_OpenCloseStatus int,  
@RIT_ManagerResponsible int,  
@RIT_IndividualResponsible int,  
@RIT_Remaks Varchar(8000),  
@RIT_AttchID int,    
@RIT_CrBy int,     
@RIT_UpdatedBy int,    
@RIT_IPAddress Varchar(25),    
@RIT_CompID int,        
@iUpdateOrSave int Output,                
@iOper int Output                  
)       
As                      
if @RIT_PKID>0      
Begin    
Declare @RIT_Status Varchar(25)    
Update Risk_IssueTracker set RIT_ReferenceNo=@RIT_ReferenceNo, RIT_IssueHeading=@RIT_IssueHeading,RIT_Issue_Desc=@RIT_Issue_Desc,RIT_RiskID=@RIT_RiskID,RIT_RiskTypeID=@RIT_RiskTypeID,    
  RIT_ControlID=@RIT_ControlID,RIT_ActualLoss=@RIT_ActualLoss,RIT_ProbableLoss=@RIT_ProbableLoss,RIT_AttchID=@RIT_AttchID,    
  RIT_UpdatedBy=@RIT_UpdatedBy,RIT_UpdatedOn=GetDate(),RIT_IPAddress=@RIT_IPAddress,RIT_TargetDate=@RIT_TargetDate,RIT_OpenCloseStatus=@RIT_OpenCloseStatus,RIT_ManagerResponsible=@RIT_ManagerResponsible,RIT_IndividualResponsible=@RIT_IndividualResponsible

,RIT_ActionPlan=@RIT_ActionPlan
where RIT_PKID=@RIT_PKID And RIT_AsgNo=@RIT_AsgNo And RIT_FinancialYear=@RIT_FinancialYear And RIT_CustID=@RIT_CustID And RIT_FunID=@RIT_FunID And RIT_CompID=@RIT_CompID     
set @iUpdateOrSave=2               
set @iOper=@RIT_PKID                
End                
Else                  
Begin                  
set @RIT_PKID=(select IsNull(Max(RIT_PKID)+1,1) from Risk_IssueTracker)                  
insert into Risk_IssueTracker(RIT_PKID,RIT_Source,RIT_IssueNo,RIT_AsgNo,RIT_ReferenceNo,RIT_FinancialYear,RIT_CustID,RIT_FunID,RIT_SubFunID,RIT_IssueHeading,RIT_Issue_Desc,RIT_RiskID,RIT_RiskTypeID,    
 RIT_ControlID,RIT_ActualLoss,RIT_ProbableLoss,RIT_AttchID,RIT_CrBy,RIT_CrOn,RIT_Status,RIT_IPAddress,RIT_CompID,RIT_TargetDate,RIT_OpenCloseStatus,RIT_ManagerResponsible,RIT_IndividualResponsible,RIT_ActionPlan)                
values(@RIT_PKID,@RIT_Source,@RIT_IssueNo,@RIT_AsgNo,@RIT_ReferenceNo,@RIT_FinancialYear,@RIT_CustID,@RIT_FunID,@RIT_SubFunID,@RIT_IssueHeading,@RIT_Issue_Desc,@RIT_RiskID,@RIT_RiskTypeID,    
 @RIT_ControlID,@RIT_ActualLoss,@RIT_ProbableLoss,@RIT_AttchID,@RIT_CrBy,GetDate(),'Saved',@RIT_IPAddress,@RIT_CompID,@RIT_TargetDate,@RIT_OpenCloseStatus,@RIT_ManagerResponsible,@RIT_IndividualResponsible,@RIT_ActionPlan)                
set @iUpdateOrSave=3                 
set @iOper=@RIT_PKID                   
End  

/

Create Procedure [dbo].[spRisk_IssueTracker_History]
(
@RITH_PKID int,
@RITH_RITPKID int,
@RITH_AsgNo int,
@RITH_ActionPlan Varchar(5000),
@RITH_TargetDate datetime,
@RITH_OpenCloseStatus int,
@RITH_ManagerResponsible int,
@RITH_IndividualResponsible int,
@RITH_Remaks Varchar(8000),
@RITH_CrBy int,
@RITH_UpdatedBy int,
@RITH_IPAddress Varchar(25),
@RITH_CompID int,
@iUpdateOrSave int Output,              
@iOper int Output  
)
As
Begin
Update Risk_IssueTracker set RIT_ActionPlan=@RITH_ActionPlan,RIT_TargetDate=@RITH_TargetDate,RIT_OpenCloseStatus=@RITH_OpenCloseStatus,
RIT_ManagerResponsible=@RITH_ManagerResponsible,RIT_IndividualResponsible=@RITH_IndividualResponsible,RIT_Remaks=@RITH_Remaks
where RIT_PKID=@RITH_RITPKID And RIT_AsgNo=@RITH_AsgNo And RIT_CompID=@RITH_CompID   
End                  
if @RITH_PKID>0    
Begin  
Update Risk_IssueTracker_History set RITH_RITPKID=@RITH_RITPKID,RITH_AsgNo=@RITH_AsgNo,RITH_ActionPlan=@RITH_ActionPlan,RITH_TargetDate=@RITH_TargetDate,
RITH_OpenCloseStatus=@RITH_OpenCloseStatus,RITH_ManagerResponsible=@RITH_ManagerResponsible,RITH_IndividualResponsible=@RITH_IndividualResponsible,
RITH_Remaks=@RITH_Remaks,RITH_UpdatedBy=@RITH_UpdatedBy,RITH_IPAddress=@RITH_IPAddress
where RITH_PKID=@RITH_PKID and RITH_CompID=@RITH_CompID  
set @iUpdateOrSave=2             
set @iOper=@RITH_PKID              
End              
Else                
Begin                
set @RITH_PKID=(select IsNull(Max(RITH_PKID)+1,1) from Risk_IssueTracker_History)                
insert into Risk_IssueTracker_History(RITH_PKID,RITH_RITPKID,RITH_AsgNo,RITH_ActionPlan,RITH_TargetDate,
RITH_OpenCloseStatus,RITH_ManagerResponsible,RITH_IndividualResponsible,RITH_CrBy,RITH_CrOn,RITH_Remaks,RITH_IPAddress,RITH_CompID)              
values(@RITH_PKID,@RITH_RITPKID,@RITH_AsgNo,@RITH_ActionPlan,@RITH_TargetDate,
@RITH_OpenCloseStatus,@RITH_ManagerResponsible,@RITH_IndividualResponsible,@RITH_CrBy,GetDate(),@RITH_Remaks,@RITH_IPAddress,@RITH_CompID)              
set @iUpdateOrSave=3               
set @iOper=@RITH_PKID                 
End 

/

CREATE PROCEDURE [dbo].[spRisk_KCC_PlanningSchecduling_Conducting]
(    
@KCC_PKID  int, 
@KCC_CustID int,      
@KCC_FunID int,    
@KCC_SubFunID int,    
@KCC_ConductingActualStartDate DateTime,    
@KCC_ConductingActualClosure DateTime,    
@KCC_ConductingRemarks varchar(8000),    
@KCC_ConductingCrBy int,    
@KCC_ConductingUpdatedBy int,    
@KCC_ConductingIPaddress Varchar(25),    
@KCC_CompID int,    
@KCC_YearID int,    
@KCC_ConductingKCCStatus varchar(25),
@KCC_ConductAttachID int,    
@iUpdateOrSave int Output,                  
@iOper int Output      
)     
AS    
If exists(select KCC_PKID from Risk_KCC_PlanningSchecduling_Details where KCC_PKID=@KCC_PKID and KCC_CustID=@KCC_CustID and KCC_ConductingStatus='Saved'and KCC_CompID = @KCC_CompID)     
 Begin            
Update Risk_KCC_PlanningSchecduling_Details set KCC_SubFunID=@KCC_SubFunID,KCC_ConductingActualStartDate=@KCC_ConductingActualStartDate,KCC_ConductingActualClosure=@KCC_ConductingActualClosure,    
KCC_ConductingRemarks=@KCC_ConductingRemarks,KCC_ConductingUpdatedBy=@KCC_ConductingUpdatedBy,KCC_ConductingUpdatedOn=GetDate(),    
KCC_ConductingIPaddress=@KCC_ConductingIPaddress,KCC_YearID=@KCC_YearID,KCC_ConductingKCCStatus=@KCC_ConductingKCCStatus,
KCC_ConductAttachID=@KCC_ConductAttachID    
where KCC_PKID=@KCC_PKID and KCC_CustID=@KCC_CustID and KCC_FunID=@KCC_FunID and KCC_CompID=@KCC_CompID    
Set @iUpdateOrSave=2      
Set @iOper = @KCC_PKID     
End    
Else             
BEGIN       
Update Risk_KCC_PlanningSchecduling_Details set KCC_SubFunID=@KCC_SubFunID,KCC_ConductingActualStartDate=@KCC_ConductingActualStartDate,KCC_ConductingActualClosure=@KCC_ConductingActualClosure,    
KCC_ConductingRemarks=@KCC_ConductingRemarks,KCC_ConductingCrBy=@KCC_ConductingCrBy,KCC_ConductingCrOn=GetDate(),    
KCC_ConductingIPaddress=@KCC_ConductingIPaddress,KCC_YearID=@KCC_YearID,KCC_ConductingKCCStatus=@KCC_ConductingKCCStatus,
KCC_ConductingStatus='Saved',KCC_ConductAttachID=@KCC_ConductAttachID   
where KCC_PKID=@KCC_PKID and KCC_CustID=@KCC_CustID and KCC_FunID=@KCC_FunID and KCC_CompID = @KCC_CompID    
Set @iUpdateOrSave=3      
Set @iOper = @KCC_PKID     
End 

/

CREATE PROCEDURE [dbo].[spRisk_KCC_PlanningSchecduling_Details]
(  
@KCC_PKID int,  
@KCC_CustID int, 
@KCC_AsgNo varchar(25),  
@KCC_FunID int,  
@KCC_SubFunID int,  
@KCC_Title varchar(2000),  
@KCC_Scope Varchar(2000),  
@KCC_ScheduleStartDate DateTime,  
@KCC_ScheduleClosure DateTime,  
@KCC_ReviewerTypeID int,  
@KCC_ReviewerID int,  
@KCC_CrBy int,  
@KCC_UpdatedBy int,  
@KCC_IPaddress Varchar(25),  
@KCC_CompID int,  
@KCC_YearID int, 
@KCC_PlanningAttachID int, 
@iUpdateOrSave int Output,                
@iOper int Output    
)   
AS  
If exists(select KCC_PKID,KCC_FunID from Risk_KCC_PlanningSchecduling_Details where KCC_PKID=@KCC_PKID and KCC_CustID=@KCC_CustID and KCC_CompID = @KCC_CompID)   
 Begin          
Update Risk_KCC_PlanningSchecduling_Details set KCC_AsgNo=@KCC_AsgNo,KCC_SubFunID=@KCC_SubFunID,KCC_Title=@KCC_Title,KCC_Scope=@KCC_Scope,KCC_ScheduleStartDate=@KCC_ScheduleStartDate,  
KCC_ScheduleClosure=@KCC_ScheduleClosure,KCC_ReviewerTypeID=@KCC_ReviewerTypeID,KCC_ReviewerID=@KCC_ReviewerID,KCC_UpdatedBy=@KCC_UpdatedBy,KCC_UpdatedOn=GetDate(),  
KCC_IPaddress=@KCC_IPaddress,KCC_YearID=@KCC_YearID,KCC_PlanningAttachID=@KCC_PlanningAttachID 
where KCC_PKID=@KCC_PKID and KCC_CustID=@KCC_CustID and KCC_CompID = @KCC_CompID  
Set @iUpdateOrSave=2    
Set @iOper = @KCC_PKID   
End  
Else           
BEGIN  
 Declare @KCC_Status Varchar(25)   
 Set @KCC_Status ='Saved'  
 set @KCC_PKID=(select isnull(max(KCC_PKID)+1,1) from Risk_KCC_PlanningSchecduling_Details where KCC_CompID = @KCC_CompID)  
 Insert into Risk_KCC_PlanningSchecduling_Details (KCC_PKID,KCC_CustID,KCC_AsgNo,KCC_FunID,KCC_SubFunID,KCC_Title,KCC_Scope,KCC_ScheduleStartDate,KCC_ScheduleClosure,  
 KCC_ReviewerTypeID,KCC_ReviewerID,KCC_CrBy,KCC_CrOn,KCC_IPaddress,KCC_CompID,KCC_YearID,KCC_Status,KCC_PlanningAttachID)    
 Values (@KCC_PKID,@KCC_CustID,@KCC_AsgNo,@KCC_FunID,@KCC_SubFunID,@KCC_Title,@KCC_Scope,@KCC_ScheduleStartDate,@KCC_ScheduleClosure,  
 @KCC_ReviewerTypeID,@KCC_ReviewerID,@KCC_CrBy,GetDate(),@KCC_IPaddress,@KCC_CompID,@KCC_YearID,@KCC_Status,@KCC_PlanningAttachID)    
 Set @iUpdateOrSave=3    
 Set @iOper = @KCC_PKID     
END 

/

CREATE PROCEDURE [dbo].[spRisk_KIR] 
(
  @KIR_Pkid   int,
  @KIR_TraceRefNo     varchar (50),
  @KIR_RiskActionable   varchar (2000),
  @KIR_AssignmentDate   DATETIME,
  @KIR_Month   varchar (50),
  @KIR_Email   varchar (50),
  @KIR_Trigger varchar (50),
  @KIR_CaseSummary     varchar (8000),
  @KIR_EntityInv varchar (50),
  @KIR_AdvisorCode     varchar (50),
  @KIR_AdvisorName     varchar (50),
  @KIR_EmpCode  int,
  @KIR_EmpName  varchar (50),
  @KIR_Channel  varchar (50),
  @KIR_CaseClassification varchar (2000),
  @KIR_RiskType int,
  @KIR_FraudReptdStage   varchar (2000),
  @KIR_ContractNo     varchar (50),
  @KIR_ActualLoss     varchar (50),
  @KIR_NotionalLoss    varchar (50),
  @KIR_LossAmtRecvd    varchar (50),
  @KIR_AsgnDate DATETIME,
  @KIR_InvOutcome     varchar(2000),
  @KIR_InvSummary     varchar(8000),
  @KIR_ClosureDate     DATETIME,
  @KIR_ClosureDays     varchar(50),
  @KIR_CauseInitiationDate DATETIME,
  @KIR_PreDispAction    varchar(2000),
  @KIR_ActionAgainstInter varchar(2000),
  @KIR_ActionAgainstEmp  varchar(2000),
  @KIR_NoActionRsn     varchar (8000),
  @KIR_MatrixAction    varchar (8000),
  @KIR_DeviationRsn    varchar (8000),
  @KIR_ZEDCDate DATETIME,
  @KIR_CEDCDate DATETIME,
  @KIR_KIRStatus  varchar (50),
  @KIR_FIRfrwdDate     DATETIME,
  @KIR_LawName  varchar (2000),
  @KIR_PreventiveStep   varchar (2000),
  @KIR_RCAstatus varchar (50),
  @KIR_RCAName  varchar (50),
  @KIR_CustName varchar (50),
  @KIR_Zone   int,
  @KIR_SMCode  varchar (50),
  @KIR_SMName  varchar (50),
  @KIR_Region  int,
  @KIR_Location varchar (50),
  @KIR_Plan   varchar (50),
  @KIR_Term   varchar (2000),
  @KIR_LoginDate DATETIME,
  @KIR_IssuanceDate    DATETIME,
  @KIR_Premium  varchar (2000),
  @KIR_SumAssured     varchar (2000),
  @KIR_BusinessSegment  varchar (2000),
  @KIR_ZCAR   varchar (2000),
  @KIR_DelFlag     varchar (2),
  @KIR_STATUS     varchar (3),
  @KIR_CrBy int,
  @KIR_IPAddress    varchar (25),
  @KIR_YearID  int,
  @KIR_CompID  int,
	@iUpdateOrSave int Output,     
	@iOper int output
   )
  AS
BEGIN 
 set @KIR_Pkid=(select isnull(max(KIR_Pkid)+1,1)from Risk_KIR)
 insert into Risk_KIR(KIR_Pkid,KIR_TraceRefNo,KIR_RiskActionable,KIR_AssignmentDate,KIR_Month,KIR_Email,KIR_Trigger,KIR_CaseSummary,KIR_EntityInv,KIR_AdvisorCode,KIR_AdvisorName,KIR_EmpCode,
KIR_EmpName,KIR_Channel,KIR_CaseClassification,KIR_RiskType,KIR_FraudReptdStage,KIR_ContractNo,KIR_ActualLoss,KIR_NotionalLoss,KIR_LossAmtRecvd,KIR_AsgnDate,
KIR_InvOutcome,KIR_InvSummary,KIR_ClosureDate,KIR_ClosureDays,KIR_CauseInitiationDate,KIR_PreDispAction,KIR_ActionAgainstInter,KIR_ActionAgainstEmp,
KIR_NoActionRsn,KIR_MatrixAction,KIR_DeviationRsn,KIR_ZEDCDate,KIR_CEDCDate,KIR_KIRStatus,KIR_FIRfrwdDate,KIR_LawName,KIR_PreventiveStep,KIR_RCAstatus,
KIR_RCAName,KIR_CustName,KIR_Zone,KIR_SMCode,KIR_SMName,KIR_Region,KIR_Location,KIR_Plan,KIR_Term,KIR_LoginDate,KIR_IssuanceDate,KIR_Premium,KIR_SumAssured,
KIR_BusinessSegment,KIR_ZCAR,KIR_DelFlag,KIR_STATUS,KIR_CrBy,KIR_CrOn,KIR_IPAddress,KIR_YearID,KIR_CompID)
values(@KIR_Pkid,@KIR_TraceRefNo,@KIR_RiskActionable,@KIR_AssignmentDate,@KIR_Month,@KIR_Email,@KIR_Trigger,@KIR_CaseSummary,@KIR_EntityInv,@KIR_AdvisorCode,@KIR_AdvisorName,@KIR_EmpCode,
@KIR_EmpName,@KIR_Channel,@KIR_CaseClassification,@KIR_RiskType,@KIR_FraudReptdStage,@KIR_ContractNo,@KIR_ActualLoss,@KIR_NotionalLoss,@KIR_LossAmtRecvd,@KIR_AsgnDate,
@KIR_InvOutcome,@KIR_InvSummary,@KIR_ClosureDate,@KIR_ClosureDays,@KIR_CauseInitiationDate,@KIR_PreDispAction,@KIR_ActionAgainstInter,@KIR_ActionAgainstEmp,
@KIR_NoActionRsn,@KIR_MatrixAction,@KIR_DeviationRsn,@KIR_ZEDCDate,@KIR_CEDCDate,@KIR_KIRStatus,@KIR_FIRfrwdDate,@KIR_LawName,@KIR_PreventiveStep,@KIR_RCAstatus,
@KIR_RCAName,@KIR_CustName,@KIR_Zone,@KIR_SMCode,@KIR_SMName,@KIR_Region,@KIR_Location,@KIR_Plan,@KIR_Term,@KIR_LoginDate,@KIR_IssuanceDate,@KIR_Premium,@KIR_SumAssured,
@KIR_BusinessSegment,@KIR_ZCAR,@KIR_DelFlag,@KIR_STATUS,@KIR_CrBy,Getdate(),@KIR_IPAddress,@KIR_YearID,@KIR_CompID)
 set @iUpdateOrSave=3  
 set @iOper =@KIR_Pkid 
END 

/

Create PROCEDURE [dbo].[spRisk_KRI]
(  
@KRI_PKID int,      
@KRI_CategoryID int,      
@KRI_RiskID int,      
@KRI_SubCategoryID int,      
@KRI_RiskDescription varchar(2000),      
@KRI_PeriodID int,      
@KRI_MeasureID varchar(2000),  
@KRI_AttachID int,       
@KRI_DelFlag varchar(2),      
@KRI_STATUS varchar(3),      
@KRI_CrBy int,      
@KRI_IPAddress varchar(25),      
@KRI_CompId int,      
@KRI_YearID int,      
@iUpdateOrSave int Output,                
@iOper int Output        
)      
AS      
BEGIN             
  set @KRI_PKID=(select isnull(max(KRI_PKID)+1,1) from Risk_KRI)                
 insert into Risk_KRI(KRI_PKID,KRI_CategoryID,KRI_RiskID,KRI_SubCategoryID,KRI_RiskDescription,KRI_PeriodID,KRI_MeasureID,KRI_AttachID,    
 KRI_DelFlag,KRI_STATUS,KRI_CrBy,KRI_CrOn,KRI_IPAddress,KRI_CompId,KRI_YearID)                
 values (@KRI_PKID,@KRI_CategoryID,@KRI_RiskID,@KRI_SubCategoryID,@KRI_RiskDescription,@KRI_PeriodID,@KRI_MeasureID, @KRI_AttachID,     
 @KRI_DelFlag,@KRI_STATUS,@KRI_CrBy,Getdate(),@KRI_IPAddress,@KRI_CompId,@KRI_YearID)          
  set @iUpdateOrSave=3                   
  set @iOper =@KRI_PKID       
END 

/

CREATE Procedure [dbo].[spRisk_RA]          

(                

@RA_PKID int,                

@RA_AsgNo Varchar(25),                

@RA_FinancialYear int,   

@RA_CustID Int,             

@RA_FunID int,    

@RA_Comments varchar(8000),           

@RA_CrBy int,                           

@RA_CompID int,                

@RA_IPAddress varchar(25),       

@iUpdateOrSave int Output,                

@iOper int Output                  

)       

As                      

if exists(select RA_PKID from Risk_RA where RA_FinancialYear=@RA_FinancialYear And RA_CustID=@RA_CustID And RA_FunID=@RA_FunID And RA_CompID=@RA_CompID)                  

Begin    

set @RA_PKID=(select RA_PKID from Risk_RA where RA_FinancialYear=@RA_FinancialYear And RA_CustID=@RA_CustID And RA_FunID=@RA_FunID And RA_CompID=@RA_CompID)     

Update Risk_RA set RA_Comments=@RA_Comments,RA_IPAddress=@RA_IPAddress           

where RA_PKID=@RA_PKID and   RA_CompID=@RA_CompID             

set @iUpdateOrSave=2               

set @iOper = @RA_PKID                

End                

Else                  

Begin                  

set @RA_PKID=(select IsNull(Max(RA_PKID)+1,1) from Risk_RA)                  

insert into Risk_RA(RA_PKID,RA_AsgNo,RA_FinancialYear,RA_CustID,RA_FunID,RA_Comments,RA_CrBy,RA_CrOn,RA_IPAddress,RA_Status,RA_CompID)                

values(@RA_PKID,@RA_AsgNo,@RA_FinancialYear,@RA_CustID,@RA_FunID,@RA_Comments,@RA_CrBy,Getdate(),@RA_IPAddress,'Saved',@RA_CompID)                  

set @iUpdateOrSave=3                 

set @iOper = @RA_PKID                   

End 

/

CREATE Procedure [dbo].[spRisk_RA_ActionPlan_History]
(            
@RAH_PKID int,
@RAH_RAPKID int,
@RAH_CustID Int,
@RAH_FUNID int,
@RAH_FinancialYear int,
@RAH_FactorIncrease varchar(2000),
@RAH_FactorDecrease varchar(2000),
@RAH_ActionPlan varchar(8000),
@RAH_TargetDate datetime,
@RAH_CrBy int,
@RAH_CompID int
)   
As                         
Begin             
set @RAH_PKID=(select IsNull(Max(RAH_PKID)+1,1) from Risk_RA_ActionPlan_History)              
insert into Risk_RA_ActionPlan_History(RAH_PKID,RAH_RAPKID,RAH_CustID,RAH_FUNID,RAH_FinancialYear,RAH_FactorIncrease,RAH_FactorDecrease,
RAH_ActionPlan,RAH_TargetDate,RAH_CrBy,RAH_CrOn,RAH_CompID)            
values(@RAH_PKID,@RAH_RAPKID,@RAH_CustID,@RAH_FUNID,@RAH_FinancialYear,@RAH_FactorIncrease,@RAH_FactorDecrease,@RAH_ActionPlan,@RAH_TargetDate,
@RAH_CrBy,Getdate(),@RAH_CompID)                         
End 

/

Create Procedure [dbo].[SpRisk_RA_Conduct_History]          
(                
@RAAH_PKID int,
@RAAH_RAAPKID int,
@RAAH_Comments varchar(8000),
@RAAH_UserID int,
@RAAH_Status varchar(25),
@RAAH_IPAddress varchar(25),
@RAAH_CompID int                                        
)                      
As                       
Begin          
set @RAAH_PKID=(select isnull(max(RAAH_PKID)+1,1) from Risk_RA_Conduct_History)    
  insert into Risk_RA_Conduct_History(RAAH_PKID,RAAH_RAAPKID,RAAH_Comments,RAAH_UserID,RAAH_Date,RAAH_Status,RAAH_IPAddress,RAAH_CompID)
  Values(@RAAH_PKID,@RAAH_RAAPKID,@RAAH_Comments,@RAAH_UserID,GetDate(),@RAAH_Status,@RAAH_IPAddress,@RAAH_CompID)                         
End 

/

Create Procedure [dbo].[spRisk_RA_Details]    
(            
@RAD_PKID int,  
@RAD_RAPKID int,  
@RAD_SEMID int,  
@RAD_PMID int,  
@RAD_SPMID int,  
@RAD_RiskID int,  
@RAD_RiskTypeID int,  
@RAD_ImpactID int,  
@RAD_LikelihoodID int,  
@RAD_RiskRating int,  
@RAD_ControlID int,  
@RAD_OES int,  
@RAD_DES int,  
@RAD_ControlRating int,  
@RAD_ChecksID int,  
@RAD_ResidualRiskRating int,  
@RAD_Remarks Varchar(2000),  
@RAD_IPAddress Varchar(25),  
@RAD_CompID int,       
@iUpdateOrSave int Output,            
@iOper int Output              
)   
As                  
if exists(Select RAD_PKID from Risk_RA_Details where RAD_RAPKID=@RAD_RAPKID And RAD_SEMID=@RAD_SEMID And
          RAD_PMID=@RAD_PMID And RAD_SPMID=@RAD_SPMID And RAD_RiskID=@RAD_RiskID 
          And RAD_RiskTypeID=@RAD_RiskTypeID And RAD_ControlID=@RAD_ControlID And RAD_ChecksID=@RAD_ChecksID And RAD_CompID=@RAD_CompID)  
Begin  
Set @RAD_PKID=(Select RAD_PKID from Risk_RA_Details where RAD_RAPKID=@RAD_RAPKID And RAD_SEMID=@RAD_SEMID And
          RAD_PMID=@RAD_PMID And RAD_SPMID=@RAD_SPMID And RAD_RiskID=@RAD_RiskID 
          And RAD_RiskTypeID=@RAD_RiskTypeID And RAD_ControlID=@RAD_ControlID And RAD_ChecksID=@RAD_ChecksID And RAD_CompID=@RAD_CompID)
          
Update Risk_RA_Details set RAD_ImpactID=@RAD_ImpactID,RAD_LikelihoodID=@RAD_LikelihoodID,RAD_RiskRating=@RAD_RiskRating,RAD_OES=@RAD_OES,RAD_DES=@RAD_DES,RAD_ControlRating=@RAD_ControlRating,RAD_ResidualRiskRating=@RAD_ResidualRiskRating,
RAD_IPAddress=@RAD_IPAddress,RAD_Remarks=@RAD_Remarks  
where RAD_PKID=@RAD_PKID and RAD_CompID=@RAD_CompID    
set @iUpdateOrSave=2           
set @iOper=@RAD_PKID            
End            
Else              
Begin              
set @RAD_PKID=(select IsNull(Max(RAD_PKID)+1,1) from Risk_RA_Details)              
insert into Risk_RA_Details(RAD_PKID,RAD_RAPKID,RAD_SEMID,RAD_PMID,RAD_SPMID,RAD_RiskID,RAD_RiskTypeID,RAD_ControlID,RAD_ChecksID,RAD_IPAddress,RAD_CompID)            
values(@RAD_PKID,@RAD_RAPKID,@RAD_SEMID,@RAD_PMID,@RAD_SPMID,@RAD_RiskID,@RAD_RiskTypeID,@RAD_ControlID,@RAD_ChecksID,@RAD_IPAddress,@RAD_CompID)              
set @iUpdateOrSave=3             
set @iOper=@RAD_PKID               
End 

/

CREATE Procedure [dbo].[spRisk_RCSA]           
(              
@RCSA_PKID int,              
@RCSA_AsgNo Varchar(25),              
@RCSA_FinancialYear int,  
@RCSA_CustID int,              
@RCSA_FunID int,  
@RCSA_OwnerID int,    
@RCSA_Comments varchar(8000),           
@RCSA_CrBy int,                      
@RCSA_CompID int,              
@RCSA_IPAddress varchar(25),  
@RCSA_Status varchar(25),  
@iUpdateOrSave int Output,              
@iOper int Output                
)     
As                    
if exists(select RCSA_PKID from Risk_RCSA where RCSA_FinancialYear=@RCSA_FinancialYear And RCSA_CustID=@RCSA_CustID And RCSA_FunID=@RCSA_FunID And RCSA_CompID=@RCSA_CompID)                
Begin  
set @RCSA_PKID=(select RCSA_PKID from Risk_RCSA where RCSA_FinancialYear=@RCSA_FinancialYear And RCSA_CustID=@RCSA_CustID And RCSA_FunID=@RCSA_FunID And RCSA_CompID=@RCSA_CompID)   
Update Risk_RCSA set RCSA_OwnerID=@RCSA_OwnerID,RCSA_Comments=@RCSA_Comments,RCSA_IPAddress=@RCSA_IPAddress      
where RCSA_PKID=@RCSA_PKID and RCSA_CompID=@RCSA_CompID           
set @iUpdateOrSave=2             
set @iOper = @RCSA_PKID              
End              
Else                
Begin                
set @RCSA_PKID=(select IsNull(Max(RCSA_PKID)+1,1) from Risk_RCSA)                
insert into Risk_RCSA(RCSA_PKID,RCSA_AsgNo,RCSA_FinancialYear,RCSA_CustID,RCSA_FunID,RCSA_OwnerID,RCSA_Comments,  
RCSA_CrBy,RCSA_CrOn,RCSA_IPAddress,RCSA_Status,RCSA_CompID)              
values(@RCSA_PKID,@RCSA_AsgNo,@RCSA_FinancialYear,@RCSA_CustID,@RCSA_FunID,@RCSA_OwnerID,@RCSA_Comments,  
@RCSA_CrBy,Getdate(),@RCSA_IPAddress,@RCSA_Status,@RCSA_CompID)                
set @iUpdateOrSave=3               
set @iOper = @RCSA_PKID                 
End 

/

Create Procedure [dbo].[spRisk_RCSA_ActionPlan_History]
(            
@RAH_PKID int,
@RAH_RCSAPKID int,
@RAH_CUSTID int,
@RAH_FUNID int,
@RAH_FinancialYear int,
@RAH_FactorIncrease varchar(2000),
@RAH_FactorDecrease varchar(2000),
@RAH_ActionPlan varchar(8000),
@RAH_TargetDate datetime,
@RAH_CrBy int,
@RAH_CompID int
)   
As                         
Begin             
set @RAH_PKID=(select IsNull(Max(RAH_PKID)+1,1) from Risk_RCSA_ActionPlan_History)              
insert into Risk_RCSA_ActionPlan_History(RAH_PKID,RAH_RCSAPKID,RAH_CUSTID,RAH_FUNID,RAH_FinancialYear,RAH_FactorIncrease,RAH_FactorDecrease,
RAH_ActionPlan,RAH_TargetDate,RAH_CrBy,RAH_CrOn,RAH_CompID)            
values(@RAH_PKID,@RAH_RCSAPKID,@RAH_CUSTID,@RAH_FUNID,@RAH_FinancialYear,@RAH_FactorIncrease,@RAH_FactorDecrease,@RAH_ActionPlan,@RAH_TargetDate,
@RAH_CrBy,Getdate(),@RAH_CompID)                         
End 

/

Create Procedure [dbo].[SpRisk_RCSA_Assign_History]              
(                
@RCSAAH_PKID int,
@RCSAAH_RCSAAPKID int,
@RCSAAH_Comments varchar(8000),
@RCSAAH_UserID int,
@RCSAAH_Status varchar(25),
@RCSAAH_IPAddress varchar(25),
@RCSAAH_CompID int                                        
)                      
As                       
Begin          
set @RCSAAH_PKID=(select isnull(max(RCSAAH_PKID)+1,1) from Risk_RCSA_Assign_History)    
  insert into Risk_RCSA_Assign_History(RCSAAH_PKID,RCSAAH_RCSAAPKID,RCSAAH_Comments,RCSAAH_UserID,RCSAAH_Date,RCSAAH_Status,RCSAAH_IPAddress,RCSAAH_CompID)
  Values(@RCSAAH_PKID,@RCSAAH_RCSAAPKID,@RCSAAH_Comments,@RCSAAH_UserID,GetDate(),@RCSAAH_Status,@RCSAAH_IPAddress,@RCSAAH_CompID)                         
End 

/

CREATE Procedure [dbo].[spRisk_RCSA_Details]      
(              
@RCSAD_PKID int,    
@RCSAD_RCSAPKID int,    
@RCSAD_SEMID int,    
@RCSAD_PMID int,    
@RCSAD_SPMID int,    
@RCSAD_RiskID int,    
@RCSAD_RiskTypeID int,    
@RCSAD_ImpactID int,    
@RCSAD_LikelihoodID int,    
@RCSAD_RiskRating int,    
@RCSAD_ControlID int,    
@RCSAD_OES int,    
@RCSAD_DES int,    
@RCSAD_ControlRating int,    
@RCSAD_ChecksID int,    
@RCSAD_ResidualRiskRating int,    
@RCSAD_Remarks Varchar(2000),    
@RCSAD_IPAddress Varchar(25),    
@RCSAD_CompID int,         
@iUpdateOrSave int Output,              
@iOper int Output                
)     
As                    
if exists(Select RCSAD_PKID from Risk_RCSA_Details where RCSAD_RCSAPKID=@RCSAD_RCSAPKID And RCSAD_SEMID=@RCSAD_SEMID And
          RCSAD_PMID=@RCSAD_PMID And RCSAD_SPMID=@RCSAD_SPMID And RCSAD_RiskID=@RCSAD_RiskID 
          And RCSAD_RiskTypeID=@RCSAD_RiskTypeID And RCSAD_ControlID=@RCSAD_ControlID And RCSAD_ChecksID=@RCSAD_ChecksID And RCSAD_CompID=@RCSAD_CompID)
Begin 
set @RCSAD_PKID=(Select RCSAD_PKID from Risk_RCSA_Details where RCSAD_RCSAPKID=@RCSAD_RCSAPKID And RCSAD_SEMID=@RCSAD_SEMID And
          RCSAD_PMID=@RCSAD_PMID And RCSAD_SPMID=@RCSAD_SPMID And RCSAD_RiskID=@RCSAD_RiskID 
          And RCSAD_RiskTypeID=@RCSAD_RiskTypeID And RCSAD_ControlID=@RCSAD_ControlID And RCSAD_ChecksID=@RCSAD_ChecksID And RCSAD_CompID=@RCSAD_CompID)
Update Risk_RCSA_Details set RCSAD_ImpactID=@RCSAD_ImpactID,RCSAD_LikelihoodID=@RCSAD_LikelihoodID,RCSAD_RiskRating=@RCSAD_RiskRating,RCSAD_OES=@RCSAD_OES,RCSAD_DES=@RCSAD_DES,RCSAD_ControlRating=@RCSAD_ControlRating,    
RCSAD_ResidualRiskRating=@RCSAD_ResidualRiskRating,RCSAD_IPAddress=@RCSAD_IPAddress,RCSAD_Remarks=@RCSAD_Remarks    
where RCSAD_PKID=@RCSAD_PKID and RCSAD_CompID=@RCSAD_CompID      
set @iUpdateOrSave=2             
set @iOper=@RCSAD_PKID              
End              
Else                
Begin                
set @RCSAD_PKID=(select IsNull(Max(RCSAD_PKID)+1,1) from Risk_RCSA_Details)                
insert into Risk_RCSA_Details(RCSAD_PKID,RCSAD_RCSAPKID,RCSAD_SEMID,RCSAD_PMID,RCSAD_SPMID,RCSAD_RiskID,RCSAD_RiskTypeID,RCSAD_ControlID,RCSAD_ChecksID,RCSAD_ImpactID,RCSAD_LikelihoodID,    
RCSAD_RiskRating,RCSAD_OES,RCSAD_DES,RCSAD_ControlRating,RCSAD_ResidualRiskRating,RCSAD_Remarks,RCSAD_IPAddress,RCSAD_CompID)              
values(@RCSAD_PKID,@RCSAD_RCSAPKID,@RCSAD_SEMID,@RCSAD_PMID,@RCSAD_SPMID,@RCSAD_RiskID,@RCSAD_RiskTypeID,@RCSAD_ControlID,@RCSAD_ChecksID,@RCSAD_ImpactID,@RCSAD_LikelihoodID,    
@RCSAD_RiskRating,@RCSAD_OES,@RCSAD_DES,@RCSAD_ControlRating,@RCSAD_ResidualRiskRating,@RCSAD_Remarks,@RCSAD_IPAddress,@RCSAD_CompID)                
set @iUpdateOrSave=3               
set @iOper=@RCSAD_PKID                 
End

/

CREATE PROCEDURE [dbo].[spRisk_RRF_PlanningSchecduling_Conducting]      
(    
@RPD_PKID  int,   
@RPD_CustID int, 
@RPD_FunID int,    
@RPD_SubFunID int,  
@RPD_ConductingActualStartDate DateTime,    
@RPD_ConductingActualClosure DateTime,    
@RPD_ConductingRemarks varchar(2000),    
@RPD_ConductingCrBy int,    
@RPD_ConductingUpdatedBy int,    
@RPD_ConductingIPaddress Varchar(25),    
@RPD_CompID int,    
@RPD_YearID int,    
@RPD_ConductingRRStatus varchar(25), 
@RPD_ConductAttachID int,   
@iUpdateOrSave int Output,                  
@iOper int Output      
)     
AS    
If exists(select RPD_PKID from Risk_RRF_PlanningSchecduling_Details where RPD_PKID=@RPD_PKID and RPD_ConductingStatus='Saved'and RPD_CompID = @RPD_CompID)     
 Begin            
Update Risk_RRF_PlanningSchecduling_Details set RPD_SubFunID=@RPD_SubFunID,RPD_ConductingActualStartDate=@RPD_ConductingActualStartDate,RPD_ConductingActualClosure=@RPD_ConductingActualClosure,    
RPD_ConductingRemarks=@RPD_ConductingRemarks,RPD_ConductingUpdatedBy=@RPD_ConductingUpdatedBy,RPD_ConductingUpdatedOn=GetDate(),    
RPD_ConductingIPaddress=@RPD_ConductingIPaddress,RPD_YearID=@RPD_YearID,RPD_ConductingRRStatus=@RPD_ConductingRRStatus,RPD_ConductAttachID=@RPD_ConductAttachID   
where RPD_PKID=@RPD_PKID and RPD_CustID=@RPD_CustID And RPD_FunID=@RPD_FunID and RPD_CompID=@RPD_CompID    
Set @iUpdateOrSave=2      
Set @iOper = @RPD_PKID     
End    
Else             
BEGIN    
 Declare @RPD_ConductingStatus Varchar(25)     
 Set @RPD_ConductingStatus ='Saved'    
Update Risk_RRF_PlanningSchecduling_Details  set RPD_SubFunID=@RPD_SubFunID,RPD_ConductingActualStartDate=@RPD_ConductingActualStartDate,RPD_ConductingActualClosure=@RPD_ConductingActualClosure,    
RPD_ConductingRemarks=@RPD_ConductingRemarks,RPD_ConductingCrBy=@RPD_ConductingCrBy,RPD_ConductingCrOn=GetDate(),    
RPD_ConductingIPaddress=@RPD_ConductingIPaddress,RPD_YearID=@RPD_YearID,RPD_ConductingRRStatus=@RPD_ConductingRRStatus,RPD_ConductingStatus=@RPD_ConductingStatus,
RPD_ConductAttachID=@RPD_ConductAttachID   
where RPD_PKID=@RPD_PKID and RPD_CustID=@RPD_CustID and RPD_FunID=@RPD_FunID and RPD_CompID = @RPD_CompID    
Set @iUpdateOrSave=3      
Set @iOper = @RPD_PKID     
End 

/

CREATE PROCEDURE [dbo].[spRisk_RRF_PlanningSchecduling_Details]          
(      
@RPD_PKID  int,      
@RPD_AsgNo varchar(25), 
@RPD_CustID int,     
@RPD_FunID int,     
@RPD_SubFunID int,      
@RPD_Title varchar(2000),      
@RPD_Scope Varchar(2000),      
@RPD_ScheduleStartDate DateTime,      
@RPD_ScheduleClosure DateTime,      
@RPD_ReviewerTypeID int,      
@RPD_ReviewerID int,  
@RPD_CrBy int,      
@RPD_UpdatedBy int,      
@RPD_IPaddress Varchar(25),      
@RPD_CompID int,      
@RPD_YearID int,
@RPD_PlanningAttachID int,      
@iUpdateOrSave int Output,                    
@iOper int Output        
)       
AS      
If exists(select RPD_PKID,RPD_FunID from Risk_RRF_PlanningSchecduling_Details where RPD_PKID=@RPD_PKID and RPD_CompID = @RPD_CompID)       
 Begin              
Update Risk_RRF_PlanningSchecduling_Details set RPD_AsgNo=@RPD_AsgNo,RPD_SubFunID=@RPD_SubFunID,RPD_Title=@RPD_Title,RPD_Scope=@RPD_Scope,RPD_ScheduleStartDate=@RPD_ScheduleStartDate,      
RPD_ScheduleClosure=@RPD_ScheduleClosure,RPD_ReviewerTypeID=@RPD_ReviewerTypeID,RPD_ReviewerID=@RPD_ReviewerID,RPD_UpdatedBy=@RPD_UpdatedBy,RPD_UpdatedOn=GetDate(),      
RPD_IPaddress=@RPD_IPaddress,RPD_YearID=@RPD_YearID,RPD_PlanningAttachID=@RPD_PlanningAttachID
where RPD_PKID=@RPD_PKID and RPD_CompID = @RPD_CompID      
Set @iUpdateOrSave=2        
Set @iOper = @RPD_PKID       
End      
Else               
BEGIN      
 Declare @RPD_Status Varchar(25)       
 Set @RPD_Status ='Saved'      
 set @RPD_PKID=(select isnull(max(RPD_PKID)+1,1) from Risk_RRF_PlanningSchecduling_Details where RPD_CompID = @RPD_CompID)      
 Insert into Risk_RRF_PlanningSchecduling_Details (RPD_PKID,RPD_AsgNo,RPD_CustID,RPD_FunID,RPD_SubFunID,RPD_Title,RPD_Scope,RPD_ScheduleStartDate,RPD_ScheduleClosure,      
 RPD_ReviewerTypeID,RPD_ReviewerID,RPD_CrBy,RPD_CrOn,RPD_IPaddress,RPD_CompID,RPD_YearID,RPD_Status,RPD_PlanningAttachID)        
 Values (@RPD_PKID,@RPD_AsgNo,@RPD_CustID,@RPD_FunID,@RPD_SubFunID,@RPD_Title,@RPD_Scope,@RPD_ScheduleStartDate,@RPD_ScheduleClosure,      
 @RPD_ReviewerTypeID,@RPD_ReviewerID,@RPD_CrBy,GetDate(),@RPD_IPaddress,@RPD_CompID,@RPD_YearID,@RPD_Status,@RPD_PlanningAttachID)        
 Set @iUpdateOrSave=3        
 Set @iOper = @RPD_PKID         
END 

/

CREATE Procedure [dbo].[spSAD_Compliance_Details]               
(                  
 @Comp_Id int,  
 @Comp_CustID int,  
 @Comp_Task int,  
 @Comp_Frequency int,  
 @Comp_LoginName varchar(50) NULL,  
 @Comp_Password varchar(25) NULL,  
 @Comp_Email varchar(100) NULL,  
 @Comp_MobileNo varchar(15),  
 @Comp_Accountdetails int,  
 @Comp_AadhaarAuthen varchar(100),  
 @Comp_GSTIN varchar(50),  
 @Comp_Remarks varchar(100),  
 @Comp_CRON datetime,  
 @Comp_CRBY int,  
 @Comp_UpdatedOn datetime,  
 @Comp_UpdatedBy int,  
 @Comp_DelFlag varchar(1),  
 @Comp_STATUS varchar(2),  
 @Comp_IPAddress varchar(25),  
 @Comp_CompID int,  
 @iUpdateOrSave int Output,                  
 @iOper int Output            
)         
As                        
if exists(select Comp_Id from SAD_Compliance_Details where Comp_Id= @Comp_Id And Comp_CompID=@Comp_CompID)                    
Begin      
set @Comp_Id=(select Comp_Id from SAD_Compliance_Details where Comp_Id= @Comp_Id And Comp_CompID=@Comp_CompID)       
Update SAD_Compliance_Details set Comp_Task=@Comp_Task,Comp_Frequency=@Comp_Frequency,Comp_LoginName=@Comp_LoginName,  
Comp_Password=@Comp_Password,Comp_Email=@Comp_Email,Comp_MobileNo=@Comp_MobileNo,Comp_Accountdetails=@Comp_Accountdetails,  
Comp_AadhaarAuthen=@Comp_AadhaarAuthen,Comp_GSTIN=@Comp_GSTIN,Comp_Remarks=@Comp_Remarks,  
Comp_UpdatedOn=getdate(),Comp_UpdatedBy=@Comp_UpdatedBy,Comp_IPAddress=@Comp_IPAddress where Comp_Id=@Comp_Id and Comp_CustID=@Comp_CustID and Comp_CompID=@Comp_CompID   
set @iUpdateOrSave=2                 
set @iOper = @Comp_Id            
End                  
Else                     
Begin                    
set @Comp_Id=(select IsNull(Max(Comp_Id)+1,1) from SAD_Compliance_Details)                    
insert into SAD_Compliance_Details(Comp_Id,Comp_CustID,Comp_Task,Comp_Frequency,Comp_LoginName,Comp_Password,Comp_Email,  
Comp_MobileNo,Comp_Accountdetails,Comp_AadhaarAuthen,Comp_GSTIN,Comp_Remarks,Comp_CRON,Comp_CRBY,Comp_DelFlag,  
Comp_STATUS,Comp_IPAddress,Comp_CompID)                  
values(@Comp_Id,@Comp_CustID,@Comp_Task,@Comp_Frequency,@Comp_LoginName,@Comp_Password,@Comp_Email,  
@Comp_MobileNo,@Comp_Accountdetails,@Comp_AadhaarAuthen,@Comp_GSTIN,@Comp_Remarks,Getdate(),@Comp_CRBY,@Comp_DelFlag,  
@Comp_STATUS,@Comp_IPAddress,@Comp_CompID)                
set @iUpdateOrSave=3                   
set @iOper = @Comp_Id  
End 

/

Create Procedure [dbo].[spSAD_CUST_Accounting_Template]
(
@Cust_PKID int,
@Cust_ID int,
@Cust_Desc Varchar(100),
@Cust_Value Varchar(100),
@Cust_Delflag Varchar(1),
@Cust_Status Varchar(2),
@Cust_AttchID int,
@Cust_CrBy int,
@Cust_UpdatedBy int,
@Cust_IPAddress Varchar(25),
@Cust_Compid int,
@Cust_LocationId int,
@iUpdateOrSave int Output,
@iOper int Output
)
As
Begin
set @Cust_PKID=(select IsNull(Max(Cust_PKID)+1,1) from SAD_CUST_Accounting_Template)
insert into SAD_CUST_Accounting_Template(Cust_PKID,Cust_ID,Cust_Desc,Cust_Value,Cust_Delflag,Cust_Status,Cust_AttchID,Cust_CrBy,Cust_CrOn,Cust_IPAddress,Cust_Compid,Cust_LocationId)
values(@Cust_PKID,@Cust_ID,@Cust_Desc,@Cust_Value,@Cust_Delflag,@Cust_Status,@Cust_AttchID,@Cust_CrBy,Getdate(),@Cust_IPAddress,@Cust_Compid,@Cust_LocationId)
set @iUpdateOrSave=3
set @iOper = @Cust_PKID
End   

/

Create Procedure [dbo].[spSAD_CUST_LOCATION]             
(                
@Mas_Id int,    
@Mas_code varchar(10),    
@Mas_Description varchar(100),    
@Mas_DelFlag varchar(1),    
@Mas_CustID int,    
@Mas_Loc_Address varchar(500),    
@Mas_Contact_Person varchar(50),    
@Mas_Contact_MobileNo varchar(15),    
@Mas_Contact_LandLineNo varchar(50),    
@Mas_Contact_Email varchar(100),    
@mas_Designation varchar(500),    
@Mas_CRBY int,    
@Mas_UpdatedBy int,    
@Mas_STATUS varchar(2),    
@Mas_IPAddress varchar(25),    
@Mas_CompID int,    
@iUpdateOrSave int Output,                
@iOper int Output          
)       
As                      
if exists(select Mas_Id from SAD_CUST_LOCATION where Mas_Id= @Mas_Id And Mas_CompID=@Mas_CompID)                  
Begin    
set @Mas_Id=(select Mas_Id from SAD_CUST_LOCATION where Mas_Id= @Mas_Id And Mas_CompID=@Mas_CompID)     
Update SAD_CUST_LOCATION set Mas_code=@Mas_code,Mas_Description=@Mas_Description,Mas_DelFlag=@Mas_DelFlag,
Mas_Loc_Address=@Mas_Loc_Address,Mas_Contact_Person=@Mas_Contact_Person,Mas_Contact_MobileNo=@Mas_Contact_MobileNo ,
Mas_Contact_LandLineNo=@Mas_Contact_LandLineNo,Mas_Contact_Email=@Mas_Contact_Email,mas_Designation=@mas_Designation,
Mas_UpdatedOn=getdate(),Mas_UpdatedBy=@Mas_UpdatedBy,Mas_IPAddress=@Mas_IPAddress where Mas_Id=@Mas_Id and Mas_CustID=@Mas_CustID and Mas_CompID=@Mas_CompID    
set @iUpdateOrSave=2               
set @iOper = @Mas_Id                
End                
Else                   
Begin                  
set @Mas_Id=(select IsNull(Max(Mas_Id)+1,1) from SAD_CUST_LOCATION)                  
insert into SAD_CUST_LOCATION(Mas_Id,Mas_code,Mas_Description,Mas_DelFlag,Mas_CustID,Mas_Loc_Address,
Mas_Contact_Person,Mas_Contact_MobileNo,Mas_Contact_LandLineNo, Mas_Contact_Email,mas_Designation,Mas_CRON,Mas_CRBY,
Mas_STATUS,Mas_IPAddress,Mas_CompID)                
values(@Mas_Id,@Mas_code,@Mas_Description,@Mas_DelFlag,@Mas_CustID,@Mas_Loc_Address,@Mas_Contact_Person,
@Mas_Contact_MobileNo,@Mas_Contact_LandLineNo, @Mas_Contact_Email,@mas_Designation,Getdate(),@Mas_CRBY,@Mas_STATUS,
@Mas_IPAddress,@Mas_CompID)              
set @iUpdateOrSave=3                 
set @iOper = @Mas_Id
End 

/

CREATE Procedure [dbo].[spSAD_CUST_LOE]             
(                
@LOE_Id int,    
@LOE_YearId int,    
@LOE_CustomerId int,    
@LOE_ServiceTypeId int,    
@LOE_NatureOfService varchar(200),    
@LOE_LocationIds varchar(50),    
@LOE_Milestones varchar (100),    
@LOE_TimeSchedule datetime,    
@LOE_ReportDueDate datetime,    
@LOE_ProfessionalFees int,    
@LOE_OtherFees int,    
@LOE_ServiceTax int,    
@LOE_RembFilingFee int,    
@LOE_CrBy int,    
@LOE_Total int,    
@LOE_Name varchar(200),    
@LOE_Frequency int,    
@LOE_FunctionId int,    
@LOE_SubFunctionId varchar (100),    
@LOE_UpdatedBy int,    
@LOE_STATUS varchar(2),    
@LOE_IPAddress varchar(25),    
@LOE_CompID int,    
@iUpdateOrSave int Output,                
@iOper int Output          
)       
As                      
if exists(select LOE_Id from  SAD_CUST_LOE where LOE_Id= @LOE_Id And LOE_CustomerId=@LOE_CustomerId and LOE_YearId=@LOE_YearId and LOE_CompID=@LOE_CompID)                  
Begin    
set @LOE_Id=(select LOE_Id from  SAD_CUST_LOE where LOE_Id= @LOE_Id And LOE_CustomerId=@LOE_CustomerId and LOE_YearId=@LOE_YearId and LOE_CompID=@LOE_CompID)                
Update  SAD_CUST_LOE set  LOE_ServiceTypeId=@LOE_ServiceTypeId,LOE_NatureOfService=@LOE_NatureOfService ,
LOE_LocationIds=@LOE_LocationIds,LOE_Milestones=@LOE_Milestones,LOE_TimeSchedule=@LOE_TimeSchedule,
LOE_ReportDueDate=@LOE_ReportDueDate, LOE_ProfessionalFees=@LOE_ProfessionalFees,LOE_OtherFees=@LOE_OtherFees,
LOE_ServiceTax=@LOE_ServiceTax,LOE_RembFilingFee=@LOE_RembFilingFee ,LOE_Total=@LOE_Total,
LOE_Frequency=@LOE_Frequency,LOE_FunctionId=@LOE_FunctionId,LOE_SubFunctionId=@LOE_SubFunctionId, 
LOE_UpdatedOn=getdate(),LOE_UpdatedBy=@LOE_UpdatedBy,LOE_IPAddress=@LOE_IPAddress    
where LOE_Id=@LOE_Id and LOE_CompID=@LOE_CompID         
set @iUpdateOrSave=2               
set @iOper = @LOE_Id                
End                
Else                   
Begin                  
set @LOE_Id=(select IsNull(Max(LOE_Id)+1,1) from  SAD_CUST_LOE)                  
insert into  SAD_CUST_LOE(LOE_Id,LOE_YearId,LOE_CustomerId,LOE_ServiceTypeId,LOE_NatureOfService,
LOE_LocationIds,LOE_Milestones,LOE_TimeSchedule ,LOE_ReportDueDate,LOE_ProfessionalFees,LOE_OtherFees,
LOE_ServiceTax,LOE_RembFilingFee,LOE_CrBy,  
LOE_CrOn,LOE_Total,LOE_Name ,LOE_Frequency,LOE_FunctionId,LOE_SubFunctionId,LOE_STATUS,LOE_IPAddress,LOE_CompID)                
values(@LOE_Id,@LOE_YearId,@LOE_CustomerId,@LOE_ServiceTypeId,@LOE_NatureOfService,@LOE_LocationIds,@LOE_Milestones
,@LOE_TimeSchedule ,@LOE_ReportDueDate,@LOE_ProfessionalFees,@LOE_OtherFees,@LOE_ServiceTax,@LOE_RembFilingFee,
@LOE_CrBy,getdate(),  
@LOE_Total,@LOE_Name ,@LOE_Frequency,@LOE_FunctionId,@LOE_SubFunctionId,@LOE_STATUS,@LOE_IPAddress,@LOE_CompID)                  
set @iUpdateOrSave=3                 
set @iOper = @LOE_Id                   
End

/

Create Procedure [dbo].[spSAD_CUSTOMER_DETAILS]            
(                
@CDET_ID int,    
@CDET_CUSTID int,    
@CDET_STANDINGININDUSTRY varchar(255),    
@CDET_PUBLICPERCEPTION varchar(255),    
@CDET_GOVTPERCEPTION varchar(255),    
@CDET_LITIGATIONISSUES varchar(255),    
@CDET_PRODUCTSMANUFACTURED varchar(255),    
@CDET_SERVICESOFFERED varchar(255),    
@CDET_TURNOVER varchar(255),    
@CDET_PROFITABILITY varchar(255),    
@CDET_FOREIGNCOLLABORATIONS varchar(255),    
@CDET_EMPLOYEESTRENGTH varchar(255),    
@CDET_PROFESSIONALSERVICES varchar(255),    
@CDET_GATHEREDBYAUDITFIRM varchar(255),    
@CDET_LEGALADVISORS varchar(255),    
@CDET_AUDITINCHARGE varchar(255),    
@CDET_FileNo varchar(500),    
@CDET_CRBY int,    
@CDET_UpdatedBy int,    
@CDET_STATUS varchar(2),    
@CDET_IPAddress varchar(25),    
@CDET_CompID int,    
@iUpdateOrSave int Output,                
@iOper int Output          
)       
As                      
if exists(select CDET_ID from SAD_CUSTOMER_DETAILS where CDET_CUSTID= @CDET_CUSTID And CDET_CompID=@CDET_CompID)                  
Begin    
set @CDET_ID=(select CDET_ID from SAD_CUSTOMER_DETAILS where CDET_CUSTID= @CDET_CUSTID And CDET_CompID=@CDET_CompID)                  
Update SAD_CUSTOMER_DETAILS set  CDET_STANDINGININDUSTRY=@CDET_STANDINGININDUSTRY,CDET_PUBLICPERCEPTION=@CDET_PUBLICPERCEPTION ,
CDET_GOVTPERCEPTION=@CDET_GOVTPERCEPTION,CDET_LITIGATIONISSUES=@CDET_LITIGATIONISSUES,CDET_PRODUCTSMANUFACTURED=@CDET_PRODUCTSMANUFACTURED ,
CDET_SERVICESOFFERED=@CDET_SERVICESOFFERED,CDET_TURNOVER=@CDET_TURNOVER,CDET_PROFITABILITY=@CDET_PROFITABILITY, 
CDET_FOREIGNCOLLABORATIONS=@CDET_FOREIGNCOLLABORATIONS,CDET_EMPLOYEESTRENGTH=@CDET_EMPLOYEESTRENGTH,
CDET_PROFESSIONALSERVICES=@CDET_PROFESSIONALSERVICES,CDET_GATHEREDBYAUDITFIRM=@CDET_GATHEREDBYAUDITFIRM ,CDET_LEGALADVISORS=@CDET_LEGALADVISORS,
CDET_AUDITINCHARGE=@CDET_AUDITINCHARGE,CDET_FileNo=@CDET_FileNo ,CDET_UpdatedOn=getdate(),CDET_UpdatedBy=@CDET_UpdatedBy,  
CDET_IPAddress=@CDET_IPAddress    
where CDET_ID=@CDET_ID and CDET_CompID=@CDET_CompID             
set @iUpdateOrSave=2               
set @iOper = @CDET_ID                
End                
Else                   
Begin                  
set @CDET_ID=(select IsNull(Max(CDET_ID)+1,1) from SAD_CUSTOMER_DETAILS)                  
insert into SAD_CUSTOMER_DETAILS(CDET_ID,CDET_CUSTID,CDET_STANDINGININDUSTRY,CDET_PUBLICPERCEPTION,CDET_GOVTPERCEPTION,CDET_LITIGATIONISSUES,
CDET_PRODUCTSMANUFACTURED,CDET_SERVICESOFFERED ,CDET_TURNOVER,CDET_PROFITABILITY,CDET_FOREIGNCOLLABORATIONS,CDET_EMPLOYEESTRENGTH,CDET_PROFESSIONALSERVICES,
CDET_GATHEREDBYAUDITFIRM,CDET_LEGALADVISORS ,CDET_AUDITINCHARGE,CDET_FileNo,CDET_CRON,CDET_CRBY,CDET_STATUS,CDET_IPAddress,CDET_CompID)                
values(@CDET_ID,@CDET_CUSTID,@CDET_STANDINGININDUSTRY,@CDET_PUBLICPERCEPTION,@CDET_GOVTPERCEPTION,@CDET_LITIGATIONISSUES,@CDET_PRODUCTSMANUFACTURED,
@CDET_SERVICESOFFERED ,@CDET_TURNOVER,@CDET_PROFITABILITY,@CDET_FOREIGNCOLLABORATIONS,@CDET_EMPLOYEESTRENGTH,
@CDET_PROFESSIONALSERVICES,@CDET_GATHEREDBYAUDITFIRM,@CDET_LEGALADVISORS ,@CDET_AUDITINCHARGE,@CDET_FileNo,Getdate(),@CDET_CRBY,@CDET_STATUS,@CDET_IPAddress
,@CDET_CompID)                  
set @iUpdateOrSave=3                 
set @iOper = @CDET_ID                   
End 

/

 CREATE Procedure [dbo].[spSAD_CUSTOMER_MASTER]                 
(                    
@CUST_ID int,        
@CUST_NAME varchar(150),        
@CUST_CODE varchar(50),        
@CUST_WEBSITE varchar(50),        
@CUST_EMAIL varchar(50),        
@CUST_GROUPNAME varchar(50),        
@CUST_GROUPINDIVIDUAL int,        
@CUST_ORGTYPEID int,        
@CUST_INDTYPEID int,        
@CUST_MGMTTYPEID int,        
@CUST_CommitmentDate datetime,        
@CUSt_BranchId varchar(100),      
@CUST_COMM_ADDRESS varchar(1000),        
@CUST_COMM_CITY varchar(100),        
@CUST_COMM_PIN varchar(10),        
@CUST_COMM_STATE varchar(100),        
@CUST_COMM_COUNTRY varchar(100),        
@CUST_COMM_FAX varchar(50),        
@CUST_COMM_TEL varchar(50),        
@CUST_COMM_Email varchar(50),        
@CUST_ADDRESS varchar(1000),        
@CUST_CITY varchar(100),        
@CUST_PIN varchar(10),        
@CUST_STATE varchar(100),        
@CUST_COUNTRY varchar(100),        
@CUST_FAX varchar(50),        
@CUST_TELPHONE varchar(50),        
@CUST_ConEmailID varchar(50),        
@CUST_LOCATIONID varchar(50),        
@CUST_TASKS varchar(50),        
@CUST_ORGID int,        
@CUST_CRBY int,        
@CUST_UpdatedBy int,        
@CUST_BOARDOFDIRECTORS varchar(255),   
@CUST_DEPMETHOD int,  
@CUST_IPAddress varchar(25),        
@CUST_CompID int, 
@CUST_Amount_Type int,
@CUST_RoundOff int, 
@iUpdateOrSave int Output,                    
@iOper int Output              
)           
As                          
if exists(select CUST_ID from SAD_CUSTOMER_MASTER where CUST_ID= @CUST_ID And CUST_CompID=@CUST_CompID)                      
Begin                          
 set @CUST_ID=(select CUST_ID from SAD_CUSTOMER_MASTER where CUST_ID= @CUST_ID And CUST_CompID=@CUST_CompID)                      
  Update SAD_CUSTOMER_MASTER set  CUST_NAME=@CUST_NAME,CUST_WEBSITE=@CUST_WEBSITE,CUST_EMAIL=@CUST_EMAIL,CUST_GROUPNAME=@CUST_GROUPNAME,CUST_GROUPINDIVIDUAL=@CUST_GROUPINDIVIDUAL, CUST_ORGTYPEID=@CUST_ORGTYPEID,CUST_INDTYPEID=@CUST_INDTYPEID,      
  CUST_MGMTTYPEID=@CUST_MGMTTYPEID,CUST_CommitmentDate=@CUST_CommitmentDate, CUSt_BranchId=@CUSt_BranchId,CUST_COMM_ADDRESS=@CUST_COMM_ADDRESS,CUST_COMM_CITY=@CUST_COMM_CITY,CUST_COMM_PIN=@CUST_COMM_PIN,CUST_COMM_STATE=@CUST_COMM_STATE,       
  CUST_COMM_COUNTRY=@CUST_COMM_COUNTRY,CUST_COMM_FAX=@CUST_COMM_FAX,CUST_COMM_TEL=@CUST_COMM_TEL,CUST_COMM_Email=@CUST_COMM_Email,CUST_ADDRESS=@CUST_ADDRESS, CUST_CITY=@CUST_CITY,CUST_PIN=@CUST_PIN,CUST_STATE=@CUST_STATE,CUST_COUNTRY=@CUST_COUNTRY,      
  CUST_FAX=@CUST_FAX,CUST_TELPHONE=@CUST_TELPHONE, CUST_ConEmailID=@CUST_ConEmailID,CUST_LOCATIONID=@CUST_LOCATIONID,CUST_TASKS=@CUST_TASKS,CUST_ORGID=@CUST_ORGID, CUST_UpdatedOn=Getdate(),CUST_UpdatedBy=@CUST_UpdatedBy,      
  CUST_BOARDOFDIRECTORS=@CUST_BOARDOFDIRECTORS,CUST_DEPMETHOD=@CUST_DEPMETHOD,
  CUST_STATUS='U',CUST_IPAddress=@CUST_IPAddress, CUST_Amount_Type = @CUST_Amount_Type,    
  CUST_RoundOff = @CUST_RoundOff
  where CUST_ID=@CUST_ID and CUST_CompID=@CUST_CompID                   
  set @iUpdateOrSave=2                   
  set @iOper = @CUST_ID                    
End                    
Else                       
Begin                      
set @CUST_ID=(select IsNull(Max(CUST_ID)+1,1) from SAD_CUSTOMER_MASTER)                      
   insert into SAD_CUSTOMER_MASTER(CUST_ID,CUST_NAME,CUST_CODE,CUST_WEBSITE,CUST_EMAIL,CUST_GROUPNAME,CUST_GROUPINDIVIDUAL,CUST_ORGTYPEID ,CUST_INDTYPEID,CUST_MGMTTYPEID,CUST_CommitmentDate,CUSt_BranchId,CUST_COMM_ADDRESS,CUST_COMM_CITY,CUST_COMM_PIN ,   
    CUST_COMM_STATE, CUST_COMM_COUNTRY,CUST_COMM_FAX,CUST_COMM_TEL,CUST_COMM_Email,CUST_ADDRESS,CUST_CITY,CUST_PIN ,
	CUST_STATE,CUST_COUNTRY,CUST_FAX,CUST_TELPHONE,CUST_ConEmailID,CUST_LOCATIONID,CUST_TASKS,CUST_ORGID,CUST_DELFLG ,
	CUST_CRON,CUST_CRBY,CUST_BOARDOFDIRECTORS,
	CUST_DEPMETHOD,CUST_STATUS,CUST_CompID,CUST_Amount_Type,CUST_RoundOff)                    
   values(@CUST_ID,@CUST_NAME,@CUST_CODE,@CUST_WEBSITE,@CUST_EMAIL,@CUST_GROUPNAME,@CUST_GROUPINDIVIDUAL,@CUST_ORGTYPEID,
   @CUST_INDTYPEID,@CUST_MGMTTYPEID,@CUST_CommitmentDate,@CUSt_BranchId,@CUST_COMM_ADDRESS,@CUST_COMM_CITY,
   @CUST_COMM_PIN ,@CUST_COMM_STATE,  
   @CUST_COMM_COUNTRY,@CUST_COMM_FAX,@CUST_COMM_TEL,@CUST_COMM_Email,@CUST_ADDRESS,@CUST_CITY,@CUST_PIN ,
   @CUST_STATE,@CUST_COUNTRY,@CUST_FAX,@CUST_TELPHONE,@CUST_ConEmailID,@CUST_LOCATIONID,@CUST_TASKS,@CUST_ORGID,
   'W' ,Getdate(),@CUST_CRBY,@CUST_BOARDOFDIRECTORS,
   @CUST_DEPMETHOD,'C',@CUST_CompID,@CUST_Amount_Type,@CUST_RoundOff)                      
   set @iUpdateOrSave=3                     
   set @iOper = @CUST_ID                       
End

/

CREATE Procedure [dbo].[spSAD_EmpCategory_Charges]
(                          
@EMPC_Id int,        
@EMPC_CAT_ID int,        
@EMPC_HOURS int,        
@EMPC_CHARGES money,             
@EMPC_DelFlag Char(1),        
@EMPC_CompiD int,          
@EMPC_YearID int,        
@EMPC_CreatedBy int,        
@EMPC_UpdatedBy int,        
@EMPC_IPAddress Varchar(25),        
@EMPC_Remarks VarChar(500),        
@iUpdateOrSave int Output,                        
@iOper int Output                        
)                            
 as                               
  if exists(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID And EMPC_Status='Saved')                                
begin  
Set @EMPC_Id=(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID And EMPC_Status='Saved')                            
    Update SAD_EmpCategory_Charges set EMPC_HOURS=@EMPC_HOURS,EMPC_CHARGES=@EMPC_CHARGES,EMPC_UpdatedBy=@EMPC_UpdatedBy,EMPC_UpdatedOn=Getdate(),EMPC_IPAddress=@EMPC_IPAddress,EMPC_Remarks=@EMPC_Remarks      
    Where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompiD = @EMPC_CompiD And EMPC_YearID=@EMPC_YearID And EMPC_Status='Saved'       
    set @iUpdateOrSave=2                            
    set @iOper = (select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompiD = @EMPC_CompiD)                                      
end                                      
  else if exists(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID)                                
begin  
Set @EMPC_Id=(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID)                            
    Update SAD_EmpCategory_Charges set EMPC_HOURS=@EMPC_HOURS,EMPC_CHARGES=@EMPC_CHARGES,EMPC_DelFlag=@EMPC_DelFlag,EMPC_Status='Saved',
	EMPC_CreatedBy=@EMPC_CreatedBy,EMPC_CreatedOn=Getdate(),EMPC_IPAddress=@EMPC_IPAddress,EMPC_Remarks=@EMPC_Remarks      
    Where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompiD = @EMPC_CompiD And EMPC_YearID=@EMPC_YearID       
    set @iUpdateOrSave=2                            
    set @iOper = (select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompiD = @EMPC_CompiD)                                      
end                                      
  else                                   
begin                      
  set @EMPC_Id=(select isnull(max(EMPC_Id)+1,1) from SAD_EmpCategory_Charges)                          
  Insert into SAD_EmpCategory_Charges (EMPC_Id,EMPC_CAT_ID,EMPC_HOURS,EMPC_CHARGES,EMPC_DelFlag,EMPC_Status,EMPC_CompiD,EMPC_YearID,EMPC_CreatedBy,EMPC_CreatedOn,EMPC_IPAddress,EMPC_Remarks)                  
  values (@EMPC_Id,@EMPC_CAT_ID,@EMPC_HOURS,@EMPC_CHARGES,@EMPC_DelFlag,'Saved',@EMPC_CompiD,@EMPC_YearID,@EMPC_CreatedBy,GetDate(),@EMPC_IPAddress,@EMPC_Remarks)                
  set @iUpdateOrSave=3                         
  set @iOper = @EMPC_Id                             
End

/

CREATE Procedure [dbo].[spSAD_EmpConveyance_Charges]
(                          
@EMPC_Id int,        
@EMPC_CAT_ID int,                
@EMPC_KMCharges money, 
@EMPC_CompiD int, 
@EMPC_YearID int, 
@EMPC_IPAddress Varchar(25),    
@EMPC_CRemarks VarChar(500),                           
@EMPC_CCreatedBy int,        
@EMPC_CUpdatedBy int,        
@EMPC_CDelFlag Char(1),            
@iUpdateOrSave int Output,                        
@iOper int Output                        
)                            
 as                               
  if exists(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID And EMPC_CStatus='Saved')                       
begin  
Set @EMPC_Id=(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID And EMPC_CStatus='Saved')                         
     Update SAD_EmpCategory_Charges set EMPC_KMCharges=@EMPC_KMCharges,EMPC_CUpdatedBy=@EMPC_CUpdatedBy,EMPC_CUpdatedOn=Getdate(),EMPC_IPAddress=@EMPC_IPAddress,EMPC_CRemarks=@EMPC_CRemarks      
    Where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID And EMPC_CStatus='Saved'       
    set @iUpdateOrSave=2                            
    set @iOper = @EMPC_Id                                   
end                                      
  else if exists(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID)                       
begin  
Set @EMPC_Id=(select EMPC_Id from SAD_EmpCategory_Charges where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID)                         
     Update SAD_EmpCategory_Charges set EMPC_KMCharges=@EMPC_KMCharges,EMPC_CCreatedBy=@EMPC_CCreatedBy,EMPC_CCreatedOn=Getdate(),EMPC_CDelFlag=@EMPC_CDelFlag,EMPC_CStatus='Saved',
	 EMPC_IPAddress=@EMPC_IPAddress,EMPC_CRemarks=@EMPC_CRemarks      
    Where EMPC_CAT_ID=@EMPC_CAT_ID and EMPC_CompID = @EMPC_CompID And EMPC_CompID = @EMPC_CompID And EMPC_YearID=@EMPC_YearID    
    set @iUpdateOrSave=2                            
    set @iOper = @EMPC_Id                                   
end                                      
  else                                   
begin                      
  set @EMPC_Id=(select isnull(max(EMPC_Id)+1,1) from SAD_EmpCategory_Charges)                          
  Insert into SAD_EmpCategory_Charges (EMPC_Id,EMPC_CAT_ID,EMPC_KMCharges,EMPC_CDelFlag,EMPC_CStatus,EMPC_CompiD,EMPC_YearID,EMPC_CCreatedBy,EMPC_CCreatedOn,EMPC_IPAddress,EMPC_CRemarks)                  
  values (@EMPC_Id,@EMPC_CAT_ID,@EMPC_KMCharges,@EMPC_CDelFlag,'Saved',@EMPC_CompID,@EMPC_YearID,@EMPC_CCreatedBy,GetDate(),@EMPC_IPAddress,@EMPC_CRemarks)                
  set @iUpdateOrSave=3                         
  set @iOper = @EMPC_Id                             
End

/

CREATE Procedure [dbo].[spSAD_Finalisation_Report_Contents]
(                      
@FPT_Id [int] ,         
@FPT_FunctionId [int] ,    
@FPT_FunctionName [varchar](500) ,    
@FPT_Title [varchar](500) ,    
@FPT_Details [varchar](6000) ,    
@FPT_CompID int,    
@FPT_Yearid [int] ,    
@FPT_CrBy [int] ,    
@FPT_UpdatedBy [int] ,    
@FPT_IPAddress [Varchar](25),     
@iUpdateOrSave int Output,                    
@iOper int Output                    
)                        
 as                           
  if exists(select FPT_Id from SAD_Finalisation_Report_Contents where FPT_Title=@FPT_Title And FPT_Id=@FPT_Id And FPT_FunctionId=@FPT_FunctionId and FPT_CompiD = @FPT_CompiD And FPT_YearID=@FPT_YearID )                            
   begin                         
Update SAD_Finalisation_Report_Contents set FPT_Title=@FPT_Title,FPT_Details=@FPT_Details,FPT_UpdatedBy=@FPT_UpdatedBy,FPT_UpdatedOn=GetDate()    
  Where FPT_Id=@FPT_Id And FPT_FunctionId=@FPT_FunctionId and FPT_CompiD = @FPT_CompiD And FPT_YearID=@FPT_YearID    
  set @iUpdateOrSave=2                        
  set @iOper = @FPT_Id    
end                                  
  else                                      
begin                  
  set @FPT_Id=(select isnull(max(FPT_Id)+1,1) from SAD_Finalisation_Report_Contents)                      
  Insert into SAD_Finalisation_Report_Contents (FPT_Id,FPT_FunctionId,FPT_FunctionName,FPT_Title,FPT_Details,FPT_Delflag,FPT_Status,FPT_CompID,FPT_Yearid,FPT_CrBy,FPT_CrOn,FPT_IPAddress)              
  values (@FPT_Id,@FPT_FunctionId,@FPT_FunctionName,@FPT_Title,@FPT_Details,'A','C',@FPT_CompID,@FPT_Yearid,@FPT_CrBy,GetDate(),@FPT_IPAddress)                 
  set @iUpdateOrSave=3                     
  set @iOper = @FPT_Id                        
end 

/

CREATE Procedure [dbo].[spSAD_Finalisation_Report_Template]
(                      
@TEM_Id int ,       
@TEM_FunctionId int ,    
@TEM_Module varchar(500) ,    
@TEM_ReportTitle int ,    
@TEM_ContentId varchar(100) ,    
@TEM_SortOrder varchar(100) ,    
@TEM_Compid int ,    
@TEM_Yearid int ,     
@TEM_CrBy int ,    
@TEM_UpdatedBy int ,    
@TEM_IPAddress Varchar(25),     
@iUpdateOrSave int Output,                    
@iOper int Output                    
)                        
 as                           
  if exists(select TEM_Id from SAD_Finalisation_Report_Template where TEM_Module=@TEM_Module And TEM_FunctionId=@TEM_FunctionId And TEM_ReportTitle=@TEM_ReportTitle and TEM_CompiD = @TEM_CompiD And TEM_YearID=@TEM_YearID)                            
begin                         
    Update SAD_Finalisation_Report_Template set TEM_ContentId=@TEM_ContentId,TEM_SortOrder=@TEM_SortOrder,TEM_UpdatedBy=@TEM_UpdatedBy,TEM_UpdatedOn=Getdate()    
  Where TEM_Module=@TEM_Module And TEM_FunctionId=@TEM_FunctionId And TEM_ReportTitle=@TEM_ReportTitle and TEM_CompiD = @TEM_CompiD And TEM_YearID=@TEM_YearID    
  set @iUpdateOrSave=2                        
    set @iOper = (select TEM_Id from SAD_Finalisation_Report_Template where TEM_Module=@TEM_Module And TEM_FunctionId=@TEM_FunctionId And TEM_ReportTitle=@TEM_ReportTitle and TEM_CompiD = @TEM_CompiD And TEM_YearID=@TEM_YearID)                              
end                                  
  else                                   
begin                  
  set @TEM_Id=(select isnull(max(TEM_Id)+1,1) from SAD_Finalisation_Report_Template)                      
  Insert into SAD_Finalisation_Report_Template (TEM_Id,TEM_FunctionId,TEM_Module,TEM_ReportTitle,TEM_ContentId,TEM_SortOrder,TEM_Delflag,TEM_Status,TEM_Compid,TEM_Yearid,TEM_CrBy,TEM_CrOn,TEM_IPAddress)              
  values (@TEM_Id,@TEM_FunctionId,@TEM_Module,@TEM_ReportTitle,@TEM_ContentId,@TEM_SortOrder,'W','C',@TEM_Compid,@TEM_Yearid,@TEM_CrBy,Getdate(),@TEM_IPAddress)         
  set @iUpdateOrSave=3                     
  set @iOper = @TEM_Id                  
end 

/

CREATE Procedure [dbo].[spSAD_GRPDESGN_General_Master]    
(    
@Mas_Id int,    
@Mas_Code Varchar(10),    
@Mas_Description Varchar(100),    
@Mas_Notes Varchar(100),    
@mas_Createdby int,    
@mas_Updatedby int,    
@Mas_IPAddress Varchar(25),    
@Mas_CompID int,    
@iUpdateOrSave int Output,            
@iOper int Output        
)    
as        
  if exists(select Mas_Id from SAD_GRPDESGN_General_Master where Mas_Id=@Mas_Id and Mas_CompID = @Mas_CompID)                
Begin      
Declare @mas_Status Varchar(2)    
 set @Mas_Status ='U'     
 update SAD_GRPDESGN_General_Master set Mas_Code=@Mas_Code,Mas_Description=@Mas_Description,Mas_Notes=@Mas_Notes,    
 mas_Updatedby=@mas_Updatedby,mas_UpdatedOn=GetDate(),Mas_IPAddress=@Mas_IPAddress,    
 Mas_CompID=@Mas_CompID,mas_Status=@mas_Status where Mas_Id=@Mas_Id and Mas_CompID = @Mas_CompID             
 Set @iUpdateOrSave=2                
 Set @iOper = @Mas_Id              
 End                
      Else                 
 Begin      
 Declare @Mas_Classify int     
 set @Mas_Classify =0    
 set @Mas_Id=(select isnull(max(Mas_Id)+1,1) from SAD_GRPDESGN_General_Master where Mas_CompID = @Mas_CompID)                
   insert into SAD_GRPDESGN_General_Master (Mas_Id,Mas_Code ,Mas_Description,Mas_Notes,Mas_DelFlag,mas_Status,    
   Mas_Classify,mas_Createdby,mas_CreatedOn,Mas_IPAddress,Mas_CompID)                
   values(@Mas_Id,@Mas_Code,@Mas_Description,@Mas_Notes,'W','C',@Mas_Classify,@mas_Createdby,GetDate(),    
   @Mas_IPAddress,@Mas_CompID )    
   set @iUpdateOrSave=3             
   set @iOper = @Mas_Id              
End 

/

CREATE Procedure [dbo].[spSAD_GrpOrLvl_General_Master]  
(  
@Mas_Id int,  
@Mas_Code Varchar(10),  
@Mas_Description Varchar(100),  
@Mas_Notes Varchar(100),  
@mas_Createdby int,  
@mas_Updatedby int,  
@Mas_IPAddress Varchar(25),  
@Mas_CompID int,  
@iUpdateOrSave int Output,          
@iOper int Output      
)  
as      
  if exists(select Mas_Id from SAD_GrpOrLvl_General_Master where Mas_Id=@Mas_Id and Mas_CompID = @Mas_CompID)              
Begin    
Declare @Mas_DelFlag Varchar(2)   
Declare @mas_Status Varchar(2)  
 set @Mas_Status ='U'   
 update SAD_GrpOrLvl_General_Master set Mas_Code=@Mas_Code,Mas_Description=@Mas_Description,Mas_Notes=@Mas_Notes,  
 mas_Updatedby=@mas_Updatedby,mas_UpdatedOn=GetDate(),Mas_IPAddress=@Mas_IPAddress,  
 Mas_CompID=@Mas_CompID,mas_Status=@mas_Status where Mas_Id=@Mas_Id and Mas_CompID = @Mas_CompID           
 Set @iUpdateOrSave=2              
 Set @iOper = @Mas_Id            
 End              
      Else               
 Begin    
 Declare @Mas_Classify int   
 set @Mas_Classify =0  
 set @Mas_Id=(select isnull(max(Mas_Id)+1,1) from SAD_GrpOrLvl_General_Master where Mas_CompID = @Mas_CompID)              
   insert into SAD_GrpOrLvl_General_Master (Mas_Id,Mas_Code ,Mas_Description,Mas_Notes,Mas_DelFlag,mas_Status,  
   Mas_Classify,mas_Createdby,mas_CreatedOn,Mas_IPAddress,Mas_CompID)              
   values(@Mas_Id,@Mas_Code,@Mas_Description,@Mas_Notes,'W','C',@Mas_Classify,@mas_Createdby,GetDate(),  
   @Mas_IPAddress,@Mas_CompID )  
   set @iUpdateOrSave=3           
   set @iOper = @Mas_Id            
End 

/

CREATE Procedure [dbo].[spSAD_IssueKnowledgeBase_Master](    
 @IKB_ID int ,    
 @IKB_IssueHeading varchar(2000),    
 @IKB_IssueDetails varchar(8000),  
 @IKB_IssueRatingID int,
 @IKB_CrBy int ,    
 @IKB_UpdatedBy int ,    
 @IKB_IPAddress varchar(25),    
 @IKB_CompID int,    
 @iUpdateOrSave int Output,                        
 @iOper int Output        
)    
as                               
If exists(select IKB_ID from SAD_IssueKnowledgeBase_Master Where IKB_ID=@IKB_ID And IKB_CompID=@IKB_CompID)    
 Begin              
 Update SAD_IssueKnowledgeBase_Master set IKB_IssueHeading=@IKB_IssueHeading,IKB_IssueDetails=@IKB_IssueDetails,IKB_IssueRatingID=@IKB_IssueRatingID,
 IKB_UpdatedBy=@IKB_UpdatedBy,IKB_UpdatedOn=Getdate(),    
 IKB_IPAddress=@IKB_IPAddress    
 Where  IKB_ID=@IKB_ID And IKB_CompID=@IKB_CompID                   
Set @iUpdateOrSave=2                         
Set @iOper =@IKB_ID            
 End              
Else                    
 Begin                          
 Set @IKB_ID=(select isnull(max(IKB_ID)+1,1) from SAD_IssueKnowledgeBase_Master)                          
 Insert Into  SAD_IssueKnowledgeBase_Master (IKB_ID,IKB_IssueHeading,IKB_IssueDetails,IKB_IssueRatingID,IKB_DelFlag,IKB_Status,IKB_CrBy,IKB_CrOn,IKB_IPAddress,IKB_CompID)                         
 Values(@IKB_ID,@IKB_IssueHeading,@IKB_IssueDetails,@IKB_IssueRatingID,'W','C',@IKB_CrBy,GetDate(),@IKB_IPAddress,@IKB_CompID)                          
 Set @iUpdateOrSave=3                         
 Set @iOper = @IKB_ID                               
End

/

CREATE Procedure [dbo].[spSAD_Knowledge_Master](    
 @TKB_ID int ,    
 @TKB_Subject varchar(2000)  ,    
 @TKB_Content varchar(8000)  ,    
 @TKB_CrBy int ,    
 @TKB_UpdatedBy int ,    
 @TKB_IPAddress varchar(25),    
 @TKB_CompID int,    
 @iUpdateOrSave int Output,                        
 @iOper int Output        
)    
as                               
if exists(select TKB_ID from SAD_Knowledge_Master Where TKB_ID=@TKB_ID And TKB_CompID=@TKB_CompID)    
 begin              
 update SAD_Knowledge_Master set TKB_Subject=@TKB_Subject,TKB_Content=@TKB_Content,TKB_UpdatedBy=@TKB_UpdatedBy,TKB_UpdatedOn=Getdate(),    
 TKB_IPAddress=@TKB_IPAddress    
 where  TKB_ID=@TKB_ID And TKB_CompID=@TKB_CompID                   
set @iUpdateOrSave=2                         
set @iOper =@TKB_ID            
 end              
else                    
 begin                          
 set @TKB_ID=(select isnull(max(TKB_ID)+1,1) from SAD_Knowledge_Master)                          
 insert into  SAD_Knowledge_Master (TKB_ID,TKB_Subject,TKB_Content,TKB_Status,TKB_CrBy,TKB_CrOn,TKB_IPAddress,TKB_CompID)                          
 values(@TKB_ID,@TKB_Subject,@TKB_Content,'C',@TKB_CrBy,GetDate(),@TKB_IPAddress,@TKB_CompID)                          
  set @iUpdateOrSave=3                         
 set @iOper = @TKB_ID                               
end

/

CREATE Procedure [dbo].[spSAD_ReportContentMaster]
(                      
     @RCM_Id int,
     @RCM_ReportId int ,
	 @RCM_ReportName varchar(500),
	 @RCM_Heading varchar(2000),
	 @RCM_Description varchar(5000),
	 @RCM_Delflag char(1),
	 @RCM_Status varchar(1),
	 @RCM_CrBy int,
	 @RCM_CrOn datetime,
	  @RCM_UpdatedBy int,
	 @RCM_UpdatedOn datetime,
 @RCM_IPAddress varchar(25),
	 @RCM_CompID int,
	 @RCM_Yearid int,
@iUpdateOrSave int Output,                    
@iOper int Output                    
)                        
 as                           
  if exists(select RCM_Id from SAD_ReportContentMaster  where RCM_Id=@RCM_Id and RCM_CompID = @RCM_CompID And RCM_Yearid=@RCM_Yearid)                            
   begin                         
Update SAD_ReportContentMaster set RCM_Heading=@RCM_Heading,RCM_Description=@RCM_Description,RCM_UpdatedBy=@RCM_UpdatedBy,RCM_UpdatedOn=GetDate()    
  Where RCM_Id=@RCM_Id And  RCM_CompID = @RCM_CompID And RCM_Yearid=@RCM_Yearid
  set @iUpdateOrSave=2                        
  set @iOper = @RCM_Id 
end                                  
  else                                      
begin                  
  set @RCM_Id=(select isnull(max(RCM_Id)+1,1) from SAD_ReportContentMaster)                      
  Insert into SAD_ReportContentMaster (RCM_Id,RCM_ReportId,RCM_ReportName,RCM_Heading,RCM_Description,RCM_Delflag,RCM_Status,RCM_CrBy,RCM_CrOn,RCM_IPAddress,RCM_CompID,RCM_Yearid)              
  values (@RCM_Id,@RCM_ReportId,@RCM_ReportName,@RCM_Heading,@RCM_Description,'A','C',@RCM_CrBy,@RCM_CrOn,@RCM_IPAddress,@RCM_CompID,@RCM_Yearid)                 
  set @iUpdateOrSave=3                     
  set @iOper = @RCM_Id                      
end 

/

CREATE Procedure [dbo].[spSAD_ReportGeneration]
(                        
 @RG_Id int,  
 @RG_CustomerId int,  
 @RG_Signedby int,  
 @RG_YearId int,  
 @RG_ReportType int,  
 @RG_Module int,  
 @RG_Report int,  
 @RG_Heading int,  
 @RG_Description varchar(5000),  
 @RG_CrBy int,  
 @RG_CrOn datetime,  
 @RG_UpdatedBy int,  
 @RG_UpdatedOn datetime,  
 @RG_IPAddress varchar(25),  
 @RG_FinancialYear int,  
 @RG_Compid int,
 @RG_AuditId int, 
 @RG_UDIN varchar(100), 
 @RG_UDINdate datetime, 
 @iUpdateOrSave int Output,                      
@iOper int Output                      
)                          
 as                             
  if exists(select RG_Id from SAD_ReportGeneration where RG_CustomerId=@RG_CustomerId and RG_AuditId=@RG_AuditId And RG_ReportType=@RG_ReportType and RG_Report=@RG_Report and RG_Heading=@RG_Heading And RG_Compid = @RG_Compid And RG_YearId=@RG_YearId)                              
begin                           
    Update SAD_ReportGeneration set RG_Description=@RG_Description,RG_UDIN=@RG_UDIN,RG_UDINdate=@RG_UDINdate,RG_UpdatedBy=@RG_UpdatedBy,RG_UpdatedOn=Getdate()      
  Where RG_CustomerId=@RG_CustomerId and RG_AuditId=@RG_AuditId And RG_ReportType=@RG_ReportType and RG_Report=@RG_Report and RG_Heading=@RG_Heading And RG_Compid = @RG_Compid And RG_YearId=@RG_YearId  
  set @iUpdateOrSave=2                          
    set @iOper =  @RG_Id                        
end                                    
  else                                     
begin                    
  set @RG_Id=(select isnull(max(RG_Id)+1,1) from SAD_ReportGeneration)                        
  Insert into SAD_ReportGeneration (RG_Id,RG_CustomerId,RG_Signedby,RG_YearId,RG_ReportType,RG_Module,RG_Report,RG_Heading,RG_Description,RG_CrBy,RG_CrOn,RG_UpdatedBy,RG_UpdatedOn,RG_IPAddress,RG_FinancialYear,RG_Compid,RG_AuditId,RG_UDIN,RG_UDINdate)
  values (@RG_Id,@RG_CustomerId,@RG_Signedby,@RG_YearId,@RG_ReportType,@RG_Module,@RG_Report,@RG_Heading,@RG_Description,@RG_CrBy,Getdate(),@RG_UpdatedBy,@RG_UpdatedOn,@RG_IPAddress,@RG_FinancialYear,@RG_Compid,@RG_AuditId,@RG_UDIN,@RG_UDINdate)           
  set @iUpdateOrSave=3                       
  set @iOper = @RG_Id            
end 

/

Create Procedure [dbo].[spSAD_Statutory_DirectorDetails]             
(                
    @SSD_Id int,
	@SSD_CustID int,
	@SSD_DirectorName varchar(100),
	@SSD_DOB datetime,
	@SSD_DIN varchar(25) NULL,
	@SSD_MobileNo varchar(15) NULL,
	@SSD_Email varchar(100) NULL,
	@SSD_Remarks varchar(1000) NULL,
	@SSD_CRON datetime,
	@SSD_CRBY int,
	@SSD_UpdatedOn datetime,
	@SSD_UpdatedBy int,
    @SSD_DelFlag varchar(1),
	@SSD_STATUS varchar(2),
	@SSD_IPAddress varchar(25),
	@SSD_CompID int,
    @iUpdateOrSave int Output,                
    @iOper int Output          
)       
As                      
if exists(select SSD_Id from SAD_Statutory_DirectorDetails where SSD_Id= @SSD_Id And SSD_CompID=@SSD_CompID)                  
Begin    
set @SSD_Id=(select SSD_Id from SAD_Statutory_DirectorDetails where SSD_Id= @SSD_Id And SSD_CompID=@SSD_CompID)     
Update SAD_Statutory_DirectorDetails set SSD_DirectorName=@SSD_DirectorName,SSD_DOB=@SSD_DOB,SSD_DIN=@SSD_DIN,
SSD_MobileNo=@SSD_MobileNo,SSD_Email=@SSD_Email,SSD_Remarks=@SSD_Remarks,
SSD_UpdatedOn=getdate(),SSD_UpdatedBy=@SSD_UpdatedBy,SSD_IPAddress=@SSD_IPAddress where SSD_Id=@SSD_Id and SSD_CustID=@SSD_CustID and SSD_CompID=@SSD_CompID 
set @iUpdateOrSave=2               
set @iOper = @SSD_Id          
End                
Else                   
Begin                  
set @SSD_Id=(select IsNull(Max(SSD_Id)+1,1) from SAD_Statutory_DirectorDetails)                  
insert into SAD_Statutory_DirectorDetails(SSD_Id,SSD_CustID,SSD_DirectorName,SSD_DOB,SSD_DIN,SSD_MobileNo,SSD_Email,SSD_Remarks,
SSD_CRON,SSD_CRBY,SSD_DelFlag,SSD_STATUS,SSD_IPAddress,SSD_CompID)                
values(@SSD_Id,@SSD_CustID,@SSD_DirectorName,@SSD_DOB,@SSD_DIN,@SSD_MobileNo,@SSD_Email,@SSD_Remarks,
Getdate(),@SSD_CRBY,@SSD_DelFlag,@SSD_STATUS,@SSD_IPAddress,@SSD_CompID)              
set @iUpdateOrSave=3                 
set @iOper = @SSD_Id
End 

/

CREATE Procedure [dbo].[spSAD_Statutory_PartnerDetails]                   
(                      
 @SSP_Id int,      
 @SSP_CustID int,      
 @SSP_PartnerName varchar(100),      
 @SSP_DOJ datetime,       
 @SSP_PAN varchar(25) NULL,      
 @SSP_ShareOfProfit decimal(19, 2),
 @SSP_CapitalAmount decimal(19, 2), 
 @SSP_CRON datetime,      
 @SSP_CRBY int,      
 @SSP_UpdatedOn datetime,      
 @SSP_UpdatedBy int,      
 @SSP_DelFlag varchar(1),      
 @SSP_STATUS varchar(2),      
 @SSP_IPAddress varchar(25),      
 @SSP_CompID int,      
 @iUpdateOrSave int Output,                      
 @iOper int Output                
)             
As                            
if exists(select SSP_Id from SAD_Statutory_PartnerDetails where SSP_Id=@SSP_Id And SSP_CompID=@SSP_CompID)                        
Begin          
set @SSP_Id=(select SSP_Id from SAD_Statutory_PartnerDetails where SSP_Id=@SSP_Id And SSP_CompID=@SSP_CompID)           
Update SAD_Statutory_PartnerDetails set SSP_PartnerName=@SSP_PartnerName,SSP_DOJ=@SSP_DOJ,SSP_PAN=@SSP_PAN,SSP_ShareOfProfit=@SSP_ShareOfProfit,SSP_CapitalAmount=@SSP_CapitalAmount,     
SSP_UpdatedOn=getdate(),SSP_UpdatedBy=@SSP_UpdatedBy,SSP_IPAddress=@SSP_IPAddress where SSP_Id=@SSP_Id and SSP_CustID=@SSP_CustID and SSP_CompID=@SSP_CompID       
set @iUpdateOrSave=2                     
set @iOper=@SSP_Id                
End                      
Else                         
Begin                        
set @SSP_Id=(select IsNull(Max(SSP_Id)+1,1) from SAD_Statutory_PartnerDetails)                        
insert into SAD_Statutory_PartnerDetails(SSP_Id,SSP_CustID,SSP_PartnerName,SSP_DOJ,SSP_PAN,SSP_ShareOfProfit,SSP_CapitalAmount,      
SSP_CRON,SSP_CRBY,SSP_DelFlag,SSP_STATUS,SSP_IPAddress,SSP_CompID)                      
values(@SSP_Id,@SSP_CustID,@SSP_PartnerName,@SSP_DOJ,@SSP_PAN,@SSP_ShareOfProfit,@SSP_CapitalAmount,     
Getdate(),@SSP_CRBY,@SSP_DelFlag,@SSP_STATUS,@SSP_IPAddress,@SSP_CompID)                    
set @iUpdateOrSave=3                       
set @iOper=@SSP_Id      
End   

/

CREATE procedure [dbo].[spSAD_UserEMP_AcademicProgress]            
(            
@SUAP_PKID int,
@SUAP_UserEmpID int,
@SUAP_ExamTakenOn datetime,
@SUAP_LeaveGranted int,
@SUAP_MonthofExam int,
@SUAP_Groups varchar(1000),
@SUAP_Result varchar(1000),
@SUAP_Remarks varchar(8000),
@SUAP_AttachID int,
@SUAP_CrBy int,
@SUAP_UpdatedBy int,
@SUAP_IPAddress varchar(500),
@SUAP_CompId int,           
@iUpdateOrSave int Output,              
@iOper int Output             
)            
as                   
  if exists(select SUAP_PKID from SAD_UserEMP_AcademicProgress where SUAP_PKID=@SUAP_PKID And SUAP_UserEmpID=@SUAP_UserEmpID and SUAP_CompId=@SUAP_CompId)              
 begin             
 update SAD_UserEMP_AcademicProgress set SUAP_ExamTakenOn=@SUAP_ExamTakenOn,SUAP_LeaveGranted=@SUAP_LeaveGranted,SUAP_MonthofExam=@SUAP_MonthofExam,SUAP_Groups=@SUAP_Groups,
 SUAP_Result=@SUAP_Result,SUAP_Remarks=@SUAP_Remarks,SUAP_AttachID=@SUAP_AttachID,SUAP_UpdatedBy=@SUAP_UpdatedBy,SUAP_UpdatedOn=GetDate(),
 SUAP_IPAddress=@SUAP_IPAddress,SUAP_CompId=@SUAP_CompId                    
 where SUAP_PKID=@SUAP_PKID And SUAP_UserEmpID=@SUAP_UserEmpID and SUAP_CompId=@SUAP_CompId            
   set @iUpdateOrSave=2                  
  set @iOper=@SUAP_PKID             
 end              
else               
 begin              
set @SUAP_PKID=(select isnull(max(SUAP_PKID)+1,1) from SAD_UserEMP_AcademicProgress)              
insert into SAD_UserEMP_AcademicProgress (SUAP_PKID,SUAP_UserEmpID,SUAP_ExamTakenOn,SUAP_LeaveGranted,SUAP_MonthofExam,SUAP_Groups,SUAP_Result,          
SUAP_Remarks,SUAP_AttachID,SUAP_CrBy,SUAP_CrOn,SUAP_IPAddress,SUAP_CompId)            
values              
(@SUAP_PKID,@SUAP_UserEmpID,@SUAP_ExamTakenOn,@SUAP_LeaveGranted,@SUAP_MonthofExam,@SUAP_Groups,@SUAP_Result,           
@SUAP_Remarks,@SUAP_AttachID,@SUAP_CrBy,GetDate(),@SUAP_IPAddress,@SUAP_CompId)              
set @iUpdateOrSave=3                
set @iOper =@SUAP_PKID             
end

/

CREATE Procedure [dbo].[spSAD_UserEMP_Address]
( 
@SUA_PKID int,
@SUA_UserEmpID int,
@SUA_ContactName varchar(500),
@SUA_Address1 varchar(1000),
@SUA_Address2 varchar(1000),
@SUA_Address3 varchar(1000),
@SUA_Pincode int,
@SUA_Mobile varchar(20),
@SUA_Telephone varchar(20),
@SUA_Email varchar(1000),
@SUA_RelationType varchar(100),
@SUA_FormName Varchar(50),  
@SUA_IPAddress varchar(50),
@SUA_CompId int,  
@iUpdateOrSave int Output,                  
@iOper int Output   
)  
As  
If exists(Select SUA_PKID from SAD_UserEMP_Address where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompId=@SUA_CompId)  
Begin    
 Set @SUA_PKID=(Select SUA_PKID from SAD_UserEMP_Address where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompId=@SUA_CompId)
  if(@SUA_FormName = 'CA')    
   Begin         
    Update SAD_UserEMP_Address Set SUA_ContactName=@SUA_ContactName,SUA_Address1=@SUA_Address1,SUA_Address2=@SUA_Address2,SUA_Address3=@SUA_Address3, 
 SUA_Pincode=@SUA_Pincode,SUA_Mobile=@SUA_Mobile,SUA_Telephone=@SUA_Telephone,SUA_Email=@SUA_Email,SUA_RelationType=@SUA_RelationType, 
  SUA_IPAddress=@SUA_IPAddress  
   Where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompId=@SUA_CompId  
    End     
	 if(@SUA_FormName = 'PA')
 Begin     
  Update SAD_UserEMP_Address Set SUA_ContactName=@SUA_ContactName,SUA_Address1=@SUA_Address1,SUA_Address2=@SUA_Address2,SUA_Address3=@SUA_Address3, 
   SUA_Pincode=@SUA_Pincode,SUA_Mobile=@SUA_Mobile,SUA_Telephone=@SUA_Telephone,SUA_Email=@SUA_Email,SUA_RelationType=@SUA_RelationType, 
    SUA_IPAddress=@SUA_IPAddress  
	 Where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompId=@SUA_CompId  
 End  
  if(@SUA_FormName = 'EC')    
   Begin       
    Update SAD_UserEMP_Address Set SUA_ContactName=@SUA_ContactName,SUA_Address1=@SUA_Address1,SUA_Address2=@SUA_Address2,SUA_Address3=@SUA_Address3, 
	 SUA_Pincode=@SUA_Pincode,SUA_Mobile=@SUA_Mobile,SUA_Telephone=@SUA_Telephone,SUA_Email=@SUA_Email,SUA_RelationType=@SUA_RelationType, 
 SUA_IPAddress=@SUA_IPAddress  
  Where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompId=@SUA_CompId 
   End
    if(@SUA_FormName = 'FMWC')    
	 Begin       
	  Update SAD_UserEMP_Address Set SUA_ContactName=@SUA_ContactName,SUA_Address1=@SUA_Address1,SUA_Address2=@SUA_Address2,SUA_Address3=@SUA_Address3, 
	   SUA_Pincode=@SUA_Pincode,SUA_Mobile=@SUA_Mobile,SUA_Telephone=@SUA_Telephone,SUA_Email=@SUA_Email,SUA_RelationType=@SUA_RelationType, 
 SUA_IPAddress=@SUA_IPAddress  
  Where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompId=@SUA_CompId  
   End  
   Set @iUpdateOrSave=2                      
   Set @iOper=@SUA_PKID                        
   End                        
   Else                      
   Begin   
   Set @SUA_PKID=(Select isnull(max(SUA_PKID)+1,1) from SAD_UserEMP_Address)    
   if(@SUA_FormName = 'CA')  
   Begin   
   Insert Into SAD_UserEMP_Address(SUA_PKID,SUA_UserEmpID,SUA_ContactName,SUA_Address1,SUA_Address2,SUA_Address3,SUA_Pincode,SUA_Mobile,SUA_Telephone,SUA_Email,
               SUA_RelationType,SUA_IPAddress,SUA_CompId)                     
Values (@SUA_PKID,@SUA_UserEmpID,@SUA_ContactName,@SUA_Address1,@SUA_Address2,@SUA_Address3,@SUA_Pincode,@SUA_Mobile,@SUA_Telephone,@SUA_Email,
        @SUA_RelationType,@SUA_IPAddress,@SUA_CompId)       
		 End   
		  if(@SUA_FormName = 'PA')  
		    Begin   
Insert Into SAD_UserEMP_Address(SUA_PKID,SUA_UserEmpID,SUA_ContactName,SUA_Address1,SUA_Address2,SUA_Address3,SUA_Pincode,SUA_Mobile,SUA_Telephone,SUA_Email,
            SUA_RelationType,SUA_IPAddress,SUA_CompId)                     
			Values (@SUA_PKID,@SUA_UserEmpID,@SUA_ContactName,@SUA_Address1,@SUA_Address2,@SUA_Address3,@SUA_Pincode,@SUA_Mobile,@SUA_Telephone,@SUA_Email,
			        @SUA_RelationType,@SUA_IPAddress,@SUA_CompId)       
 End 
  if(@SUA_FormName = 'EC')  
    Begin   
	Insert Into SAD_UserEMP_Address(SUA_PKID,SUA_UserEmpID,SUA_ContactName,SUA_Address1,SUA_Address2,SUA_Address3,SUA_Pincode,SUA_Mobile,SUA_Telephone,SUA_Email,
	            SUA_RelationType,SUA_IPAddress,SUA_CompId)                     
Values (@SUA_PKID,@SUA_UserEmpID,@SUA_ContactName,@SUA_Address1,@SUA_Address2,@SUA_Address3,@SUA_Pincode,@SUA_Mobile,@SUA_Telephone,@SUA_Email,
        @SUA_RelationType,@SUA_IPAddress,@SUA_CompId)       
		 End 
		  if(@SUA_FormName = 'FMWC')  
		   Begin   
		    Insert Into SAD_UserEMP_Address(SUA_PKID,SUA_UserEmpID,SUA_ContactName,SUA_Address1,SUA_Address2,SUA_Address3,SUA_Pincode,SUA_Mobile,SUA_Telephone,SUA_Email,
			             SUA_RelationType,SUA_IPAddress,SUA_CompId)                     
Values (@SUA_PKID,@SUA_UserEmpID,@SUA_ContactName,@SUA_Address1,@SUA_Address2,@SUA_Address3,@SUA_Pincode,@SUA_Mobile,@SUA_Telephone,@SUA_Email,
        @SUA_RelationType,@SUA_IPAddress,@SUA_CompId)       
		 End     
		  Set @iUpdateOrSave=3                         
		   Set @iOper=@SUA_PKID                        
		   End

/

CREATE Procedure [dbo].[spSad_UserEMP_Assessment]
( 
@SUA_PKID int,
@SUA_UserEmpID int,
@SUA_IssueDate datetime,
@SUA_Rating varchar(1000),
@SUA_PerformanceAwardPaid varchar(1000),
@SUA_GradesPromotedFrom varchar(1000),
@SUA_GradesPromotedTo varchar(1000),
@SUA_Remarks varchar(8000),
@SUA_AttachID int,
@SUA_CrBy int,
@SUA_UpdatedBy int,
@SUA_IPAddress Varchar(50),
@SUA_CompID int,
@iUpdateOrSave int Output,                  
@iOper int Output   
)  
As  
If exists(Select SUA_PKID from Sad_UserEMP_Assessment where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompID=@SUA_CompID)  
Begin    
 Set @SUA_PKID=(Select SUA_PKID from Sad_UserEMP_Assessment where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompID=@SUA_CompID)  

	Update Sad_UserEMP_Assessment Set SUA_IssueDate=@SUA_IssueDate,SUA_Rating=@SUA_Rating,SUA_PerformanceAwardPaid=@SUA_PerformanceAwardPaid,
	SUA_GradesPromotedFrom=@SUA_GradesPromotedFrom,SUA_GradesPromotedTo=@SUA_GradesPromotedTo,SUA_Remarks=@SUA_Remarks,
	SUA_UpdatedBy=@SUA_UpdatedBy,SUA_UpdatedOn=Getdate(),SUA_IPAddress=@SUA_IPAddress 
	Where SUA_PKID=@SUA_PKID And SUA_UserEmpID=@SUA_UserEmpID And SUA_CompID=@SUA_CompID
Set @iUpdateOrSave=2                      
Set @iOper=@SUA_PKID                        
End                        
Else                      
   Begin   
   Set @SUA_PKID=(Select isnull(max(SUA_PKID)+1,1) from Sad_UserEMP_Assessment)    
   Insert Into Sad_UserEMP_Assessment(SUA_PKID,SUA_UserEmpID,SUA_IssueDate,SUA_Rating,SUA_PerformanceAwardPaid,SUA_GradesPromotedFrom,
	SUA_GradesPromotedTo,SUA_Remarks,SUA_AttachID,SUA_CrBy,SUA_CrOn,SUA_IPAddress,SUA_CompID)                  
   Values (@SUA_PKID,@SUA_UserEmpID,@SUA_IssueDate,@SUA_Rating,@SUA_PerformanceAwardPaid,@SUA_GradesPromotedFrom,@SUA_GradesPromotedTo,@SUA_Remarks,  
	@SUA_AttachID,@SUA_CrBy,Getdate(),@SUA_IPAddress,@SUA_CompID)          
Set @iUpdateOrSave=3                         
Set @iOper=@SUA_PKID                        
End

/

CREATE procedure [dbo].[spSAD_UserEMP_AssetsLoan]            
(            
@SUAL_PKID int,
@SUAL_UserEmpID int,
@SUAL_AssetType varchar(500),
@SUAL_SerialNo varchar(500),
@SUAL_ApproValue int,
@SUAL_IssueDate datetime,
@SUAL_DueDate datetime,
@SUAL_RecievedDate datetime,
@SUAL_ConditionIssue varchar(500),
@SUAL_ConditionReceipt varchar(500),
@SUAL_Remarks varchar(8000),
@SUAL_AttachID int,
@SUAL_CrBy int,
@SUAL_UpdatedBy int,
@SUAL_IPAddress varchar(50),
@SUAL_CompId int,           
@iUpdateOrSave int Output,              
@iOper int Output             
)            
as                   
  if exists(select SUAL_PKID from SAD_UserEMP_AssetsLoan where SUAL_PKID=@SUAL_PKID And SUAL_UserEmpID=@SUAL_UserEmpID and SUAL_CompId=@SUAL_CompId)              
 begin             
 update SAD_UserEMP_AssetsLoan set SUAL_AssetType=@SUAL_AssetType,SUAL_SerialNo=@SUAL_SerialNo,SUAL_ApproValue=@SUAL_ApproValue,SUAL_IssueDate=@SUAL_IssueDate,SUAL_DueDate=@SUAL_DueDate,
 SUAL_RecievedDate=@SUAL_RecievedDate,SUAL_ConditionIssue=@SUAL_ConditionIssue,SUAL_ConditionReceipt=@SUAL_ConditionReceipt,
 SUAL_Remarks=@SUAL_Remarks,SUAL_AttachID=@SUAL_AttachID,SUAL_UpdatedBy=@SUAL_UpdatedBy,SUAL_UpdatedOn=GetDate(),SUAL_IPAddress=@SUAL_IPAddress,
 SUAL_CompId=@SUAL_CompId                    
 where SUAL_PKID=@SUAL_PKID And SUAL_UserEmpID=@SUAL_UserEmpID and SUAL_CompId=@SUAL_CompId            
   set @iUpdateOrSave=2                  
  set @iOper=@SUAL_PKID             
 end              
else               
 begin              
set @SUAL_PKID=(select isnull(max(SUAL_PKID)+1,1) from SAD_UserEMP_AssetsLoan)              
insert into SAD_UserEMP_AssetsLoan (SUAL_PKID,SUAL_UserEmpID,SUAL_AssetType,SUAL_SerialNo,SUAL_ApproValue,SUAL_IssueDate,SUAL_DueDate,SUAL_RecievedDate,       
SUAL_ConditionIssue,SUAL_ConditionReceipt,SUAL_Remarks,SUAL_AttachID,SUAL_CrBy,SUAL_CrOn,SUAL_IPAddress,SUAL_CompId)            
values              
(@SUAL_PKID,@SUAL_UserEmpID,@SUAL_AssetType,@SUAL_SerialNo,@SUAL_ApproValue,@SUAL_IssueDate,@SUAL_DueDate,@SUAL_RecievedDate,          
@SUAL_ConditionIssue,@SUAL_ConditionReceipt,@SUAL_Remarks,@SUAL_AttachID,@SUAL_CrBy,GetDate(),@SUAL_IPAddress,@SUAL_CompId)              
set @iUpdateOrSave=3                
set @iOper =@SUAL_PKID             
end

/

CREATE Procedure [dbo].[spSad_UserEMP_Courses]
( 
@SUC_PKID int,
@SUC_UserEmpID int,
@SUC_Date datetime,
@SUC_Subject varchar(1000),
@SUC_FeeEmployer varchar(1000),
@SUC_FeeEmployee varchar(1000),
@SUC_ConductedBy varchar(1000),
@SUC_CPEPoints varchar(1000),
@SUC_Papers varchar(8000),
@SUC_BriefDescription varchar(8000),
@SUC_FeedBack varchar(8000),
@SUC_Remarks varchar(8000),
@SUC_AttachID int,
@SUC_CrBy int,
@SUC_UpdatedBy int,
@SUC_IPAddress Varchar(50),
@SUC_CompID int,
@iUpdateOrSave int Output,                  
@iOper int Output   
)  
As  
If exists(Select SUC_PKID from Sad_UserEMP_Courses where SUC_PKID=@SUC_PKID And SUC_UserEmpID=@SUC_UserEmpID And SUC_CompID=@SUC_CompID)  
Begin    
 Set @SUC_PKID=(Select SUC_PKID from Sad_UserEMP_Courses where SUC_PKID=@SUC_PKID And SUC_UserEmpID=@SUC_UserEmpID And SUC_CompID=@SUC_CompID) 

	Update Sad_UserEMP_Courses Set SUC_Date=@SUC_Date,SUC_Subject=@SUC_Subject,SUC_FeeEmployer=@SUC_FeeEmployer,SUC_FeeEmployee=@SUC_FeeEmployee, 
	SUC_ConductedBy=@SUC_ConductedBy,SUC_CPEPoints=@SUC_CPEPoints,SUC_Papers=@SUC_Papers,SUC_BriefDescription=@SUC_BriefDescription,
	SUC_FeedBack=@SUC_FeedBack,SUC_Remarks=@SUC_Remarks,SUC_UpdatedBy=@SUC_UpdatedBy,SUC_UpdatedOn=Getdate(),SUC_IPAddress=@SUC_IPAddress 
	Where SUC_PKID=@SUC_PKID And SUC_UserEmpID=@SUC_UserEmpID And SUC_CompID=@SUC_CompID
Set @iUpdateOrSave=2                      
Set @iOper=@SUC_PKID                        
End                        
Else                      
   Begin   
   Set @SUC_PKID=(Select isnull(max(SUC_PKID)+1,1) from Sad_UserEMP_Courses)    
   Insert Into Sad_UserEMP_Courses(SUC_PKID,SUC_UserEmpID,SUC_Date,SUC_Subject,SUC_FeeEmployer,SUC_FeeEmployee,SUC_ConductedBy,SUC_CPEPoints,SUC_Papers,
	SUC_BriefDescription,SUC_FeedBack,SUC_Remarks,SUC_AttachID,SUC_CrBy,SUC_CrOn,SUC_IPAddress,SUC_CompID)                  
   Values (@SUC_PKID,@SUC_UserEmpID,@SUC_Date,@SUC_Subject,@SUC_FeeEmployer,@SUC_FeeEmployee,@SUC_ConductedBy,@SUC_CPEPoints,@SUC_Papers,
	@SUC_BriefDescription,@SUC_FeedBack,@SUC_Remarks,@SUC_AttachID,@SUC_CrBy,Getdate(),@SUC_IPAddress,@SUC_CompID)          
Set @iUpdateOrSave=3                         
Set @iOper=@SUC_PKID                        
End


/

CREATE Procedure [dbo].[spSad_UserEMP_ParticularsofArticles]
( 
@SUP_PKID int,
@SUP_UserEmpID int,
@SUP_PrincipleName Varchar(100),
@SUP_RegistrationNo Varchar(100),
@SUP_PracticeNo Varchar(100),
@SUP_ArticlesFrom datetime,
@SUP_ArticlesTo datetime,
@SUP_ExtendedTo datetime,
@SUP_Remarks Varchar(8000),
@SUP_AttachID int,
@SUP_CrBy int,
@SUP_UpdatedBy int,
@SUP_IPAddress Varchar(50),
@SUP_CompID int,
@iUpdateOrSave int Output,                  
@iOper int Output   
)  
As  
If exists(Select SUP_PKID from Sad_UserEMP_ParticularsofArticles where SUP_PKID=@SUP_PKID And SUP_UserEmpID=@SUP_UserEmpID And SUP_CompID=@SUP_CompID)  
Begin    
 Set @SUP_PKID=(Select SUP_PKID from Sad_UserEMP_ParticularsofArticles where SUP_PKID=@SUP_PKID And SUP_UserEmpID=@SUP_UserEmpID And SUP_CompID=@SUP_CompID)  

	Update Sad_UserEMP_ParticularsofArticles Set SUP_PrincipleName=@SUP_PrincipleName,SUP_RegistrationNo=@SUP_RegistrationNo,
	SUP_PracticeNo=@SUP_PracticeNo,SUP_ArticlesFrom=@SUP_ArticlesFrom,SUP_ArticlesTo=@SUP_ArticlesTo,SUP_ExtendedTo=@SUP_ExtendedTo,
	SUP_Remarks=@SUP_Remarks,SUP_UpdatedBy=@SUP_UpdatedBy,SUP_UpdatedOn=Getdate(),SUP_IPAddress=@SUP_IPAddress 
	Where SUP_PKID=@SUP_PKID And SUP_UserEmpID=@SUP_UserEmpID And SUP_CompID=@SUP_CompID
Set @iUpdateOrSave=2                      
Set @iOper=@SUP_PKID                        
End                        
Else                      
   Begin   
   Set @SUP_PKID=(Select isnull(max(SUP_PKID)+1,1) from Sad_UserEMP_ParticularsofArticles)    
   Insert Into Sad_UserEMP_ParticularsofArticles(SUP_PKID,SUP_UserEmpID,SUP_PrincipleName,SUP_RegistrationNo,SUP_PracticeNo,SUP_ArticlesFrom,
   SUP_ArticlesTo,SUP_ExtendedTo,SUP_Remarks,SUP_AttachID,SUP_CrBy,SUP_CrOn,SUP_IPAddress,SUP_CompID)                 
   Values (@SUP_PKID,@SUP_UserEmpID,@SUP_PrincipleName,@SUP_RegistrationNo,@SUP_PracticeNo,@SUP_ArticlesFrom,@SUP_ArticlesTo,@SUP_ExtendedTo,
	@SUP_Remarks,@SUP_AttachID,@SUP_CrBy,Getdate(),@SUP_IPAddress,@SUP_CompID)          
Set @iUpdateOrSave=3                         
Set @iOper=@SUP_PKID                        
End

/

CREATE procedure [dbo].[spSAD_UserEMP_ProfExperiance]            
(            
@SUP_PKID int,
@SUP_UserEmpID int,
@SUP_Assignment varchar(500),
@SUP_ReportingTo varchar(50),
@SUP_From int,
@SUP_To int,
@SUP_SalaryPerAnnum float,
@SUP_Position varchar(20),
@SUP_Remarks varchar(8000),
@SUP_AttachID int,
@SUP_CrBy int,
@SUP_UpdatedBy int,
@SUP_IPAddress varchar(50),
@SUP_CompId int,           
@iUpdateOrSave int Output,              
@iOper int Output             
)            
as                   
  if exists(select SUP_PKID from SAD_UserEMP_ProfExperiance where SUP_PKID=@SUP_PKID And SUP_UserEmpID=@SUP_UserEmpID and SUP_CompId=@SUP_CompId)              
 begin             
 update SAD_UserEMP_ProfExperiance set SUP_Assignment=@SUP_Assignment,SUP_ReportingTo=@SUP_ReportingTo,SUP_From=@SUP_From,SUP_To=@SUP_To,
 SUP_SalaryPerAnnum=@SUP_SalaryPerAnnum,SUP_Position=@SUP_Position,SUP_Remarks=@SUP_Remarks,SUP_AttachID=@SUP_AttachID,SUP_UpdatedBy=@SUP_UpdatedBy,SUP_UpdatedOn=GetDate(),
 SUP_IPAddress=@SUP_IPAddress,SUP_CompId=@SUP_CompId                    
 where SUP_PKID=@SUP_PKID And SUP_UserEmpID=@SUP_UserEmpID and SUP_CompId=@SUP_CompId            
   set @iUpdateOrSave=2                  
  set @iOper=@SUP_PKID             
 end              
else               
 begin              
set @SUP_PKID=(select isnull(max(SUP_PKID)+1,1) from SAD_UserEMP_ProfExperiance)              
insert into SAD_UserEMP_ProfExperiance (SUP_PKID,SUP_UserEmpID,SUP_Assignment,SUP_ReportingTo,SUP_From,SUP_To,          
SUP_SalaryPerAnnum,SUP_Position,SUP_Remarks,SUP_AttachID,SUP_CrBy,SUP_CrOn,SUP_IPAddress,SUP_CompId)            
values              
(@SUP_PKID,@SUP_UserEmpID,@SUP_Assignment,@SUP_ReportingTo,@SUP_From,@SUP_To,           
@SUP_SalaryPerAnnum,@SUP_Position,@SUP_Remarks,@SUP_AttachID,@SUP_CrBy,GetDate(),@SUP_IPAddress,@SUP_CompId)              
set @iUpdateOrSave=3                
set @iOper =@SUP_PKID             
end

/

CREATE Procedure [dbo].[spSad_UserEMP_Qualification]
( 
@SUQ_PKID int,
@SUQ_UserEmpID int,
@SUQ_Education varchar(1000),
@SUQ_University varchar(1000),
@SUQ_School Varchar(1000),
@SUQ_Year int,
@SUQ_Marks float,
@SUQ_Remarks Varchar(8000),
@SUQ_AttachID int,
@SUQ_CrBy int,
@SUQ_UpdatedBy int,
@SUQ_IPAddress Varchar(50),
@SUQ_CompID int,
@iUpdateOrSave int Output,                  
@iOper int Output   
)  
As  
If exists(Select SUQ_PKID from Sad_UserEMP_Qualification where SUQ_PKID=@SUQ_PKID And SUQ_UserEmpID=@SUQ_UserEmpID And SUQ_CompID=@SUQ_CompID)  
Begin    
 Set @SUQ_PKID=(Select SUQ_PKID from Sad_UserEMP_Qualification where SUQ_PKID=@SUQ_PKID And SUQ_UserEmpID=@SUQ_UserEmpID And SUQ_CompID=@SUQ_CompID) 

	Update Sad_UserEMP_Qualification Set SUQ_Education=@SUQ_Education,SUQ_University=@SUQ_University,SUQ_School=@SUQ_School,SUQ_Year=@SUQ_Year, 
	SUQ_Marks=@SUQ_Marks,SUQ_Remarks=@SUQ_Remarks,SUQ_UpdatedBy=@SUQ_UpdatedBy,SUQ_UpdatedOn=Getdate(),SUQ_IPAddress=@SUQ_IPAddress 
	Where SUQ_PKID=@SUQ_PKID And SUQ_UserEmpID=@SUQ_UserEmpID And SUQ_CompID=@SUQ_CompID
Set @iUpdateOrSave=2                      
Set @iOper=@SUQ_PKID                        
End                        
Else                      
   Begin   
   Set @SUQ_PKID=(Select isnull(max(SUQ_PKID)+1,1) from Sad_UserEMP_Qualification)    
   Insert Into Sad_UserEMP_Qualification(SUQ_PKID,SUQ_UserEmpID,SUQ_Education,SUQ_University,SUQ_School,SUQ_Year,SUQ_Marks,SUQ_Remarks,SUQ_AttachID,
   SUQ_CrBy,SUQ_CrOn,SUQ_IPAddress,SUQ_CompID)                     
   Values (@SUQ_PKID,@SUQ_UserEmpID,@SUQ_Education,@SUQ_University,@SUQ_School,@SUQ_Year,@SUQ_Marks,@SUQ_Remarks,@SUQ_AttachID,@SUQ_CrBy,GetDate(),
   @SUQ_IPAddress,@SUQ_CompID)          
Set @iUpdateOrSave=3                         
Set @iOper=@SUQ_PKID                        
End

/

CREATE Procedure [dbo].[spSad_UserEMP_SpecialMentions]
( 
@SUS_PKID int,
@SUS_UserEmpID int,
@SUS_SpecialMention varchar(1000),
@SUS_Date datetime,
@SUS_Particulars varchar(1000),
@SUS_DealtWith varchar(1000),
@SUS_AttachID int,
@SUS_CrBy int,
@SUS_UpdatedBy int,
@SUS_IPAddress Varchar(50),
@SUS_CompID int,
@iUpdateOrSave int Output,                  
@iOper int Output   
)  
As  
If exists(Select SUS_PKID from Sad_UserEMP_SpecialMentions where SUS_PKID=@SUS_PKID And SUS_UserEmpID=@SUS_UserEmpID And SUS_CompID=@SUS_CompID)  
Begin    
 Set @SUS_PKID=(Select SUS_PKID from Sad_UserEMP_SpecialMentions where SUS_PKID=@SUS_PKID And SUS_UserEmpID=@SUS_UserEmpID And SUS_CompID=@SUS_CompID)

	Update Sad_UserEMP_SpecialMentions Set SUS_SpecialMention=@SUS_SpecialMention,SUS_Date=@SUS_Date,SUS_Particulars=@SUS_Particulars,
	SUS_DealtWith=@SUS_DealtWith,SUS_UpdatedBy=@SUS_UpdatedBy,SUS_UpdatedOn=Getdate(),SUS_IPAddress=@SUS_IPAddress 
	Where SUS_PKID=@SUS_PKID And SUS_UserEmpID=@SUS_UserEmpID And SUS_CompID=@SUS_CompID
Set @iUpdateOrSave=2                      
Set @iOper=@SUS_PKID                        
End                        
Else                      
   Begin   
   Set @SUS_PKID=(Select isnull(max(SUS_PKID)+1,1) from Sad_UserEMP_SpecialMentions)    
   Insert Into Sad_UserEMP_SpecialMentions(SUS_PKID,SUS_UserEmpID,SUS_SpecialMention,SUS_Date,SUS_Particulars,SUS_DealtWith,SUS_AttachID,
   SUS_CrBy,SUS_CrOn,SUS_IPAddress,SUS_CompID)                  
   Values (@SUS_PKID,@SUS_UserEmpID,@SUS_SpecialMention,@SUS_Date,@SUS_Particulars,@SUS_DealtWith,@SUS_AttachID,
	@SUS_CrBy,Getdate(),@SUS_IPAddress,@SUS_CompID)          
Set @iUpdateOrSave=3                         
Set @iOper=@SUS_PKID                        
End

/

CREATE procedure [dbo].[spSAD_UserEMP_TransferFirm]           
(    
@SUTF_PKID int,
@SUTF_UserEmpID int,
@SUTF_EarlierPrinciple varchar(1000),
@SUTF_NewPrinciple varchar(1000),
@SUTF_DateofTransfer datetime,
@SUTF_DurationWithNewPrinciple varchar(1000),
@SUTF_CompletionDate datetime,
@SUTF_ExtendedTo datetime,
@SUTF_Remarks varchar(8000),
@SUTF_AttachID int,
@SUTF_CrBy int,
@SUTF_UpdatedBy int,
@SUTF_IPAddress varchar(500),
@SUTF_CompId int,           
@iUpdateOrSave int Output,              
@iOper int Output             
)            
as                   
  if exists(select SUTF_PKID from SAD_UserEMP_TransferFirm where SUTF_PKID=@SUTF_PKID And SUTF_UserEmpID=@SUTF_UserEmpID and SUTF_CompId=@SUTF_CompId)              
 begin             
 update SAD_UserEMP_TransferFirm set SUTF_EarlierPrinciple=@SUTF_EarlierPrinciple,SUTF_NewPrinciple=@SUTF_NewPrinciple,SUTF_DateofTransfer=@SUTF_DateofTransfer,
 SUTF_DurationWithNewPrinciple=@SUTF_DurationWithNewPrinciple,SUTF_CompletionDate=@SUTF_CompletionDate,SUTF_ExtendedTo=@SUTF_ExtendedTo,SUTF_Remarks=@SUTF_Remarks,SUTF_AttachID=@SUTF_AttachID,
 SUTF_UpdatedBy=@SUTF_UpdatedBy,SUTF_UpdatedOn=GetDate(),SUTF_IPAddress=@SUTF_IPAddress,SUTF_CompId=@SUTF_CompId                    
 where SUTF_PKID=@SUTF_PKID And SUTF_UserEmpID=@SUTF_UserEmpID and SUTF_CompId=@SUTF_CompId            
   set @iUpdateOrSave=2                  
  set @iOper=@SUTF_PKID             
 end              
else               
 begin              
set @SUTF_PKID=(select isnull(max(SUTF_PKID)+1,1) from SAD_UserEMP_TransferFirm)              
insert into SAD_UserEMP_TransferFirm (SUTF_PKID,SUTF_UserEmpID,SUTF_EarlierPrinciple,SUTF_NewPrinciple,SUTF_DateofTransfer,SUTF_DurationWithNewPrinciple,SUTF_CompletionDate,SUTF_ExtendedTo,          
SUTF_Remarks,SUTF_AttachID,SUTF_CrBy,SUTF_CrOn,SUTF_IPAddress,SUTF_CompId)            
values              
(@SUTF_PKID,@SUTF_UserEmpID,@SUTF_EarlierPrinciple,@SUTF_NewPrinciple,@SUTF_DateofTransfer,@SUTF_DurationWithNewPrinciple,@SUTF_CompletionDate,@SUTF_ExtendedTo,           
@SUTF_Remarks,@SUTF_AttachID,@SUTF_CrBy,GetDate(),@SUTF_IPAddress,@SUTF_CompId)              
set @iUpdateOrSave=3                
set @iOper =@SUTF_PKID             
end

/

CREATE procedure [dbo].[spSAD_UsrOrGrp_Permission]    
(    
@Perm_PType Char(1),    
@Perm_UsrORGrpID int,    
@Perm_ModuleID int,    
@Perm_OpPKID int,    
@Perm_Status char(1),    
@Perm_Crby int,    
@Perm_CompID int,    
@Perm_IPAddress Varchar(25),    
@iOper Int Output           
)    
AS    
Begin    
Declare @Perm_PKID int     
 Set @Perm_PKID=(select isnull(max(Perm_PKID)+1,1) from SAD_UsrOrGrp_Permission)        
    Insert into SAD_UsrOrGrp_Permission(Perm_PKID,Perm_PType,Perm_UsrORGrpID,Perm_ModuleID,Perm_OpPKID,Perm_Status,    
     Perm_Crby,Perm_CrOn,Perm_CompID,Perm_IPAddress)    
     Values(@Perm_PKID,@Perm_PType,@Perm_UsrORGrpID,@Perm_ModuleID,@Perm_OpPKID,@Perm_Status,    
     @Perm_Crby,GetDate(),@Perm_CompID,@Perm_IPAddress)    
 set @iOper=3     
 End 

/

CREATE procedure [dbo].[spSad_UsrOrGrp_permissionDGO]  
(	
@SGP_ID int,
@SGP_ModID int,
@SGP_LevelGroup varchar(1),
@SGP_LevelGroupID int,
@SGP_View int,
@SGP_SaveOrUpdate int,
@SGP_ActiveOrDeactive int,
@SGP_Report int,
@SGP_Download int,
@SGP_Annotaion int,
@SGP_CreatedBy int,
@SGP_CreatedOn datetime,
@SGP_ApprovedBy int,
@SGP_ApprovedOn datetime,
@SGP_UpdatedBy int,
@SGP_UpdatedOn datetime,
@SGP_Status Varchar(2),
@SGP_DelFlag varchar(1),
@SGP_CompID int,
@iUpdateOrSave int Output,     
@iOper int Output             
)          
 as            
  if exists(Select Sgp_Id from Sad_UsrOrGrp_permissionDGO where  Sgp_ModId=@Sgp_ModId and  SGP_LevelGroup=@SGP_LevelGroup and SGP_LevelGroupID=@SGP_LevelGroupID )             
   begin                 
    Update Sad_UsrOrGrp_permissionDGO set Sgp_ModId=@Sgp_ModId, SGP_LevelGroup=@SGP_LevelGroup, SGP_LevelGroupID=@SGP_LevelGroupID, SGP_View=@SGP_View,
	SGP_SaveOrUpdate=@SGP_SaveOrUpdate,SGP_ActiveOrDeactive=@SGP_ActiveOrDeactive,SGP_Report=@SGP_Report,SGP_Download=@SGP_Download,SGP_Annotaion=@SGP_Annotaion,
	SGP_UpdatedBy=@SGP_UpdatedBy,SGP_UpdatedOn=GetDate(), SGP_Status=@SGP_Status	 
	where Sgp_ModId=@Sgp_ModId and SGP_LevelGroup=@SGP_LevelGroup and SGP_LevelGroupID=@SGP_LevelGroupID and SGP_CompID=@SGP_CompID
	set @iUpdateOrSave=2      
	set @iOper = @Sgp_Id   
  end                    
else   
	begin  
	set @Sgp_Id=(select isnull(max(SGP_ID)+1,1) from Sad_UsrOrGrp_permissionDGO)
	Insert into Sad_UsrOrGrp_permissionDGO (Sgp_Id,Sgp_ModId,SGP_LevelGroup, SGP_LevelGroupID,SGP_View,SGP_SaveOrUpdate,SGP_ActiveOrDeactive,SGP_Report,
	SGP_CreatedBy,SGP_CreatedOn,SGP_Status,SGP_DelFlag,SGP_CompID,SGP_Download,SGP_Annotaion) values 
	(@Sgp_Id, @Sgp_ModId, @SGP_LevelGroup, @SGP_LevelGroupID,@SGP_View,@SGP_SaveOrUpdate,@SGP_ActiveOrDeactive,@SGP_Report,
	@SGP_CreatedBy, getdate(),@SGP_Status,@SGP_DelFlag,@SGP_CompID,@SGP_Download,@SGP_Annotaion)
	set @iUpdateOrSave=3       
	set @iOper = @Sgp_Id           
	end

/

CREATE Procedure [dbo].[spTRACe_Cabinet]
(
@TC_PKID int,
@TC_Name Varchar(1000),
@TC_Remarks Varchar(8000),
@TC_Status char(1),
@TC_CrBy int,
@TC_IPAddress Varchar(25),
@TC_CompID int,
@iUpdateOrSave int Output,                        
@iOper int Output  
)
as  
if exists(select TC_PKID from TRACe_Cabinet Where TC_Name=@TC_Name And TC_CompID=@TC_CompID)    
 begin   
set @TC_PKID=(select TC_PKID from TRACe_Cabinet Where TC_Name=@TC_Name And TC_CompID=@TC_CompID)                           
set @iUpdateOrSave=2                         
set @iOper =@TC_PKID
 end              
else                                             
 begin                          
 set @TC_PKID=(select isnull(max(TC_PKID)+1,1) from TRACe_Cabinet)                          
 insert into  TRACe_Cabinet (TC_PKID,TC_Name,TC_Remarks,TC_Status,TC_CrOn,TC_CrBy,TC_IPAddress,TC_CompID)                          
 values(@TC_PKID,@TC_Name,@TC_Remarks,@TC_Status,GetDate(),@TC_CrBy,@TC_IPAddress,@TC_CompID)                          
  set @iUpdateOrSave=3                         
 set @iOper = @TC_PKID                               
end

/

create Procedure [dbo].[spTRACe_CompanyBranchDetails]
(
@Company_Branch_Id int,
@Company_Branch_CompanyID int,
@Company_Branch_Name varchar(100),
@Company_Branch_Address varchar(500),
@Company_Branch_Contact_Person varchar(50),
@Company_Branch_Contact_MobileNo varchar(15),
@Company_Branch_Contact_LandLineNo varchar(50),
@Company_Branch_Contact_Email varchar(100),
@Company_Branch_Designation varchar(500),
@Company_Branch_DelFlag varchar(1),
@Company_Branch_STATUS varchar(2),
@Company_Branch_CRBY int,
@Company_Branch_UpdatedBy int,
@Company_Branch_IPAddress varchar(25),
@Company_Branch_CompID int,
@iUpdateOrSave int Output,
@iOper int Output
)
As
if exists(select Company_Branch_Id from TRACe_CompanyBranchDetails where Company_Branch_Id=@Company_Branch_Id And Company_Branch_CompID=@Company_Branch_CompID)
Begin
Update TRACe_CompanyBranchDetails set Company_Branch_Name=@Company_Branch_Name,Company_Branch_Address=@Company_Branch_Address,Company_Branch_Contact_Person=@Company_Branch_Contact_Person,
Company_Branch_Contact_MobileNo=@Company_Branch_Contact_MobileNo,Company_Branch_Contact_LandLineNo=@Company_Branch_Contact_LandLineNo,Company_Branch_Contact_Email=@Company_Branch_Contact_Email,
Company_Branch_Designation=@Company_Branch_Designation,Company_Branch_DelFlag=@Company_Branch_DelFlag,Company_Branch_UpdatedOn=getdate(),Company_Branch_UpdatedBy=@Company_Branch_UpdatedBy,
Company_Branch_IPAddress=@Company_Branch_IPAddress where Company_Branch_Id=@Company_Branch_Id and Company_Branch_CompanyID=@Company_Branch_CompanyID and Company_Branch_CompID=@Company_Branch_CompID    
set @iUpdateOrSave=2
set @iOper=@Company_Branch_Id
End
Else
Begin
set @Company_Branch_Id=(select IsNull(Max(Company_Branch_Id)+1,1) from TRACe_CompanyBranchDetails)
insert into TRACe_CompanyBranchDetails(Company_Branch_Id,Company_Branch_CompanyID,Company_Branch_Name,Company_Branch_Address,Company_Branch_Contact_Person,
Company_Branch_Contact_MobileNo,Company_Branch_Contact_LandLineNo,Company_Branch_Contact_Email,Company_Branch_Designation,Company_Branch_DelFlag,
Company_Branch_STATUS,Company_Branch_CRON,Company_Branch_CRBY,Company_Branch_IPAddress,Company_Branch_CompID)
values(@Company_Branch_Id,@Company_Branch_CompanyID,@Company_Branch_Name,@Company_Branch_Address,@Company_Branch_Contact_Person,
@Company_Branch_Contact_MobileNo,@Company_Branch_Contact_LandLineNo,@Company_Branch_Contact_Email,@Company_Branch_Designation,@Company_Branch_DelFlag,
@Company_Branch_STATUS,Getdate(),@Company_Branch_CRBY,@Company_Branch_IPAddress,@Company_Branch_CompID)
set @iUpdateOrSave=3
set @iOper=@Company_Branch_Id
End 

/

CREATE Procedure [dbo].[spTrace_CompanyDetails](
	@Company_ID int ,
	@Company_Code varchar(30)  ,
	@Company_Name varchar(500)  ,
	@Company_Address varchar(1000)  ,
	@Company_City varchar(500)  ,
	@Company_State varchar(500)  ,
	@Company_Country varchar(500)  ,
	@Company_PinCode varchar(50)  ,
	@Company_EmailID varchar(100)  ,
	@Company_Establishment_Date varchar(500)  ,
	@Company_ContactPerson varchar(500)  ,
	@Company_MobileNo varchar(100)  ,
	@Company_ContactEmailID varchar(30)  ,
	@Company_TelephoneNo varchar(30)  ,
	@Company_WebSite varchar(100) ,
	@Company_ContactNo1 varchar(30) ,
	@Company_ContactNo2 varchar(30) ,
	@Company_HolderName varchar(200) ,
	@Company_AccountNo varchar(50) ,
	@Company_Bankname varchar(50) ,
	@Company_Branch varchar(200) ,
	@Company_Conditions varchar(500) ,
	@Company_Paymentterms varchar(500) ,
	@Company_CrBy int ,
	@Company_UpdatedBy int ,
	@Company_IPAddress Varchar(25),
	@Company_CompID int,
	@iUpdateOrSave int Output,
	@iOper int Output
)
As
if (@Company_ID>0)
Begin
 set @Company_ID=(select Company_ID from Trace_CompanyDetails where Company_ID=@Company_ID And Company_CompID=@Company_CompID )
  Update Trace_CompanyDetails set Company_Name=@Company_Name, Company_Code=@Company_Code ,Company_Address =@Company_Address ,Company_City=@Company_City,Company_State =@Company_State,
Company_Country =@Company_Country ,Company_PinCode =@Company_PinCode ,Company_EmailID =@Company_EmailID ,Company_Establishment_Date=@Company_Establishment_Date  ,
Company_ContactPerson =@Company_ContactPerson ,Company_MobileNo =@Company_MobileNo ,Company_ContactEmailID =@Company_ContactEmailID, Company_TelephoneNo=@Company_TelephoneNo ,
Company_UpdatedBy=@Company_UpdatedBy,Company_UpdatedOn=GetDate(),@Company_State='Updated',Company_WebSite=@Company_WebSite,Company_ContactNo1=@Company_ContactNo1,Company_ContactNo2=@Company_ContactNo2,
Company_HolderName=@Company_HolderName,Company_AccountNo=@Company_AccountNo,Company_Bankname=@Company_Bankname,Company_Branch=@Company_Branch,Company_Conditions=@Company_Conditions,Company_Paymentterms=@Company_Paymentterms
  where Company_ID=@Company_ID and Company_CompID=@Company_CompID
  set @iUpdateOrSave=2
  set @iOper = @Company_ID
End
   Else
 Begin
 set @Company_ID=(select IsNull(Max(Company_ID)+1,1) from Trace_CompanyDetails)
  insert into Trace_CompanyDetails(Company_ID,Company_Code,Company_Name,Company_Address,Company_City,Company_State,Company_Country,Company_PinCode,Company_EmailID,Company_Establishment_Date,
Company_ContactPerson,Company_MobileNo,Company_ContactEmailID,Company_TelephoneNo,Company_Status,Company_CrBy,Company_CrOn ,Company_IPAddress,Company_CompID,Company_WebSite,Company_ContactNo1,Company_ContactNo2,
Company_HolderName,Company_AccountNo,Company_Bankname,Company_Branch,Company_Conditions,Company_Paymentterms)
  values(@Company_ID,@Company_Code,@Company_Name,@Company_Address,@Company_City,@Company_State,@Company_Country,@Company_PinCode,@Company_EmailID,@Company_Establishment_Date,
@Company_ContactPerson,@Company_MobileNo,@Company_ContactEmailID,@Company_TelephoneNo,'Saved',@Company_CrBy,GetDate(),@Company_IPAddress,@Company_CompID,@Company_WebSite,@Company_ContactNo1,@Company_ContactNo2,
@Company_HolderName,@Company_AccountNo,@Company_Bankname,@Company_Branch,@Company_Conditions,@Company_Paymentterms)
 set @iUpdateOrSave=3
 set @iOper = @Company_ID
End 

/

CREATE Procedure [dbo].[spTRACe_Documents]
(
@TF_PKID int,
@TF_CabinetID int,
@TF_SubCabinetID int,
@TF_FolderID int,
@TF_FilePath Varchar(500),
@TF_Name Varchar(1000),
@TF_Desc Varchar(8000),
@TF_Remarks Varchar(8000),
@TF_Status char(1),
@TF_CrBy int,
@TF_UpdatedBy int,
@TF_Attch_CrBy int,
@TF_Attch_CrOn datetime,
@TF_IPAddress Varchar(25),
@TF_CompID int,
@iUpdateOrSave int Output,                        
@iOper int Output
)
as                               
if exists(select TF_PKID from TRACe_Documents Where TF_Name=@TF_Name And TF_Desc=@TF_Desc And TF_CabinetID=@TF_CabinetID And TF_SubCabinetID=@TF_SubCabinetID And TF_FolderID=@TF_FolderID And TF_CompID=@TF_CompID)    
 begin   
 set @TF_PKID=(select TF_PKID from TRACe_Documents Where TF_Name=@TF_Name And TF_Desc=@TF_Desc And TF_CabinetID=@TF_CabinetID And TF_SubCabinetID=@TF_SubCabinetID And TF_FolderID=@TF_FolderID And TF_CompID=@TF_CompID)            
 update TRACe_Documents set TF_Name=@TF_Name,TF_Remarks=@TF_Remarks,TF_Status=@TF_Status,TF_Desc=@TF_Desc,
TF_UpdatedOn=Getdate(),TF_UpdatedBy=@TF_UpdatedBy,TF_Attch_CrBy=@TF_Attch_CrBy,TF_Attch_CrOn=@TF_Attch_CrOn,TF_IPAddress=@TF_IPAddress ,TF_FilePath=@TF_FilePath
 where  TF_PKID=@TF_PKID And TF_CompID=@TF_CompID                   
set @iUpdateOrSave=2                         
set @iOper =@TF_PKID            
 end              
else                    
 begin                          
 set @TF_PKID=(select isnull(max(TF_PKID)+1,1) from TRACe_Documents)                          
 insert into  TRACe_Documents (TF_PKID,TF_CabinetID,TF_SubCabinetID,TF_FolderID,TF_FilePath,TF_Name,
TF_Desc,TF_Remarks,TF_Status,TF_CrOn,TF_CrBy,TF_Attch_CrBy,TF_Attch_CrOn,TF_IPAddress,TF_CompID)                          
 values(@TF_PKID,@TF_CabinetID,@TF_SubCabinetID,@TF_FolderID,@TF_FilePath,@TF_Name,
@TF_Desc,@TF_Remarks,@TF_Status,GetDate(),@TF_CrBy,@TF_Attch_CrBy,@TF_Attch_CrOn,@TF_IPAddress,@TF_CompID)                          
 set @iUpdateOrSave=3                         
 set @iOper = @TF_PKID                               
end

/

CREATE Procedure [dbo].[spTRACe_Folder]
(
@TF_PKID int,
@TF_CabinetID int,
@TF_SubCabinetID int,
@TF_Name Varchar(1000),
@TF_Remarks Varchar(8000),
@TF_Status char(1),
@TF_CrBy int,
@TF_UpdatedBy int,
@TF_IPAddress Varchar(25),
@TF_CompID int,
@iUpdateOrSave int Output,                        
@iOper int Output  
)
as                               
if exists(select TF_PKID from TRACe_Folder Where TF_Name=@TF_Name And TF_CabinetID=@TF_CabinetID And TF_SubCabinetID=@TF_SubCabinetID And TF_CompID=@TF_CompID)    
 begin   
 set @TF_PKID=(select TF_PKID from TRACe_Folder Where TF_Name=@TF_Name And TF_CabinetID=@TF_CabinetID And TF_SubCabinetID=@TF_SubCabinetID And TF_CompID=@TF_CompID)          
 update TRACe_Folder set TF_Name=@TF_Name,TF_Remarks=@TF_Remarks,TF_Status=@TF_Status,
TF_UpdatedOn=Getdate(),TF_UpdatedBy=@TF_UpdatedBy,TF_IPAddress=@TF_IPAddress  
 where  TF_PKID=@TF_PKID And TF_CompID=@TF_CompID                   
set @iUpdateOrSave=2                         
set @iOper =@TF_PKID            
 end              
else                    
 begin                          
 set @TF_PKID=(select isnull(max(TF_PKID)+1,1) from TRACe_Folder)                          
 insert into  TRACe_Folder (TF_PKID,TF_CabinetID,TF_SubCabinetID,TF_Name,TF_Remarks,TF_Status,
TF_CrOn,TF_CrBy,TF_IPAddress,TF_CompID)                          
 values(@TF_PKID,@TF_CabinetID,@TF_SubCabinetID,@TF_Name,@TF_Remarks,@TF_Status,
GetDate(),@TF_CrBy,@TF_IPAddress,@TF_CompID)                          
 set @iUpdateOrSave=3                         
 set @iOper = @TF_PKID                               
end

/

CREATE Procedure [dbo].[spTRACe_SubCabinet]
(
@TSC_PKID int,
@TSC_CabinetID int,
@TSC_Name Varchar(1000),
@TSC_Remarks Varchar(8000),
@TSC_Decs Varchar(8000),
@TSC_Status char(1),
@TSC_CrBy int,
@TSC_IPAddress Varchar(25),
@TSC_CompID int,
@iUpdateOrSave int Output,                        
@iOper int Output  
)
as 
if exists(select TSC_PKID from TRACe_SubCabinet Where TSC_CabinetID=@TSC_CabinetID And TSC_Name=@TSC_Name And TSC_CompID=@TSC_CompID)    
 begin   
set @TSC_PKID=(select TSC_PKID from TRACe_SubCabinet Where TSC_CabinetID=@TSC_CabinetID And TSC_Name=@TSC_Name And TSC_CompID=@TSC_CompID)                           
set @iUpdateOrSave=2                         
set @iOper =@TSC_PKID
 end              
else                                            
 begin                          
 set @TSC_PKID=(select isnull(max(TSC_PKID)+1,1) from TRACe_SubCabinet)                          
 insert into  TRACe_SubCabinet (TSC_PKID,TSC_CabinetID,TSC_Name,TSC_Remarks,TSC_Decs,TSC_Status,TSC_CrOn,TSC_CrBy,TSC_IPAddress,TSC_CompID)                          
 values(@TSC_PKID,@TSC_CabinetID,@TSC_Name,@TSC_Remarks,@TSC_Decs,@TSC_Status,GetDate(),@TSC_CrBy,@TSC_IPAddress,@TSC_CompID)                          
 set @iUpdateOrSave=3                         
 set @iOper = @TSC_PKID                               
end

/

CREATE Procedure [dbo].[spUploaded_Shared_Documents] 
(  
@USD_PKID Int,
@USD_FName varchar(5000),
@USD_Ext varchar(50),
@USD_Size varchar(1000),
@USD_UploadedDocType int,
@USD_CreatedBy varchar(5000),
@USD_UpdatedBy varchar(5000),
@USD_SharedWith varchar(5000),
@USD_YearID int,
@USD_IPAddress varchar(100),
@USD_CompID Int, 
@iUpdateOrSave int Output,          
@iOper int Output      
)  
as      
  if exists(select USD_PKID from Uploaded_Shared_Documents where USD_PKID=@USD_PKID and USD_CompID=@USD_CompID)              
Begin    
Declare @USD_Status Varchar(10)  
 set @USD_Status ='U'   
 update Uploaded_Shared_Documents set USD_FName=@USD_FName,USD_Ext=@USD_Ext,USD_Size=@USD_Size,USD_UploadedDocType=@USD_UploadedDocType,  
 USD_UpdatedBy=@USD_UpdatedBy,USD_UpdatedOn=GetDate(),USD_SharedWith=@USD_SharedWith,USD_SharedOn=GetDate(),USD_IPAddress=@USD_IPAddress,  
 USD_CompID=@USD_CompID,USD_Status=@USD_Status,USD_YearID=@USD_YearID  where USD_PKID=@USD_PKID and USD_CompID=@USD_CompID           
 Set @iUpdateOrSave=2              
 Set @iOper=@USD_PKID            
 End              
      Else               
 Begin   
 set @USD_PKID=(select isnull(max(USD_PKID)+1,1) from Uploaded_Shared_Documents where USD_CompID=@USD_CompID)              
   insert into Uploaded_Shared_Documents (USD_PKID,USD_FName,USD_Ext,USD_Size,USD_UploadedDocType,USD_CreatedBy,USD_CreatedOn,  
   USD_SharedWith,USD_SharedOn,USD_Status,USD_YearID,USD_IPAddress,USD_CompID)              
   values(@USD_PKID,@USD_FName,@USD_Ext,@USD_Size,@USD_UploadedDocType,@USD_CreatedBy,GetDate(),
   @USD_SharedWith,GetDate(),'C',@USD_YearID,@USD_IPAddress,@USD_CompID)  
   set @iUpdateOrSave=3           
   set @iOper=@USD_PKID            
End 

/

CREATE Procedure [dbo].[Spuser_activity_logs]          
(                
@ut_pkid int,
@ut_usrid int,
@ut_module varchar(500),
@ut_submodule varchar(500),
@ut_asgnmnt_created int,
@ut_asgnmnt_inprogress int,
@ut_asgnmnt_completed int,
@ut_compid int                               
)                      
 as                           
  if exists(select ut_pkid from user_activity_logs where ut_usrid=@ut_usrid and ut_logindate = getdate())
 begin   
 set @ut_pkid=(select ut_pkid from user_activity_logs where ut_usrid=@ut_usrid and ut_logindate = getdate()) 
  update user_activity_logs set ut_asgnmnt_created=@ut_asgnmnt_created,ut_asgnmnt_inprogress=@ut_asgnmnt_inprogress,
  ut_asgnmnt_completed=@ut_asgnmnt_completed
where ut_pkid=@ut_pkid                                              
 end                      
else                       
 begin                      
 set @ut_pkid=(select isnull(max(ut_pkid)+1,1) from user_activity_logs where ut_compid=@ut_compid)                      
  insert into user_activity_logs (ut_pkid,ut_usrid,ut_module,ut_submodule,ut_login_datetime,ut_asgnmnt_created,                    
ut_asgnmnt_inprogress,ut_asgnmnt_completed,ut_compid,ut_logindate)                      
  values                      
  (@ut_pkid,@ut_usrid,@ut_module,@ut_submodule,getdate(),@ut_asgnmnt_created,                    
@ut_asgnmnt_inprogress,@ut_asgnmnt_completed,@ut_compid,getdate())                                        
 end   

/

CREATE Procedure [dbo].[spWF_Inward_Masters](              
@WIM_PKID int,
@WIM_InwardNo varchar(100),
@WIM_MonthID int,
@WIM_YearID int,
@WIM_InwardDate datetime,
@WIM_InwardTime varchar(100),
@WIM_Title varchar(2000),
@WIM_DocReferenceno varchar(2000),
@WIM_DocRecievedDate datetime,
@WIM_DateOnDocument datetime,
@WIM_ReceiptMode int,
@WIM_Deptartment int,
@WIM_Customer int,
@WIM_ContactPerson varchar(2000),
@WIM_ContactEmailID varchar(2000),
@WIM_ContactPhNO varchar(2000),
@WIM_Remarks varchar(2000), 
@WIM_AttachID int,
@WIM_Status varchar(2),
@WIM_Delflag varchar(2),
@WIM_CreatedBy int,
@WIM_IPAdress  varchar(50),
@WIM_CompID int,
@WIM_InwardOrWorkFlow  int,
@WIM_Address varchar(2000),
@WIM_Stage int,
@WIM_WorkFLowID int,
@WIM_WorkFLowArchiveID int,
@WIM_Progress_Status int,
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as                     
  if exists(Select WIM_PKID from WF_Inward_Masters where WIM_PKID=@WIM_PKID)  
    begin        
   Update WF_Inward_Masters set WIM_Title=@WIM_Title,WIM_DocReferenceno=@WIM_DocReferenceno,WIM_DocRecievedDate=@WIM_DocRecievedDate,WIM_DateOnDocument=@WIM_DateOnDocument,
   WIM_ReceiptMode=@WIM_ReceiptMode,WIM_Deptartment=@WIM_Deptartment,WIM_Customer=@WIM_Customer,WIM_ContactPerson=@WIM_ContactPerson,WIM_ContactPhNO=@WIM_ContactPhNO,WIM_AttachID=@WIM_AttachID,
  WIM_Status=@WIM_Status,WIM_UpdatedOn=GetDate(),WIM_UpdatedBy=@WIM_CreatedBy,WIM_IPAdress=@WIM_IPAdress,WIM_Address=@WIM_Address,WIM_Stage=@WIM_Stage,WIM_Progress_Status=@WIM_Progress_Status
	where WIM_PKID=@WIM_PKID And WIM_CompID=@WIM_CompID
	set @iUpdateOrSave=2      
	set @iOper = @WIM_PKID     
  end                    
else   
begin  
set @WIM_PKID=(select isnull(max(WIM_PKID)+1,1) from WF_Inward_Masters where WIM_CompID= @WIM_CompID)                                  
 insert into WF_Inward_Masters(WIM_PKID,WIM_InwardNo,WIM_MonthID,WIM_YearID,WIM_InwardDate,WIM_InwardTime,WIM_Title,WIM_DocReferenceno,WIM_DocRecievedDate,WIM_DateOnDocument,
 WIM_ReceiptMode,WIM_Deptartment,WIM_Customer,WIM_ContactPerson,WIM_ContactEmailID,WIM_ContactPhNO,WIM_Remarks,WIM_AttachID,WIM_Status,WIM_Delflag,
 WIM_CreatedOn,WIM_CreatedBy,WIM_IPAdress,WIM_CompID,WIM_InwardOrWorkFlow,WIM_Address,WIM_Stage,WIM_WorkFLowID,WIM_WorkFLowArchiveID,WIM_Progress_Status)     
           
 values                
 (@WIM_PKID,@WIM_InwardNo,@WIM_MonthID,@WIM_YearID,@WIM_InwardDate,@WIM_InwardTime,@WIM_Title,@WIM_DocReferenceno,@WIM_DocRecievedDate,@WIM_DateOnDocument,
 @WIM_ReceiptMode,@WIM_Deptartment,@WIM_Customer,@WIM_ContactPerson,@WIM_ContactEmailID,@WIM_ContactPhNO,@WIM_Remarks,@WIM_AttachID,@WIM_Status,@WIM_Delflag,
 getdate(),@WIM_CreatedBy,@WIM_IPAdress,@WIM_CompID,@WIM_InwardOrWorkFlow,@WIM_Address,@WIM_Stage,@WIM_WorkFLowID,@WIM_WorkFLowArchiveID,@WIM_Progress_Status)                
 set @iUpdateOrSave=3               
 set @iOper = @WIM_PKID                     
end 

/

CREATE  Procedure [dbo].[spWF_Inward_Masters_history](              
@WIMH_PKID int,
@WIMH_InwardPKID int,
@WIMH_User int,
@WIMH_SentTOID int,
@WIMH_Remarks varchar(max),
@WIMH_LineNo int,
@WIMH_Stage int,
@WIMH_CompID int,
@WIMH_ReplyOrForward int,
@iUpdateOrSave int Output,              
@iOper int Output    
)              
as                     
  begin  
  set @WIMH_PKID=(select isnull(max(WIMH_PKID)+1,1) from WF_Inward_Masters_history)                          
 insert into WF_Inward_Masters_history(WIMH_PKID,WIMH_InwardPKID,WIMH_User,WIMH_SentTOID,WIMH_Datetime,WIMH_Remarks,WIMH_LineNo,WIMH_Stage,WIMH_CompID,WIMH_ReplyOrForward)                
 values (@WIMH_PKID,@WIMH_InwardPKID,@WIMH_User,@WIMH_SentTOID,GetDate(),@WIMH_Remarks,@WIMH_LineNo,@WIMH_Stage,@WIMH_CompID,@WIMH_ReplyOrForward)                
 set @iUpdateOrSave=3               
 set @iOper = @WIMH_PKID                     
end

/

CREATE Procedure [dbo].[spWF_Outward_Masters](
@WOM_ID int,		
@WOM_OutwardNo varchar(200),
@WOM_MonthID int,
@WOM_YearID int,
@WOM_OutwardDate datetime,
@WOM_OutwardTime varchar(100),
@WOM_Department int,
@WOM_Customer int,
@WOM_InwardID int,
@WOM_InwardRefNo varchar(200),
@WOM_InwardName varchar(200),
@WOM_Address varchar(max),
@WOM_Page varchar(100),
@WOM_Sensitivity int,
@WOM_OutwardRefNo varchar(200),
@WOM_DispathMode int,
@WOM_ReplyAwaited int,
@WOM_DocumentType int,
@WOM_MailingExpenses varchar(200),
@WOM_AttachmentDetails varchar(max),
@WOM_Remarks varchar(max),
@WOM_SendTo varchar(200),
@WOM_AttachID int,
@WOM_CreatedBy int,
@WOM_CreatedOn datetime,
@WOM_UpdatedBy int,
@WOM_UpdatedOn datetime,
@WOM_Status varchar(2),
@WOM_Delflag varchar(1),
@WOM_CompID int,
@WOM_IPAddress varchar(200),
@iUpdateOrSave int Output,              
@iOper int Output                
)          
 as            
  if exists(Select WOM_ID from WF_Outward_Masters where WOM_ID=@WOM_ID and WOM_CompID=@WOM_CompID)             
   begin                 
    Update WF_Outward_Masters set WOM_OutwardNo=@WOM_OutwardNo,WOM_OutwardDate=@WOM_OutwardDate,WOM_OutwardTime=@WOM_OutwardTime,
                           WOM_Department=@WOM_Department,WOM_Customer=@WOM_Customer,WOM_InwardID=@WOM_InwardID,WOM_InwardRefNo=@WOM_InwardRefNo,
                           WOM_InwardName=@WOM_InwardName,WOM_Address=@WOM_Address,WOM_Page=@WOM_Page,WOM_Sensitivity=@WOM_Sensitivity,
                           WOM_OutwardRefNo=@WOM_OutwardRefNo,WOM_DispathMode=@WOM_DispathMode,WOM_ReplyAwaited=@WOM_ReplyAwaited,
                           WOM_DocumentType=@WOM_DocumentType,WOM_MailingExpenses=@WOM_MailingExpenses,WOM_AttachmentDetails=@WOM_AttachmentDetails,
                           WOM_Remarks=@WOM_Remarks,WOM_SendTo=@WOM_SendTo,WOM_AttachID=@WOM_AttachID,
                           WOM_UpdatedBy=@WOM_UpdatedBy,WOM_UpdatedOn=GetDate(),                           
                           WOM_Status=@WOM_Status,WOM_Delflag=@WOM_Delflag,WOM_IPAddress=@WOM_IPAddress 
		                   where WOM_ID=@WOM_ID and WOM_CompID=@WOM_CompID  
	set @iUpdateOrSave=2      
	set @iOper = @WOM_ID   
  end                    
else   
   begin
   set @WOM_ID=(select isnull(max(WOM_ID)+1,1) from WF_Outward_Masters where WOM_CompID= @WOM_CompID) 
   Insert into WF_Outward_Masters(WOM_ID,WOM_OutwardNo,WOM_MonthID,WOM_YearID,WOM_OutwardDate,WOM_OutwardTime,WOM_Department,WOM_Customer,WOM_InwardID,WOM_InwardRefNo,WOM_InwardName,WOM_Address,
                                     WOM_Page,WOM_Sensitivity,WOM_OutwardRefNo,WOM_DispathMode,WOM_ReplyAwaited,WOM_DocumentType,WOM_MailingExpenses,
                                     WOM_AttachmentDetails,WOM_Remarks,WOM_SendTo,WOM_AttachID,WOM_CreatedBy,WOM_CreatedOn,WOM_Status,WOM_Delflag,WOM_CompID,WOM_IPAddress)
values         
                                    (@WOM_ID,@WOM_OutwardNo,@WOM_MonthID,@WOM_YearID,@WOM_OutwardDate,@WOM_OutwardTime,@WOM_Department,@WOM_Customer,@WOM_InwardID,@WOM_InwardRefNo,@WOM_InwardName,@WOM_Address,
                                     @WOM_Page,@WOM_Sensitivity,@WOM_OutwardRefNo,@WOM_DispathMode,@WOM_ReplyAwaited,@WOM_DocumentType,@WOM_MailingExpenses,
                                     @WOM_AttachmentDetails,@WOM_Remarks,@WOM_SendTo,@WOM_AttachID,@WOM_CreatedBy,GetDate(),@WOM_Status,@WOM_Delflag,@WOM_CompID,@WOM_IPAddress)
	set @iUpdateOrSave=3       
	set @iOper = @WOM_ID       
end

/

Create Procedure [dbo].[spWF_Workflow_Master]
(    
 @WM_ID int,    
 @WM_WF_Name varchar(80),    
 @WM_WF_Desc Varchar(255),    
 @WM_WF_Department int,
 @WM_Start_Date datetime,    
 @WM_End_Date datetime,     
 @WM_WorkflowHead varchar(50),     
 @WM_CreatedBy int,  
 @WM_UpdateBy int,      
 @WM_WFStatus varchar(4),    
 @WM_DelFlag varchar(4),    
 @WM_CompID int,   
 @iUpdateOrSave int Output,              
 @iOper int Output    
)    
as    
     if Exists(Select WM_ID from WF_Workflow_Master where WM_ID = @WM_ID and WM_CompID=@WM_CompID)    
		Begin    
			Update  WF_Workflow_Master set WM_WF_Name=@WM_WF_Name,WM_WF_Desc=@WM_WF_Desc,WM_WF_Department=@WM_WF_Department, 
			WM_Start_Date=@WM_Start_Date,WM_End_Date=@WM_End_Date,WM_WorkflowHead=@WM_WorkflowHead, 
			WM_UpdateBy=@WM_UpdateBy,WM_UpdatedOn=GetDate() 
			where WM_ID=@WM_ID and WM_CompID =@WM_CompID
			set @iUpdateOrSave=2      
			set @iOper = @WM_ID  
		End    
     else    
		Begin    			
			set @WM_ID=(select isnull(max(WM_ID)+1,1) from WF_Workflow_Master)        
			Insert into WF_Workflow_Master(WM_ID,WM_WF_Name,WM_WF_Desc,WM_WF_Department,
			WM_Start_Date,WM_End_Date,WM_WorkflowHead,WM_CreatedBy,WM_CreatedOn,
			WM_WFStatus,WM_DelFlag,WM_CompID)     
			values (@WM_ID,@WM_WF_Name,@WM_WF_Desc,@WM_WF_Department,
			@WM_Start_Date,@WM_End_Date,@WM_WorkflowHead,@WM_CreatedBy,getdate(),
			@WM_WFStatus,@WM_DelFlag,@WM_CompID)    
			set @iUpdateOrSave=3       
			set @iOper = @WM_ID      
     End    

	 /

CREATE Procedure [dbo].[spSAD_SUPPLIER_MASTER]                 
(                    
@SUP_ID int,
@SUP_Name varchar (150),
@SUP_Code varchar(50),
@SUP_ContactPerson varchar(50),
@SUP_Address varchar(50),
@SUP_PhoneNo varchar(50),
@SUP_Fax varchar(50),
@SUP_Email varchar(50),
@SUP_Website varchar(50),
@SUP_CRBY int,
@SUP_CRON datetime,
@SUP_STATUS varchar(25),
@SUP_IPAddress varchar(25),
@SUP_CompID int,
@iUpdateOrSave int Output,                    
@iOper int Output              
)           
As                          
if exists(select SUP_ID from SAD_SUPPLIER_MASTER where SUP_ID= @SUP_ID And SUP_CompID=@SUP_CompID)                      
Begin                          
 set @SUP_ID=(select SUP_ID from SAD_SUPPLIER_MASTER where SUP_ID= @SUP_ID And SUP_CompID=@SUP_CompID)                      
  Update SAD_SUPPLIER_MASTER set  SUP_Name=@SUP_Name,SUP_Code=@SUP_Code,SUP_ContactPerson=@SUP_ContactPerson,SUP_Address=@SUP_Address,
  SUP_PhoneNo=@SUP_PhoneNo,SUP_Fax=@SUP_Fax,SUP_Email=@SUP_Email,SUP_Website=@SUP_Website,
 SUP_STATUS='U',SUP_IPAddress=@SUP_IPAddress      
  where SUP_ID=@SUP_ID and SUP_CompID=@SUP_CompID                 
  set @iUpdateOrSave=2                   
  set @iOper = @SUP_ID               
End                    
Else                       
Begin                      
set @SUP_ID=(select IsNull(Max(SUP_ID)+1,1) from SAD_SUPPLIER_MASTER)                      
   insert into SAD_SUPPLIER_MASTER(SUP_ID,SUP_Name,SUP_Code,SUP_ContactPerson,SUP_Address,SUP_PhoneNo,SUP_Fax,
   SUP_Email,SUP_Website,SUP_CRBY,SUP_CRON,SUP_STATUS,SUP_IPAddress,SUP_CompID)                    
   values(@SUP_ID,@SUP_Name,@SUP_Code,@SUP_ContactPerson,@SUP_Address,@SUP_PhoneNo,@SUP_Fax,
   @SUP_Email,@SUP_Website,@SUP_CRBY,GETDATE(),'C',@SUP_IPAddress,@SUP_CompID)                 
   set @iUpdateOrSave=3                     
   set @iOper = @SUP_ID                      
End

/

Create procedure [dbo].[spACC_ScheduleHeading]            
(                
@ASH_ID int,  
@ASH_Name varchar(5000),  
@ASH_DELFLG varchar(1),  
@ASH_CRBY int ,  
@ASH_STATUS varchar(2),  
@ASH_UPDATEDBY int ,  
@ASH_IPAddress varchar(25) ,  
@ASH_CompId int ,  
@ASH_YEARId int,   
@Ash_scheduletype int,  
@Ash_Orgtype int,  
@iUpdateOrSave int Output,                  
@iOper int Output                    
)                  
As                       
  if exists(select ASH_ID from ACC_ScheduleHeading where ASH_ID= @ASH_ID and ASH_CompId= @ASH_CompId)    
Begin                    
set @ASH_STATUS ='U'       
         update ACC_ScheduleHeading  set ASH_Name= @ASH_Name, ASH_STATUS=@ASH_STATUS, ASH_UPDATEDBY= @ASH_UPDATEDBY, ASH_UPDATEDON=GetDate(),  
   ASH_IPAddress=@ASH_IPAddress, ASH_YEARId=@ASH_YEARId , Ash_scheduletype= @Ash_scheduletype, Ash_Orgtype=@Ash_Orgtype             
  where ASH_ID=@ASH_ID  and ASH_CompId = @ASH_CompId                
    set @iUpdateOrSave=2                 
    set @iOper = @ASH_ID                   
End                         
   Else                   
Begin                        
 set @ASH_ID=(select isnull(max(ASH_ID)+1,1) from ACC_ScheduleHeading)   
  insert into ACC_ScheduleHeading(ASH_ID,ASH_Name,ASH_Code,ASH_DELFLG, ASH_CRBY,   
        ASH_CRON, ASH_STATUS, ASH_IPAddress, ASH_CompId, ASH_YEARId,Ash_scheduletype,Ash_Orgtype)                  
values                  
  (@ASH_ID, @ASH_Name,(select concat('H00',max(ASH_ID+1)) from ACC_ScheduleHeading),@ASH_DELFLG, @ASH_CRBY, GetDate(),                
   @ASH_STATUS, @ASH_IPAddress, @ASH_CompId, @ASH_YEARId,@Ash_scheduletype,@Ash_Orgtype)                  
   set @iUpdateOrSave=3                   
   set @iOper = @ASH_ID                  
End 

/
  
Create procedure [dbo].[spACC_ScheduleSubHeading]            
(                
@ASSH_ID int,  
@ASSH_Name varchar(5000),  
@ASSH_HeadingID int,  
@ASSH_DELFLG varchar(1),  
--@CASP_CRON datetime ,  
@ASSH_CRBY int ,  
--@CASP_APPROVEDBY int ,  
--@CASP_APPROVEDON datetime ,  
@ASSH_STATUS varchar(2),  
@ASSH_UPDATEDBY int ,  
--@CASP_UPDATEDON datetime ,  
--@CASP_DELETEDBY int ,  
--@CASP_DELETEDON datetime ,  
--@CASP_RECALLBY int ,  
--@CASP_RECALLON datetime ,  
@ASSH_IPAddress varchar(25) ,  
@ASSH_CompId int ,  
@ASSH_YEARId int,            
@ASSH_Notes int,  
@ASSH_scheduletype int,  
@ASSH_Orgtype int,  
@iUpdateOrSave int Output,                  
@iOper int Output                    
)                  
As                       
  if exists(select ASSH_ID from ACC_ScheduleSubHeading where ASSH_ID= @ASSH_ID and ASSH_CompId= @ASSH_CompId)    
Begin                    
set @ASSH_STATUS ='U'       
         update ACC_ScheduleSubHeading  set ASSH_Name= @ASSH_Name,ASSH_HeadingID = @ASSH_HeadingID, ASSH_STATUS=@ASSH_STATUS, ASSH_UPDATEDBY= @ASSH_UPDATEDBY, ASSH_UPDATEDON=GetDate(),  
   ASSH_IPAddress=@ASSH_IPAddress, ASSH_YEARId=@ASSH_YEARId ,ASSH_Notes=@ASSH_Notes ,ASSH_scheduletype=@ASSH_scheduletype,  
   ASSH_Orgtype=@ASSH_Orgtype  
  where ASSH_ID=@ASSH_ID  and ASSH_CompId = @ASSH_CompId                
    set @iUpdateOrSave=2                 
    set @iOper = @ASSH_ID                   
End                         
   Else                   
Begin                        
 set @ASSH_ID=(select isnull(max(ASSH_ID)+1,1) from ACC_ScheduleSubHeading)                  
  insert into ACC_ScheduleSubHeading(ASSH_ID, ASSH_Name,ASSH_Code, ASSH_HeadingID, ASSH_DELFLG, ASSH_CRBY,   
        ASSH_CRON, ASSH_STATUS, ASSH_IPAddress, ASSH_CompId, ASSH_YEARId,ASSH_Notes,ASSH_scheduletype,ASSH_Orgtype)                  
values                  
  (@ASSH_ID, @ASSH_Name,(select concat('I00',max(@ASSH_ID+1)) from ACC_ScheduleItems), @ASSH_HeadingID, @ASSH_DELFLG, @ASSH_CRBY, GetDate(),                
   @ASSH_STATUS, @ASSH_IPAddress, @ASSH_CompId, @ASSH_YEARId,@ASSH_Notes,@ASSH_scheduletype,@ASSH_Orgtype)                  
   set @iUpdateOrSave=3                   
   set @iOper = @ASSH_ID                  
End 

/
  
Create procedure [dbo].[spACC_ScheduleItems]            
(                
@ASI_ID int,  
@ASI_Name varchar(5000),  
@ASI_DELFLG varchar(1),  
@ASI_CRBY int ,  
@ASI_STATUS varchar(2),  
@ASI_IPAddress varchar(25) ,  
@ASI_CompId int ,  
@ASI_YEARId int,    
@ASI_scheduletype int,  
@ASI_Orgtype int,  
@iUpdateOrSave int Output,   
@iOper int Output                    
)                  
As                       
  if exists(select ASI_ID from ACC_ScheduleItems where ASI_ID= @ASI_ID and ASI_CompId= @ASI_CompId)    
Begin                    
set @ASI_STATUS ='U'       
         update ACC_ScheduleItems  set ASI_Name= @ASI_Name, ASI_STATUS=@ASI_STATUS, ASI_UPDATEDON=GetDate(),  
   @ASI_IPAddress=@ASI_IPAddress, ASI_YEARId=@ASI_YEARId,ASI_scheduletype=@ASI_scheduletype,Asi_Orgtype=@ASI_Orgtype              
  where ASI_ID=@ASI_ID  and ASI_CompId = @ASI_CompId                
    set @iUpdateOrSave=2                 
    set @iOper = @ASI_ID                   
End                         
   Else                   
Begin                        
 set @ASI_ID=(select isnull(max(ASI_ID)+1,1) from ACC_ScheduleItems)                  
  insert into ACC_ScheduleItems(ASI_ID, ASI_Name,ASI_CODE,ASI_DELFLG,ASI_CRBY,   
        ASI_CRON, ASI_STATUS, ASI_IPAddress, ASI_CompId, ASI_YEARId,ASI_scheduletype,Asi_Orgtype)                  
values                  
  (@ASI_ID, @ASI_Name,(select concat('SH00',max(@ASI_ID+1)) from ACC_ScheduleItems),@ASI_DELFLG, @ASI_CRBY, GetDate(),                
   @ASI_STATUS, @ASI_IPAddress, @ASI_CompId, @ASI_YEARId,@ASI_scheduletype,@ASI_Orgtype)                  
   set @iUpdateOrSave=3                   
   set @iOper = @ASI_ID                  
End 

  /

Create procedure [dbo].[spACC_ScheduleSubItems]            
(                
@ASSI_ID int,  
@ASSI_Name varchar(5000),  
@ASSI_HeadingID int,  
@ASSI_SubHeadingID int,  
@ASSI_ItemsID int,  
@ASSI_DELFLG varchar(1),  
@ASSI_CRBY int ,  
@ASSI_STATUS varchar(2),  
@ASSI_UPDATEDBY int ,  
@ASSI_IPAddress varchar(25) ,  
@ASSI_CompId int ,  
@ASSI_YEARId int,        
@ASSI_scheduletype int,  
@ASSI_Orgtype int,  
@iUpdateOrSave int Output,                  
@iOper int Output                    
)                  
As                       
  if exists(select ASSI_ID from ACC_ScheduleSubItems where ASSI_ID= @ASSI_ID and ASSI_CompId= @ASSI_CompId)    
Begin                    
set @ASSI_STATUS ='U'       
         update ACC_ScheduleSubItems  set ASSI_Name= @ASSI_Name,ASSI_HeadingID=@ASSI_HeadingID,ASSI_SubHeadingID=@ASSI_SubHeadingID,ASSI_ItemsID=@ASSI_ItemsID,   
   ASSI_STATUS=@ASSI_STATUS, ASSI_UPDATEDBY= @ASSI_UPDATEDBY, ASSI_UPDATEDON=GetDate(),  
   @ASSI_IPAddress=@ASSI_IPAddress, @ASSI_YEARId=@ASSI_YEARId, Assi_scheduletype=@ASSI_scheduletype,Assi_Orgtype=@ASSI_Orgtype             
  where ASSI_ID=@ASSI_ID  and ASSI_CompId = @ASSI_CompId                
    set @iUpdateOrSave=2                 
    set @iOper = @ASSI_ID                   
End                         
   Else                   
Begin                        
 set @ASSI_ID=(select isnull(max(ASSI_ID)+1,1) from ACC_ScheduleSubItems)       
  insert into ACC_ScheduleSubItems(ASSI_ID, ASSI_Name,ASSI_HeadingID,ASSI_SubHeadingID,ASSI_ItemsID,ASSI_DELFLG,ASSI_CRBY,   
        ASSI_CRON, ASSI_STATUS, ASSI_IPAddress, ASSI_CompId, ASSI_YEARId,ASSI_Code,Assi_scheduletype,Assi_Orgtype)                  
values                  
  (@ASSI_ID, @ASSI_Name,@ASSI_HeadingID,@ASSI_SubHeadingID,@ASSI_ItemsID, @ASSI_DELFLG, @ASSI_CRBY, GetDate(),                
   @ASSI_STATUS, @ASSI_IPAddress, @ASSI_CompId, @ASSI_YEARId,(select concat('SI00',max(@ASSI_ID+1)) from ACC_ScheduleSubItems),@ASSI_scheduletype,@Assi_Orgtype)                  
   set @iUpdateOrSave=3                   
   set @iOper = @ASSI_ID                  
End 

/

Create procedure [dbo].[spACC_ScheduleTemplates]              
(                  
@AST_ID int,    
@AST_Name varchar(5000),    
@AST_HeadingID int,    
@AST_SubHeadingID int,    
@AST_ItemID int,    
@AST_SubItemID int,    
@AST_AccHeadId int,  
@AST_DELFLG varchar(1),    
@AST_CRBY int ,    
@AST_STATUS varchar(2),    
@AST_UPDATEDBY int ,    
@AST_IPAddress varchar(25) ,    
@AST_CompId int ,    
@AST_YEARId int,      
@AST_Schedule_type int,    
@AST_Companytype int,    
@AST_Company_limit int,    
@iUpdateOrSave int Output,                    
@iOper int Output                      
)                    
As                         
  if exists(select AST_ID from ACC_ScheduleTemplates where AST_ID= @AST_ID and AST_CompId= @AST_CompId and AST_YEARId = @AST_YEARId)      
Begin                      
set @AST_STATUS ='U'         
         update ACC_ScheduleTemplates  set AST_HeadingID=@AST_HeadingID,AST_SubHeadingID=@AST_SubHeadingID,    
   AST_ItemID=@AST_ItemID,AST_SubItemID=@AST_SubItemID,AST_AccHeadId=@AST_AccHeadId,AST_STATUS=@AST_STATUS, AST_UPDATEDBY= @AST_UPDATEDBY, AST_UPDATEDON=GetDate(),    
   AST_IPAddress=@AST_IPAddress, AST_YEARId=@AST_YEARId,AST_Schedule_type=@AST_Schedule_type,AST_Companytype=@AST_Companytype,    
   AST_Company_limit=@AST_Company_limit    
  where AST_ID=@AST_ID  and AST_CompId = @AST_CompId                  
    set @iUpdateOrSave=2                   
    set @iOper = @AST_ID                     
End                           
   Else                     
Begin                          
 set @AST_ID=(select isnull(max(AST_ID)+1,1) from ACC_ScheduleTemplates)                    
  insert into ACC_ScheduleTemplates(AST_ID,AST_HeadingID,AST_SubHeadingID,AST_ItemID,AST_SubItemID,AST_AccHeadId,AST_DELFLG,AST_CRBY,     
        AST_CRON, AST_STATUS, AST_IPAddress, AST_CompId, AST_YEARId,AST_Schedule_type,    
        AST_Companytype,AST_Company_limit)                    
values                    
  (@AST_ID,@AST_HeadingID,@AST_SubHeadingID,@AST_ItemID,@AST_SubItemID,@AST_AccHeadId, @AST_DELFLG, @AST_CRBY, GetDate(),                  
   @AST_STATUS, @AST_IPAddress, @AST_CompId, @AST_YEARId,@AST_Schedule_type,@AST_Companytype,@AST_Company_limit)                    
   set @iUpdateOrSave=3                     
   set @iOper = @AST_ID                    
End 

/
  
 CREATE Procedure [dbo].[spACC_SubHeadingNoteDesc](             
  @ASHN_ID int ,    
  @ASHN_SubHeadingId int ,  
  @ASHN_CustomerId int ,  
        @ASHN_Description varchar (max) NULL,    
        @ASHN_DelFlag char(1) NULL,    
        @ASHN_Status varchar(100) NULL,    
        @ASHN_Operation varchar(100) NULL,    
        @ASHN_CreatedBy int,    
        @ASHN_CreatedOn date,    
        @ASHN_CompID int NULL,    
        @ASHN_YearID int NULL,    
        @ASHN_IPAddress varchar(25),    
 @iUpdateOrSave int Output,                
@iOper int Output             
)          
as              
if exists(select ASHN_ID from ACC_SubHeadingNoteDesc where ASHN_ID=@ASHN_ID And ASHN_CompID=@ASHN_CompID)                
begin       
Set @ASHN_Status='U'                   
update ACC_SubHeadingNoteDesc set ASHN_Description=@ASHN_Description,ASHN_DelFlag=@ASHN_DelFlag,ASHN_Status=@ASHN_Status,    
ASHN_Operation=@ASHN_Operation,ASHN_UpdatedBy=@ASHN_CreatedBy,    
ASHN_UpdatedOn=GetDate(),ASHN_CompID=@ASHN_CompID,ASHN_YearID=@ASHN_YearID,    
ASHN_IPAddress=@ASHN_IPAddress  
where  ASHN_CompID=@ASHN_CompID and ASHN_ID=@ASHN_ID        
set @iUpdateOrSave=2                    
set @iOper=@ASHN_ID             
End            
else                 
begin        
Set @ASHN_Status='C'          
set @ASHN_ID=(select isnull(max(ASHN_ID)+1,1) from ACC_SubHeadingNoteDesc)                
insert into ACC_SubHeadingNoteDesc(ASHN_ID,ASHN_SubHeadingId,ASHN_CustomerId,ASHN_Description,ASHN_DelFlag,ASHN_Status,ASHN_Operation,ASHN_CreatedBy,ASHN_CreatedOn,  
ASHN_CompID,ASHN_YearID,ASHN_IPAddress)        
values (@ASHN_ID,@ASHN_SubHeadingId,@ASHN_CustomerId,@ASHN_Description,@ASHN_DelFlag,@ASHN_Status,@ASHN_Operation,  
@ASHN_CreatedBy,GetDate(),@ASHN_CompID,@ASHN_YearID,@ASHN_IPAddress)         
set @iUpdateOrSave=3                 
set @iOper = @ASHN_ID              
End 

/

CREATE procedure [dbo].[spAcc_JETransactions_Details]            
(            
@AJTB_ID int,          
@AJTB_MasID int,          
@AJTB_TranscNo varchar(50),          
@AJTB_CustId int,          
@AJTB_ScheduleTypeid int,          
@AJTB_Deschead int,          
@AJTB_Desc int,          
@AJTB_Debit money,          
@AJTB_Credit money,          
@AJTB_CreatedBy int,          
@AJTB_UpdatedBy int,          
@AJTB_Status varchar(1),          
@AJTB_IPAddress varchar(100),          
@AJTB_CompID int,          
@AJTB_YearID int,        
@AJTB_BillType int,         
@AJTB_DescName varchar(100),   
@AJTB_BranchId int,
@iUpdateOrSave int Output,              
@iOper int Output                
)              
as                   
  if exists(select AJTB_ID from Acc_JETransactions_Details where AJTB_ID=@AJTB_ID And AJTB_CustId=@AJTB_CustId And AJTB_YearID=@AJTB_YearID and  AJTB_CompID=@AJTB_CompID and AJTB_BranchId=@AJTB_BranchId  )                  
 begin            
  update Acc_JETransactions_Details set AJTB_MasID=@AJTB_MasID, AJTB_Deschead=@AJTB_Deschead,          
  AJTB_Desc=@AJTB_Desc,AJTB_Debit=@AJTB_Debit,AJTB_Credit=@AJTB_Credit,AJTB_UpdatedBy=@AJTB_UpdatedBy,AJTB_UpdatedOn=getdate(),          
  AJTB_Status=@AJTB_Status,AJTB_IPAddress=@AJTB_IPAddress, AJTB_YearID=@AJTB_YearID , AJTB_BillType=@AJTB_BillType, AJTB_DescName=@AJTB_DescName,AJTB_BranchId=@AJTB_BranchId          
  where AJTB_ID=@AJTB_ID  And AJTB_CompID=@AJTB_CompID            
  set @iUpdateOrSave=2                  
  set @iOper=(select AJTB_ID from Acc_JETransactions_Details where AJTB_ID=@AJTB_ID And AJTB_CustId=@AJTB_CustId And AJTB_CompID=@AJTB_CompID and AJTB_YearID=@AJTB_YearID and AJTB_BranchId=@AJTB_BranchId)              
 end                    
else               
 begin              
                
 set @AJTB_ID=(select isnull(max(AJTB_ID)+1,1) from Acc_JETransactions_Details)              
   insert into Acc_JETransactions_Details(AJTB_ID,AJTB_MasID,AJTB_TranscNo,AJTB_CustId,AJTB_ScheduleTypeid,AJTB_Deschead,AJTB_Desc, AJTB_Debit,AJTB_Credit,AJTB_CreatedBy,AJTB_CreatedOn,AJTB_Status,AJTB_IPAddress,AJTB_CompID,AJTB_YearID,
   AJTB_BillType,AJTB_DescName,AJTB_BranchId)         
       
   values              
   (@AJTB_ID,@AJTB_MasID,@AJTB_TranscNo,@AJTB_CustId,@AJTB_ScheduleTypeid,@AJTB_Deschead,@AJTB_Desc,@AJTB_Debit,@AJTB_Credit,@AJTB_CreatedBy,getdate(),@AJTB_Status,@AJTB_IPAddress,
   @AJTB_CompID,@AJTB_YearID,@AJTB_BillType,@AJTB_DescName,@AJTB_BranchId)              
   set @iUpdateOrSave=3                  
   set @iOper=@AJTB_ID              
 end 
  
  /
    
Create Procedure [dbo].[spAcc_TrailBalance_Upload]             
(                
@ATBU_ID int,              
@ATBU_CODE varchar(50),            
@ATBU_Description varchar(500),            
@ATBU_CustId int,            
@ATBU_Opening_Debit_Amount money,            
@ATBU_Opening_Credit_Amount money,            
@ATBU_TR_Debit_Amount money,            
@ATBU_TR_Credit_Amount money,            
@ATBU_Closing_Debit_Amount money,            
@ATBU_Closing_Credit_Amount money,            
@ATBU_DELFLG varchar(1),            
@ATBU_CRBY int,            
@ATBU_STATUS varchar(2),            
@ATBU_UPDATEDBY int,            
@ATBU_IPAddress Varchar(25),            
@ATBU_CompId int,            
@ATBU_YEARId int,     
@ATBU_Branchid int,    
@iUpdateOrSave int Output,                
@iOper int Output                 
)                
as            
If exists(select ATBU_ID from Acc_TrailBalance_Upload where ATBU_ID=@ATBU_ID AND  ATBU_CustId=@ATBU_CustId And ATBU_Branchid= @ATBU_Branchid And ATBU_CompId=ATBU_CompId)                     
 Begin             
 Update Acc_TrailBalance_Upload Set ATBU_CODE=@ATBU_CODE,ATBU_Description=@ATBU_Description,ATBU_CustId = @ATBU_CustId, ATBU_Opening_Debit_Amount = @ATBU_Opening_Debit_Amount,            
 ATBU_Opening_Credit_Amount=@ATBU_Opening_Credit_Amount,ATBU_TR_Debit_Amount=@ATBU_TR_Debit_Amount,ATBU_TR_Credit_Amount= @ATBU_TR_Credit_Amount,            
 ATBU_Closing_Debit_Amount=@ATBU_Closing_Debit_Amount,ATBU_Closing_Credit_Amount=@ATBU_Closing_Credit_Amount,ATBU_DELFLG=@ATBU_DELFLG,            
 ATBU_STATUS=@ATBU_STATUS,ATBU_UPDATEDBY=@ATBU_UPDATEDBY,ATBU_UPDATEDOn=GETDATE(),ATBU_IPAddress=@ATBU_IPAddress,ATBU_YEARId=@ATBU_YEARId,ATBU_Closing_TotalDebit_Amount=@ATBU_Closing_Debit_Amount,ATBU_Closing_TotalCredit_Amount=@ATBU_Closing_Credit_Amount, ATBU_Branchid=@ATBU_Branchid           
 Where ATBU_ID=@ATBU_ID AND  ATBU_CustId=@ATBU_CustId And ATBU_Branchid=@ATBU_Branchid  And ATBU_CompId=ATBU_CompId            
set @iUpdateOrSave=2             
Set @iOper = @ATBU_ID             
End                    
Else               
 begin               
set @ATBU_ID=(select isnull(max(ATBU_ID)+1,1) from Acc_TrailBalance_Upload)                    
  insert into Acc_TrailBalance_Upload (ATBU_ID,ATBU_CODE,ATBU_Description,ATBU_CustId,ATBU_Opening_Debit_Amount,ATBU_Opening_Credit_Amount,            
  ATBU_TR_Debit_Amount,ATBU_TR_Credit_Amount,ATBU_Closing_Debit_Amount,ATBU_Closing_Credit_Amount,ATBU_DELFLG,ATBU_CRBY,ATBU_CRON,ATBU_STATUS,            
  ATBU_IPAddress,ATBU_CompId,ATBU_YEARId,ATBU_Closing_TotalDebit_Amount,ATBU_Closing_TotalCredit_Amount,ATBU_Branchid)                
values (@ATBU_ID,@ATBU_CODE,@ATBU_Description,@ATBU_CustId,@ATBU_Opening_Debit_Amount,@ATBU_Opening_Credit_Amount,@ATBU_TR_Debit_Amount,            
@ATBU_TR_Credit_Amount,@ATBU_Closing_Debit_Amount,@ATBU_Closing_Credit_Amount,@ATBU_DELFLG,@ATBU_CRBY,GETDATE(),@ATBU_STATUS,            
@ATBU_IPAddress,@ATBU_CompId,@ATBU_YEARId,@ATBU_Closing_Debit_Amount,@ATBU_Closing_Credit_Amount,@ATBU_Branchid)                  
   set @iUpdateOrSave=3                     
   set @iOper = @ATBU_ID                 
end   

  /
  
CREATE Procedure [dbo].[spAcc_TrailBalance_Upload_Details]           
(              
@ATBUD_ID int,           
@ATBUD_Masid int,          
@ATBUD_CODE varchar(50),          
@ATBUD_Description varchar(500),          
@ATBUD_CustId int,          
@ATBUD_SChedule_Type int,          
@ATBUD_Branchid int,          
@ATBUD_Company_Type int,          
@ATBUD_Headingid int,          
@ATBUD_Subheading int,          
@ATBUD_itemid int,          
@ATBUD_SubItemId int,        
@ATBUD_DELFLG varchar(1),          
@ATBUD_CRBY int,          
@ATBUD_UPDATEDBY int,          
@ATBUD_STATUS varchar(2),          
@ATBUD_Progress varchar(50),          
@ATBUD_IPAddress Varchar(25),          
@ATBUD_CompId int,          
@ATBUD_YEARId int,          
        
@iUpdateOrSave int Output,              
@iOper int Output               
)              
as          
If exists(select ATBUD_ID from Acc_TrailBalance_Upload_Details where ATBUD_ID=@ATBUD_ID  And ATBUD_CustId=@ATBUD_CustId And ATBUD_CompId=@ATBUD_CompId)                   
 Begin           
          
 Update Acc_TrailBalance_Upload_Details Set ATBUD_CODE=@ATBUD_CODE,ATBUD_Description=@ATBUD_Description,ATBUD_CustId = @ATBUD_CustId,          
 ATBUD_SChedule_Type = @ATBUD_SChedule_Type,Atbud_Branchnameid=@ATBUD_Branchid, ATBUD_Company_Type=@ATBUD_Company_Type,ATBUD_Headingid=@ATBUD_Headingid,ATBUD_Subheading=@ATBUD_Subheading,          
 ATBUD_itemid=@ATBUD_itemid,ATBUD_SubItemId=@ATBUD_SubItemId,ATBUD_DELFLG=@ATBUD_DELFLG,ATBUD_UPDATEDBY=@ATBUD_UPDATEDBY,ATBUD_UPDATEDON=GETDATE(),          
 ATBUD_STATUS=@ATBUD_STATUS,ATBUD_Progress=@ATBUD_Progress,ATBUD_IPAddress=@ATBUD_IPAddress,          
 ATBUD_CompId=@ATBUD_CompId,ATBUD_YEARId=@ATBUD_YEARId          
 where ATBUD_ID=@ATBUD_ID         
set @iUpdateOrSave=2           
Set @iOper = @ATBUD_ID           
End                  
Else             
 begin             
set @ATBUD_ID=(select isnull(max(ATBUD_ID)+1,1) from Acc_TrailBalance_Upload_Details)                  
  insert into Acc_TrailBalance_Upload_Details (ATBUD_ID,ATBUD_Masid,ATBUD_CODE,ATBUD_Description,ATBUD_CustId,ATBUD_SChedule_Type,Atbud_Branchnameid,ATBUD_Company_Type,          
  ATBUD_Headingid,ATBUD_Subheading,ATBUD_itemid,ATBUD_SubItemId,ATBUD_DELFLG,ATBUD_CRBY,ATBUD_CRON,ATBUD_UPDATEDBY,ATBUD_UPDATEDON,ATBUD_STATUS,ATBUD_Progress,ATBUD_IPAddress,ATBUD_CompId,ATBUD_YEARId)              
values (@ATBUD_ID,@ATBUD_Masid,@ATBUD_CODE,@ATBUD_Description,@ATBUD_CustId,@ATBUD_SChedule_Type,@ATBUD_Branchid,@ATBUD_Company_Type,@ATBUD_Headingid,          
@ATBUD_Subheading,@ATBUD_itemid,@ATBUD_SubItemId,@ATBUD_DELFLG,@ATBUD_CRBY,GETDATE(),@ATBUD_UPDATEDBY,GETDATE(),@ATBUD_STATUS,@ATBUD_Progress,@ATBUD_IPAddress,@ATBUD_CompId,          
@ATBUD_YEARId)                
   set @iUpdateOrSave=3                   
   set @iOper = @ATBUD_ID              
end           

/
  
Create Procedure [dbo].[spACC_Closingstock_Items]     
(        
@ACSI_id int,      
@ACSI_ItemdescCode varchar(50),    
@ACSI_Itemdesc varchar(500),   
@ACSI_classification varchar(100),  
@ACSI_Type varchar(50),  
@ACSI_Custid int,    
@ACSI_Qty int,    
@ACSI_Rate money,    
@ACSI_Total money,      
@ACSI_DELFLG varchar(1),    
@ACSI_CRBY int,    
@ACSI_STATUS varchar(2),    
@ACSI_UPDATEDBY int,    
@ACSI_IPAddress Varchar(25),    
@ACSI_CompId int,    
@ACSI_YEARId int,    
@iUpdateOrSave int Output,        
@iOper int Output         
)        
as    
If exists(select ACSI_ID from ACC_Closingstock_Items where ACSI_ID=@ACSI_ID AND  ACSI_CustId=@ACSI_CustId And ACSI_CompId=ACSI_CompId)             
 Begin     
 Update ACC_Closingstock_Items Set ACSI_ItemdescCode=@ACSI_ItemdescCode,ACSI_Itemdesc=@ACSI_Itemdesc,ACSI_CustId = @ACSI_CustId,  
 ACSI_Qty = @ACSI_Qty,ACSI_Rate=@ACSI_Rate,ACSI_Total=@ACSI_Total,ACSI_DELFLG=@ACSI_DELFLG,    
 ACSI_STATUS=@ACSI_STATUS,ACSI_UPDATEDBY=@ACSI_UPDATEDBY,ACSI_UPDATEDOn=GETDATE(),ACSI_IPAddress=@ACSI_IPAddress,ACSI_YEARId=@ACSI_YEARId    
 Where ACSI_ID=@ACSI_ID AND  ACSI_CustId=@ACSI_CustId And ACSI_CompId=ACSI_CompId    
set @iUpdateOrSave=2     
Set @iOper = @ACSI_ID     
End            
Else       
 begin       
set @ACSI_ID=(select isnull(max(ACSI_ID)+1,1) from ACC_Closingstock_Items)            
  insert into ACC_Closingstock_Items (ACSI_ID,ACSI_ItemdescCode,ACSI_Itemdesc,ACSI_classification,ACSI_Type,ACSI_Custid,ACSI_Qty,ACSI_Rate,    
  ACSI_Total,ACSI_DELFLG,ACSI_CRBY,ACSI_CRON,ACSI_STATUS,ACSI_IPAddress,ACSI_CompId,ACSI_YEARId)        
values (@ACSI_ID,@ACSI_ItemdescCode,@ACSI_Itemdesc,@ACSI_classification,@ACSI_Type,@ACSI_CustId,@ACSI_Qty,@ACSI_Rate,@ACSI_Total,  
@ACSI_DELFLG,@ACSI_CRBY,GETDATE(),@ACSI_STATUS,    
@ACSI_IPAddress,@ACSI_CompId,@ACSI_YEARId)          
   set @iUpdateOrSave=3             
   set @iOper = @ACSI_ID         
end 

/

Create Procedure spAuditType_Checklist_Master                    
(                      
@ACM_ID int,                      
@ACM_Code varchar(50),                      
@ACM_AuditTypeID int,                      
@ACM_Heading varchar (500),                      
@ACM_Checkpoint varchar(8000),                      
@ACM_STATUS varchar(2),           
@ACM_DELFLG char,                      
@ACM_CRBY int,                      
@ACM_UPDATEDBY int,               
@ACM_IpAddress varchar(25),                
@ACM_CompId int,                      
@iUpdateOrSave int Output,                        
@iOper int Output                           
)      
as                      
 if exists(select ACM_ID from AuditType_Checklist_Master where ACM_ID=@ACM_ID And ACM_CompId=@ACM_CompId)                        
  begin                         
 set @ACM_Status='U'                                   
 update AuditType_Checklist_Master set ACM_Code=@ACM_Code,ACM_Heading=@ACM_Heading,ACM_Checkpoint=@ACM_Checkpoint,ACM_Status=@ACM_Status,  
 ACM_UPDATEDBY=@ACM_UPDATEDBY,ACM_UPDATEDON=GetDate(), ACM_IPAddress=@ACM_IPAddress                      
 where ACM_ID=@ACM_ID And ACM_CompId=@ACM_CompId And ACM_AuditTypeID=@ACM_AuditTypeID                    
  set @iUpdateOrSave=2                            
  set @iOper =@ACM_ID                      
 end                        
    else                         
 begin                        
  set @ACM_ID=(select isnull(max(ACM_ID)+1,1) from AuditType_Checklist_Master)                        
  insert into AuditType_Checklist_Master(ACM_ID,ACM_Code,ACM_Heading,ACM_Checkpoint,ACM_AuditTypeID,ACM_STATUS,ACM_DELFLG,ACM_CRBY,ACM_CRON,ACM_IPAddress,ACM_CompId)  
  values                        
  (@ACM_ID,@ACM_Code,@ACM_Heading,@ACM_Checkpoint,@ACM_AuditTypeID,@ACM_STATUS,@ACM_DELFLG,@ACM_CRBY,GetDate(),@ACM_IPAddress,@ACM_CompId)                        
   set @iUpdateOrSave=3                         
   set @iOper = @ACM_ID                       
 end

 /

 CREATE Procedure [dbo].[spStandardAudit_Schedule](             
 @SA_ID int,            
 @SA_AuditNo varchar(50),            
 @SA_CustID int,               
 @SA_YearID int,            
 @SA_AuditTypeID int,               
 @SA_PartnerID varchar(500),        
 @SA_ReviewPartnerID varchar(500),        
 @SA_AdditionalSupportEmployeeID varchar(500),          
 @SA_ScopeOfAudit varchar(5000),              
 @SA_Status int,            
 @SA_AttachID int,    
 @SA_StartDate datetime,    
@SA_ExpCompDate datetime,    
@SA_RptRvDate datetime,    
@SA_RptFilDate datetime,    
@SA_MRSDate datetime,    
 @SA_CrBy int,            
 @SA_UpdatedBy int,            
 @SA_IPAddress varchar(25),            
 @SA_CompID int,            
 @iUpdateOrSave int Output,            
 @iOper int Output            
)            
as          
if (@SA_ID>0)          
 begin                        
 Delete StandardAudit_ScheduleCheckPointList Where SAC_SA_ID=@SA_ID And SAC_CompID=@SA_CompID          
 update StandardAudit_Schedule set SA_AuditTypeID=@SA_AuditTypeID,SA_PartnerID=@SA_PartnerID,SA_ReviewPartnerID=@SA_ReviewPartnerID,SA_AdditionalSupportEmployeeID=@SA_AdditionalSupportEmployeeID,
 SA_ScopeOfAudit=@SA_ScopeOfAudit,SA_AttachID=@SA_AttachID,SA_StartDate=@SA_StartDate,SA_ExpCompDate=@SA_ExpCompDate,SA_RptRvDate=@SA_RptRvDate,SA_RptFilDate=@SA_RptFilDate,SA_MRSDate=@SA_MRSDate,    
 SA_UpdatedBy=@SA_UpdatedBy,SA_UpdatedOn=Getdate()                   
 where SA_ID=@SA_ID And SA_CustID=@SA_CustID And SA_YearID=@SA_YearID                       
 set @iUpdateOrSave=2                        
 set @iOper=@SA_ID          
 end          
else                 
 begin            
 set @SA_ID=(select isnull(max(SA_ID)+1,1) from StandardAudit_Schedule)            
 insert into StandardAudit_Schedule (SA_ID,SA_AuditNo,SA_CustID,SA_YearID,SA_AuditTypeID,SA_PartnerID,SA_ReviewPartnerID,SA_AdditionalSupportEmployeeID,SA_ScopeOfAudit,SA_Status,SA_AttachID,
 SA_StartDate,SA_ExpCompDate,SA_RptRvDate,SA_RptFilDate,SA_MRSDate,SA_CrBy,SA_CrOn,SA_IPAddress,SA_CompID)               
 values(@SA_ID,@SA_AuditNo,@SA_CustID,@SA_YearID,@SA_AuditTypeID,@SA_PartnerID,@SA_ReviewPartnerID,@SA_AdditionalSupportEmployeeID,@SA_ScopeOfAudit,@SA_Status,@SA_AttachID,
 @SA_StartDate,@SA_ExpCompDate,@SA_RptRvDate,@SA_RptFilDate,@SA_MRSDate,@SA_CrBy,GetDate(),@SA_IPAddress,@SA_CompID)            
 set @iUpdateOrSave=3            
 set @iOper = @SA_ID            
end   

/

CREATE Procedure [dbo].[spStandardAudit_ScheduleCheckPointList](   
 @SAC_ID int,  
 @SAC_SA_ID int,  
 @SAC_CheckPointID int,  
 @SAC_Mandatory int,    
 @SAC_Status int,    
 @SAC_AttachID int,  
 @SAC_CrBy int,  
 @SAC_IPAddress varchar(25),  
 @SAC_CompID int,  
 @iUpdateOrSave int Output,  
 @iOper int Output  
)  
as  
 begin  
 set @SAC_ID=(select isnull(max(SAC_ID)+1,1) from StandardAudit_ScheduleCheckPointList)  
 insert into StandardAudit_ScheduleCheckPointList (SAC_ID,SAC_SA_ID,SAC_CheckPointID,SAC_Mandatory,SAC_Status,SAC_AttachID,SAC_CrBy,SAC_CrOn,SAC_IPAddress,SAC_CompID)   
 values(@SAC_ID,@SAC_SA_ID,@SAC_CheckPointID,@SAC_Mandatory,@SAC_Status,@SAC_AttachID,@SAC_CrBy,GetDate(),@SAC_IPAddress,@SAC_CompID)  
 set @iUpdateOrSave=3  
 set @iOper = @SAC_ID  
end

/

Create Procedure [dbo].[spAudit_Excel_Upload]     
(          
@AEU_ID int,   
@AEU_CustId int,  
@AEU_Description varchar(500),      
@AEU_ODAmount money,      
@AEU_OCAmount money,      
@AEU_TRDAmount money,      
@AEU_TRCAmount money,      
@AEU_CDAmount money,      
@AEU_CCAmount money,      
@AEU_DELFLG varchar(1),      
@AEU_CRBY int,      
@AEU_STATUS varchar(2),      
@AEU_UPDATEDBY int,      
@AEU_IPAddress Varchar(25),      
@AEU_CompId int,      
@AEU_YEARId int,
@AEU_AuditId int,
@AEU_AuditTypeId int,
@iUpdateOrSave int Output,          
@iOper int Output           
)          
as      
If exists(select AEU_ID from Audit_Excel_Upload where AEU_ID=@AEU_ID AND  AEU_CustId=@AEU_CustId And AEU_CompId=AEU_CompId)               
 Begin       
 Update Audit_Excel_Upload Set AEU_Description=@AEU_Description,AEU_CustId = @AEU_CustId, AEU_ODAmount = @AEU_ODAmount,AEU_OCAmount=@AEU_OCAmount,      
 AEU_TRDAmount=@AEU_TRDAmount,AEU_TRCAmount= @AEU_TRCAmount,AEU_CDAmount=@AEU_CDAmount,AEU_CCAmount=@AEU_CCAmount,AEU_DELFLG=@AEU_DELFLG,      
 AEU_STATUS=@AEU_STATUS,AEU_UPDATEDBY=@AEU_UPDATEDBY,AEU_UPDATEDOn=GETDATE(),AEU_IPAddress=@AEU_IPAddress,AEU_YEARId=@AEU_YEARId      
 Where AEU_ID=@AEU_ID And AEU_AuditId=@AEU_AuditId And AEU_AuditTypeId=@AEU_AuditTypeId AND AEU_CustId=@AEU_CustId And AEU_CompId=AEU_CompId      
 set @iUpdateOrSave=2       
 Set @iOper = @AEU_ID       
End              
Else         
begin         
set @AEU_ID=(select isnull(max(AEU_ID)+1,1) from Audit_Excel_Upload)              
  insert into Audit_Excel_Upload (AEU_ID,AEU_Description,AEU_CustId,AEU_ODAmount,AEU_OCAmount,AEU_TRDAmount,AEU_TRCAmount,AEU_CDAmount,  
  AEU_CCAmount,AEU_DELFLG,AEU_CRBY,AEU_CRON,AEU_STATUS,AEU_IPAddress,AEU_CompId,AEU_YEARId,AEU_AuditId,AEU_AuditTypeId)
  values (@AEU_ID,@AEU_Description,@AEU_CustId,@AEU_ODAmount,@AEU_OCAmount,@AEU_TRDAmount,@AEU_TRCAmount,@AEU_CDAmount,@AEU_CCAmount,
  @AEU_DELFLG,@AEU_CRBY,GETDATE(),@AEU_STATUS,@AEU_IPAddress,@AEU_CompId,@AEU_YEARId,@AEU_AuditId,@AEU_AuditTypeId)            
   set @iUpdateOrSave=3               
   set @iOper = @AEU_ID           
end  

/

create procedure [dbo].[Sp_SadUsersInOtherDept]
(
@SUO_UserID  Int,
@SUO_DeptID Int,
@SUO_IsDeptHead Int,
@SUO_CreatedBy Int,
@SUO_IPAddress varchar(50),
@SUO_CompID Int,
@iUpdateOrSave int output,
@iOper int Output
)
as  
	Begin	
	declare  @SUO_PKID int
	    set @SUO_PKID=(select isnull(max(SUO_PKID)+1,1) from Sad_UsersInOtherDept)
		insert into Sad_UsersInOtherDept(SUO_PKID,SUO_UserID,SUO_DeptID,SUO_IsDeptHead,SUO_CreatedBy,SUO_CreatedOn,SUO_IPAddress,SUO_CompID) 
		values(@SUO_PKID,@SUO_UserID,@SUO_DeptID,@SUO_IsDeptHead,@SUO_CreatedBy,GetDate(),@SUO_IPAddress,@SUO_CompID)
		set @iUpdateOrSave=3    
	set @iOper =@SUO_PKID
	End

/

	Create Procedure spCustomer_Master                  
(                    
@Cust_ID int,                    
@Cust_Name varchar(500),                    
@Cust_Code varchar (50),                  
@Cust_OrgTypeID int,                    
@Cust_CrBy int,                    
@Cust_ApprovedBy int,         
@Cust_Status  varchar(25),                               
@Cust_IPAddress varchar(25),    
@Cust_DelFlg varchar(1),          
@Cust_CompID int,                    
@iUpdateOrSave int Output,                      
@iOper int Output                         
)    
as                    
 if exists(select Cust_ID from SAD_CUSTOMER_MASTER where Cust_Name=@Cust_Name And Cust_CompID=@Cust_CompID)                      
  begin    
                   
 set @Cust_ID= (select Cust_ID from SAD_CUSTOMER_MASTER where Cust_Name=@Cust_Name And Cust_CompID=@Cust_CompID)                              
 update SAD_CUSTOMER_MASTER set Cust_Name=@Cust_Name,Cust_DelFlg=@Cust_DelFlg ,Cust_OrgTypeID=@Cust_OrgTypeID,Cust_Status=@Cust_Status,
   Cust_IPAddress=@Cust_IPAddress 
 where Cust_ID=@Cust_ID And Cust_CompID=@Cust_CompID                 
  set @iUpdateOrSave=2                          
  set @iOper = @Cust_ID      
 end                      
    else                       
 begin                      
  set @Cust_ID=(select isnull(max(Cust_ID)+1,1) from SAD_CUSTOMER_MASTER)                      
  insert into SAD_CUSTOMER_MASTER(Cust_ID,Cust_Name,Cust_Code,Cust_OrgTypeID,Cust_CrBy,Cust_CrOn,
  Cust_ApprovedBy,Cust_ApprovedOn,Cust_Status,Cust_IPAddress,Cust_DelFlg,Cust_CompID)
  values                      
  (@Cust_ID,@Cust_Name,@Cust_Code,@Cust_OrgTypeID,@Cust_CrBy,GetDate(),
  @Cust_ApprovedBy,GetDate(),@Cust_Status,@Cust_IPAddress,@Cust_DelFlg,@Cust_CompID)                      
   set @iUpdateOrSave=3                       
   set @iOper = @Cust_ID                     
 end

 /

 Create Procedure spCustomer_Loc_Master                  
(                    
@Mas_Id int,   
@Mas_Code varchar (50),                    
@Mas_Description varchar(500),                    
@Mas_DelFlag varchar (50),                   
@Mas_CustID int,   
@Mas_Loc_Address varchar(500),         
@Mas_Contact_Person varchar(500),    
@Mas_Contact_MobileNo varchar(50),  
@Mas_Contact_Email varchar(500),                
@Mas_CrBy int,         
@Mas_Status  varchar(25),                               
@Mas_IPAddress varchar(25),              
@Mas_CompID int,                    
@iUpdateOrSave int Output,                      
@iOper int Output                         
)    
as                    
 if exists(select Mas_Id from SAD_CUST_LOCATION where Mas_CustID=@Mas_CustID And Mas_CompID=@Mas_CompID)                      
  begin                       
 set @Mas_Status='A'                                 
 update SAD_CUST_LOCATION set Mas_Code=@Mas_Code,Mas_Description=@Mas_Description,Mas_DelFlag=@Mas_DelFlag,
   Mas_IPAddress=@Mas_IPAddress                    
 where Mas_CustID=@Mas_CustID And Mas_CompID=@Mas_CompID                 
  set @iUpdateOrSave=2                          
  set @iOper =@Mas_Id                
 end                      
    else                       
 begin                      
  set @Mas_Id=(select isnull(max(Mas_Id)+1,1) from SAD_CUST_LOCATION)                      
  insert into SAD_CUST_LOCATION(Mas_Id,Mas_Code,Mas_Description,Mas_DelFlag,Mas_CustID,Mas_Loc_Address,
  Mas_Contact_Person,Mas_Contact_MobileNo,Mas_Contact_Email,Mas_CrBy,Mas_CrOn,Mas_Status,Mas_IPAddress,Mas_CompID)
  values                      
  (@Mas_Id,@Mas_Code,@Mas_Description,@Mas_DelFlag,@Mas_CustID,@Mas_Loc_Address,
  @Mas_Contact_Person,@Mas_Contact_MobileNo,@Mas_Contact_Email,@Mas_CrBy,GetDate(),@Mas_Status,@Mas_IPAddress,@Mas_CompID)                      
   set @iUpdateOrSave=3                       
   set @iOper = @Mas_Id                     
 end

 /

 CREATE Procedure [dbo].[spACC_Partnership_Firms]                   
(                      
@APF_ID int,          
@APF_YearID int,       
@APF_Cust_ID int,    
@APF_Branch_ID int,       
@APF_Partner_ID int,          
@APF_OpeningBalance decimal,          
@APF_UnsecuredLoanTreatedAsCapital decimal,          
@APF_InterestOnCapital decimal,          
@APF_PartnersSalary decimal,          
@APF_ShareOfprofit decimal,  
@APF_TransferToFixedCapital decimal,          
@APF_Drawings decimal,
@APF_AddOthers decimal,
@APF_LessOthers decimal,
@APF_CrBy int,          
@APF_UpdateBy int,          
@APF_IPAddress varchar (25),                
@APF_CompID int,          
@iUpdateOrSave int Output,                      
@iOper int Output                
)             
As                            
if (@APF_ID>0)                        
Begin          
Update ACC_Partnership_Firms set APF_OpeningBalance=@APF_OpeningBalance,APF_UnsecuredLoanTreatedAsCapital=@APF_UnsecuredLoanTreatedAsCapital,APF_InterestOnCapital=@APF_InterestOnCapital,  
APF_PartnersSalary=@APF_PartnersSalary,APF_ShareOfprofit=@APF_ShareOfprofit,APF_TransferToFixedCapital=@APF_TransferToFixedCapital,APF_Drawings=@APF_Drawings,APF_AddOthers=@APF_AddOthers,
APF_LessOthers=@APF_LessOthers,APF_UpdateOn=GETDATE(),APF_UpdateBy=@APF_UpdateBy,APF_IPAddress=@APF_IPAddress          
where APF_ID=@APF_ID and APF_CompID=@APF_CompID And APF_YearID=@APF_YearID And APF_Cust_ID=@APF_Cust_ID  And APF_Branch_ID=@APF_Branch_ID And APF_Partner_ID=@APF_Partner_ID          
set @iUpdateOrSave=2                     
set @iOper = @APF_ID                      
End                      
Else                         
Begin                        
set @APF_ID=(select IsNull(Max(APF_ID)+1,1) from ACC_Partnership_Firms)                        
insert into ACC_Partnership_Firms(APF_ID,APF_YearID,APF_Cust_ID,APF_Branch_ID,APF_Partner_ID,APF_OpeningBalance,APF_UnsecuredLoanTreatedAsCapital,APF_InterestOnCapital,  
APF_PartnersSalary,APF_ShareOfprofit,APF_TransferToFixedCapital,APF_Drawings,APF_CrBy,APF_CrOn,APF_IPAddress,APF_CompID,APF_AddOthers,APF_LessOthers)                      
values(@APF_ID,@APF_YearID,@APF_Cust_ID,@APF_Branch_ID,@APF_Partner_ID,@APF_OpeningBalance,@APF_UnsecuredLoanTreatedAsCapital,@APF_InterestOnCapital,  
@APF_PartnersSalary,@APF_ShareOfprofit,@APF_TransferToFixedCapital,@APF_Drawings,@APF_CrBy,GETDATE(),@APF_IPAddress,@APF_CompID,@APF_AddOthers,@APF_LessOthers)                        
set @iUpdateOrSave=3                       
set @iOper = @APF_ID                         
End  

/

CREATE Procedure [dbo].[spAcc_Cashflow]            
(                
@ACF_pkid int,        
@ACF_Description varchar(5000),    
@ACF_Custid int, 
@ACF_Branchid int, 
@ACF_Current_Amount money,    
@ACF_Prev_Amount money,    
@ACF_Status char(1),    
@ACF_Crby int,    
@ACF_Updatedby int, 
@ACF_Compid int,  
@ACF_Ipaddress varchar(25),
@ACF_Catagary int,
@ACF_yearid int ,
@iUpdateOrSave int Output,                
@iOper int Output          
)       
As                      
if exists(select ACF_pkid from Acc_Cashflow where ACF_pkid=@ACF_pkid And ACF_Compid=@ACF_Compid)                  
Begin                  
Update Acc_Cashflow set  ACF_Description=@ACF_Description,ACF_Custid=@ACF_Custid ,ACF_Branchid=@ACF_Branchid,
ACF_Current_Amount=@ACF_Current_Amount,ACF_Prev_Amount=@ACF_Prev_Amount,ACF_Status=@ACF_Status ,
ACF_Crby=@ACF_Crby,ACF_Cron=GETDATE(),ACF_Updatedby=@ACF_Updatedby, 
ACF_Updated_On=getdate(),ACF_Ipaddress=@ACF_Ipaddress,ACF_yearid=@ACF_yearid  
where ACF_pkid=@ACF_pkid and ACF_Compid=@ACF_Compid and ACF_Catagary=@ACF_Catagary          
set @iUpdateOrSave=2               
set @iOper = @ACF_pkid                
End                
Else                   
Begin                  
set @ACF_pkid=(select IsNull(Max(ACF_pkid)+1,1) from Acc_Cashflow)                  
insert into Acc_Cashflow(ACF_pkid,ACF_Description,ACF_Custid,ACF_Branchid,ACF_Current_Amount,ACF_Prev_Amount,ACF_Status,ACF_Crby,ACF_Cron,ACF_Updatedby,ACF_Updated_On,ACF_Compid,ACF_Ipaddress,ACF_Catagary,ACF_yearid)                
values(@ACF_pkid,@ACF_Description,@ACF_Custid,@ACF_Branchid,@ACF_Current_Amount,@ACF_Prev_Amount,@ACF_Status,@ACF_Crby,GETDATE(),@ACF_Updatedby,GETDATE(),@ACF_Compid,@ACF_Ipaddress,@ACF_Catagary,@ACF_yearid)                  
set @iUpdateOrSave=3                 
set @iOper = @ACF_pkid                  
End 

/

CREATE Procedure [dbo].[spITReturns_Client] 
(
@ITR_ID int,
@ITR_ClientName varchar(500),
@ITR_PAN varchar(25),
@ITR_Aadhaar varchar(25),
@ITR_DOB datetime,
@ITR_Phone varchar(25),
@ITR_Email varchar(50),
@ITR_ITLoginId varchar(100),
@ITR_ITPassword varchar(100),
@ITR_CrBy int,
@ITR_UpdatedBy int,
@ITR_IPAddress varchar(25),
@ITR_CompID int, 
@iUpdateOrSave int Output,
@iOper int Output
)
As
if (@ITR_ID>0)
Begin
Update ITReturns_Client set ITR_ClientName=@ITR_ClientName,ITR_PAN=@ITR_PAN,ITR_Aadhaar=@ITR_Aadhaar,ITR_DOB=@ITR_DOB,ITR_Phone=@ITR_Phone,ITR_Email=@ITR_Email,
ITR_ITLoginId=@ITR_ITLoginId,ITR_ITPassword=@ITR_ITPassword,ITR_UpdatedBy=@ITR_UpdatedBy,ITR_UpdateOn=GETDATE()
where ITR_ID=@ITR_ID and ITR_CompID=@ITR_CompID 
set @iUpdateOrSave=2 
set @iOper = @ITR_ID
End
Else
Begin
set @ITR_ID=(select IsNull(Max(ITR_ID)+1,1) from ITReturns_Client)
insert into ITReturns_Client(ITR_ID,ITR_ClientName,ITR_PAN,ITR_Aadhaar,ITR_DOB,ITR_Phone,ITR_Email,ITR_ITLoginId,ITR_ITPassword,ITR_CrBy,ITR_CrOn,ITR_IPAddress,ITR_CompID)
values(@ITR_ID,@ITR_ClientName,@ITR_PAN,@ITR_Aadhaar,@ITR_DOB,@ITR_Phone,@ITR_Email,@ITR_ITLoginId,@ITR_ITPassword,@ITR_CrBy,GETDATE(),@ITR_IPAddress,@ITR_CompID)
set @iUpdateOrSave=3
set @iOper = @ITR_ID
End  

/

CREATE Procedure [dbo].[spITReturnsFiling_Details] 
(
@ITRFD_ID int,
@ITRFD_ITR_ID int,
@ITRFD_ITRNo varchar(50),
@ITRFD_FinancialYearID int,
@ITRFD_AssessmentYearID int,
@ITRFD_ServiceChargeInINR decimal(19, 2),
@ITRFD_Status int,
@ITRFD_InvoiceMail varchar(100),
@ITRFD_AssignTo int,
@ITRFD_BillingEntityId int,
@ITRFD_CrBy int,
@ITRFD_UpdatedBy int,
@ITRFD_IPAddress varchar(25),
@ITRFD_CompID int, 
@iUpdateOrSave int Output,
@iOper int Output
)
As
if (@ITRFD_ID>0 And @ITRFD_ITR_ID>0)
Begin
Update ITReturnsFiling_Details set ITRFD_ServiceChargeInINR=@ITRFD_ServiceChargeInINR,ITRFD_Status=@ITRFD_Status,ITRFD_InvoiceMail=@ITRFD_InvoiceMail,ITRFD_AssignTo=@ITRFD_AssignTo,ITRFD_BillingEntityId=@ITRFD_BillingEntityId,ITRFD_UpdatedBy=@ITRFD_UpdatedBy,ITRFD_UpdateOn=GETDATE()
where ITRFD_ID=@ITRFD_ID and ITRFD_ITR_ID=@ITRFD_ITR_ID
set @iUpdateOrSave=2 
set @iOper = @ITRFD_ID
End
Else
Begin
set @ITRFD_ID=(select IsNull(Max(ITRFD_ID)+1,1) from ITReturnsFiling_Details)
insert into ITReturnsFiling_Details(ITRFD_ID,ITRFD_ITR_ID,ITRFD_ITRNo,ITRFD_FinancialYearID,ITRFD_AssessmentYearID,ITRFD_ServiceChargeInINR,ITRFD_Status,ITRFD_InvoiceMail,ITRFD_AssignTo,ITRFD_BillingEntityId,ITRFD_CrBy,ITRFD_CrOn,ITRFD_IPAddress,ITRFD_CompID)
values(@ITRFD_ID,@ITRFD_ITR_ID,@ITRFD_ITRNo,@ITRFD_FinancialYearID,@ITRFD_AssessmentYearID,@ITRFD_ServiceChargeInINR,@ITRFD_Status,@ITRFD_InvoiceMail,@ITRFD_AssignTo,@ITRFD_BillingEntityId,@ITRFD_CrBy,GETDATE(),@ITRFD_IPAddress,@ITRFD_CompID)
set @iUpdateOrSave=3
set @iOper = @ITRFD_ID
End 

/

CREATE Procedure [dbo].[spStandardAudit_AuditSummary_IFC]
(
 @SAIFC_PKID int,
 @SAIFC_SA_ID int,
 @SAIFC_CustID int,
 @SAIFC_YearID int,
 @SAIFC_ReportDate datetime,
 @SAIFC_ReportBy varchar(100),
 @SAIFC_Comments varchar(5000),
 @SAIFC_ColumnCount int,
 @SAIFC_AttachID int,
 @SAIFC_CrBy int,
 @SAIFC_IPAddress varchar(25),
 @SAIFC_CompID int,
 @iUpdateOrSave int Output,
 @iOper int Output
)
 as
  if exists(select SAIFC_PKID from StandardAudit_AuditSummary_IFC where SAIFC_SA_ID=@SAIFC_SA_ID and SAIFC_CustID=@SAIFC_CustID and SAIFC_YearID=@SAIFC_YearID)
begin
    Update StandardAudit_AuditSummary_IFC set SAIFC_ReportDate=@SAIFC_ReportDate,SAIFC_ReportBy=@SAIFC_ReportBy,@SAIFC_Comments=@SAIFC_Comments
 Where SAIFC_SA_ID=@SAIFC_SA_ID and SAIFC_CustID=@SAIFC_CustID And SAIFC_YearID=@SAIFC_YearID and SAIFC_CompID=@SAIFC_CompID
 set @iUpdateOrSave=2
    set @iOper=@SAIFC_PKID
end
  else
begin
  set @SAIFC_PKID=(select isnull(max(SAIFC_PKID)+1,1) from StandardAudit_AuditSummary_IFC)
  Insert into StandardAudit_AuditSummary_IFC (SAIFC_PKID,SAIFC_SA_ID,SAIFC_CustID,SAIFC_YearID,SAIFC_ReportDate,SAIFC_ReportBy,SAIFC_Comments,SAIFC_ColumnCount,SAIFC_AttachID,SAIFC_CrBy,SAIFC_CrOn,SAIFC_IPAddress,SAIFC_CompID)
  values (@SAIFC_PKID,@SAIFC_SA_ID,@SAIFC_CustID,@SAIFC_YearID,@SAIFC_ReportDate,@SAIFC_ReportBy,@SAIFC_Comments,@SAIFC_ColumnCount,@SAIFC_AttachID,@SAIFC_CrBy,Getdate(),@SAIFC_IPAddress,@SAIFC_CompID)
  set @iUpdateOrSave=3
  set @iOper=@SAIFC_PKID
end

/

CREATE Procedure [dbo].[spStandardAudit_AuditSummary_IFCDetails]
(
 @SAIFCD_PKID int,
 @SAIFCD_SAIFC_PKID int,
 @SAIFCD_ColumnRowType int,
 @SAIFCD_Column1 varchar(8000),
 @SAIFCD_Column2 varchar(8000),
 @SAIFCD_Column3 varchar(8000),
 @SAIFCD_Column4 varchar(8000),
 @SAIFCD_Column5 varchar(8000),
 @SAIFCD_Column6 varchar(8000),
 @iUpdateOrSave int Output,
 @iOper int Output
)
 as
begin
  set @SAIFCD_PKID=(select isnull(max(SAIFCD_PKID)+1,1) from StandardAudit_AuditSummary_IFCDetails)
  Insert into StandardAudit_AuditSummary_IFCDetails (SAIFCD_PKID,SAIFCD_SAIFC_PKID,SAIFCD_ColumnRowType,SAIFCD_Column1,SAIFCD_Column2,SAIFCD_Column3,SAIFCD_Column4,SAIFCD_Column5,SAIFCD_Column6)
  values (@SAIFCD_PKID,@SAIFCD_SAIFC_PKID,@SAIFCD_ColumnRowType,@SAIFCD_Column1,@SAIFCD_Column2,@SAIFCD_Column3,@SAIFCD_Column4,@SAIFCD_Column5,@SAIFCD_Column6)
  set @iUpdateOrSave=3
  set @iOper=@SAIFCD_PKID
end

/

CREATE Procedure [dbo].[spStandardAudit_AuditSummary_MRDetails]
(
 @SAMR_PKID int,
 @SAMR_SA_PKID int,
 @SAMR_CustID int,
 @SAMR_YearID int,
 @SAMR_MRID int,
 @SAMR_RequestedDate datetime,
 @SAMR_RequestedByPerson varchar(200),
 @SAMR_RequestedRemarks varchar(5000),
 @SAMR_DueDateReceiveDocs datetime,
 @SAMR_EmailIds varchar(500),
 @SAMR_CrBy int,
 @SAMR_IPAddress varchar(250),
 @SAMR_CompID int,
 @iUpdateOrSave int Output,
 @iOper int Output
)
 as
begin
  set @SAMR_PKID=(select isnull(max(SAMR_PKID)+1,1) from StandardAudit_AuditSummary_MRDetails)
  Insert into StandardAudit_AuditSummary_MRDetails (SAMR_PKID,SAMR_SA_PKID,SAMR_CustID,SAMR_YearID,SAMR_MRID,SAMR_RequestedDate,SAMR_RequestedByPerson,SAMR_RequestedRemarks,SAMR_DueDateReceiveDocs,SAMR_EmailIds,SAMR_CrBy,SAMR_CrOn,SAMR_IPAddress,SAMR_CompID)
  values (@SAMR_PKID,@SAMR_SA_PKID,@SAMR_CustID,@SAMR_YearID,@SAMR_MRID,@SAMR_RequestedDate,@SAMR_RequestedByPerson,@SAMR_RequestedRemarks,@SAMR_DueDateReceiveDocs,@SAMR_EmailIds,@SAMR_CrBy,GetDate(),@SAMR_IPAddress,@SAMR_CompID)
  set @iUpdateOrSave=3
  set @iOper=@SAMR_PKID
end

/

Create Procedure [dbo].[spStandardAudit_Checklist_Details](                     
 @SACD_ID int,             
 @SACD_CustId int,   
 @SACD_AuditId int,
 @SACD_AuditType int,
 @SACD_Heading varchar(2000),                       
 @SACD_CheckpointId varchar(500),                 
 @SACD_EmpId int,              
 @SACD_WorkType int,                  
 @SACD_HrPrDay varchar(10),                  
 @SACD_StartDate datetime,                
 @SACD_EndDate datetime,             
 @SACD_TotalHr varchar(10),
 @SACD_CrBy int,                    
 @SACD_UpdatedBy int,                    
 @SACD_IPAddress varchar(25),                    
 @SACD_CompID int,                    
 @iUpdateOrSave int Output,                    
 @iOper int Output                    
)                    
as                  
if (@SACD_ID>0)                  
 begin
 update StandardAudit_Checklist_Details set SACD_AuditType=@SACD_AuditType,SACD_Heading=@SACD_Heading,SACD_CheckpointId=@SACD_CheckpointId,SACD_EmpId=@SACD_EmpId,
 SACD_WorkType=@SACD_WorkType,SACD_HrPrDay=@SACD_HrPrDay,SACD_StartDate=@SACD_StartDate,SACD_EndDate=@SACD_EndDate,SACD_TotalHr=@SACD_TotalHr,SACD_UpdatedBy=@SACD_UpdatedBy,SACD_UpdatedOn=Getdate()                           
 where SACD_ID=@SACD_ID and SACD_CustId=@SACD_CustId And SACD_AuditId=@SACD_AuditId         
 set @iUpdateOrSave=2
 set @iOper=@SACD_ID
 end
else
 begin
 set @SACD_ID=(select isnull(max(SACD_ID)+1,1) from StandardAudit_Checklist_Details)
 insert into StandardAudit_Checklist_Details (SACD_ID,SACD_AuditType,SACD_CustId,SACD_AuditId,SACD_Heading,SACD_CheckpointId,SACD_EmpId,SACD_WorkType,SACD_HrPrDay,SACD_StartDate,SACD_EndDate,SACD_TotalHr,SACD_CrBy,SACD_CrOn,SACD_IPAddress,SACD_CompID) 
 values(@SACD_ID,@SACD_AuditType,@SACD_CustId,@SACD_AuditId,@SACD_Heading,@SACD_CheckpointId,@SACD_EmpId,@SACD_WorkType,@SACD_HrPrDay,@SACD_StartDate,@SACD_EndDate,@SACD_TotalHr,@SACD_CrBy,GetDate(),@SACD_IPAddress,@SACD_CompID)               
 set @iUpdateOrSave=3
 set @iOper = @SACD_ID
end 

/

  
CREATE Procedure [dbo].[spAcc_GroupingAlias]    
(  
@AGA_ID int,      
@AGA_Description varchar(500),      
@AGA_GLID int,      
@AGA_GLDESC varchar (500),  
@AGA_GrpLevel int,      
@AGA_scheduletype int,     
@AGA_Orgtype int,     
@AGA_Compid int,     
@AGA_Status varchar(10),  
@AGA_Createdby int,                  
@AGA_IPaddress varchar (25),  
@iUpdateOrSave int Output,                  
@iOper int Output          
)     
  
As                        
if exists(select AGA_ID from Acc_GroupingAlias where AGA_ID = @AGA_ID )                    
Begin      
set @AGA_ID=(select AGA_ID from Acc_GroupingAlias where AGA_ID= @AGA_ID And AGA_Description=@AGA_Description)                    
Update Acc_GroupingAlias set  AGA_GLID=@AGA_GLID,AGA_GLDESC=@AGA_GLDESC,AGA_GrpLevel=@AGA_GrpLevel,AGA_scheduletype=@AGA_scheduletype,  
AGA_Orgtype = @AGA_Orgtype,AGA_Compid=@AGA_Compid,AGA_Status=@AGA_Status,AGA_Createdby=@AGA_Createdby,AGA_CreatedOn=GETDATE()  
where AGA_ID=@AGA_ID              
set @iUpdateOrSave=2                 
set @iOper = @AGA_ID                 
End                  
Else                     
Begin    
set @AGA_ID=(select IsNull(Max(AGA_ID)+1,1) from Acc_GroupingAlias)                    
insert into Acc_GroupingAlias(AGA_ID,AGA_Description,AGA_GLID,AGA_GLDESC,AGA_GrpLevel,AGA_scheduletype,AGA_Orgtype,AGA_Compid,  
AGA_Status,AGA_Createdby,AGA_CreatedOn,AGA_IPaddress)                  
values(@AGA_ID,@AGA_Description ,@AGA_GLID,@AGA_GLDESC,@AGA_GrpLevel,@AGA_scheduletype,@AGA_Orgtype,@AGA_Compid,@AGA_Status,  
@AGA_Createdby, GETDATE(),@AGA_IPaddress)  
set @iUpdateOrSave=3                   
set @iOper =@AGA_ID                      
End   
  

